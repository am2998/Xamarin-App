# ACW for Xamarin.Android.Support.v4
-keep class android.support.v4.util.ArrayMap
-keepclassmembers class android.support.v4.util.ArrayMap {
   <init>(...);
   <init>(...);
   <init>(...);
   *** containsAll(...);
   *** entrySet(...);
   *** keySet(...);
   *** putAll(...);
   *** removeAll(...);
   *** retainAll(...);
   *** values(...);
}

-keep class android.support.v4.graphics.drawable.RoundedBitmapDrawable
-keepclassmembers class android.support.v4.graphics.drawable.RoundedBitmapDrawable {
   *** getAlpha(...);
   *** setAlpha(...);
   *** getBitmap(...);
   *** isCircular(...);
   *** setCircular(...);
   *** getColorFilter(...);
   *** setColorFilter(...);
   *** getCornerRadius(...);
   *** setCornerRadius(...);
   *** getGravity(...);
   *** setGravity(...);
   *** hasAntiAlias(...);
   *** hasMipMap(...);
   *** getOpacity(...);
   *** getPaint(...);
   *** draw(...);
   *** setAntiAlias(...);
   *** setMipMap(...);
   *** setTargetDensity(...);
   *** setTargetDensity(...);
   *** setTargetDensity(...);
}

-keep class android.support.v4.app.NotificationCompat$Action$Builder
-keepclassmembers class android.support.v4.app.NotificationCompat$Action$Builder {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getExtras(...);
   *** addExtras(...);
   *** addRemoteInput(...);
   *** build(...);
   *** extend(...);
}

-keep class android.support.v4.app.NotificationCompat$Action$Extender
-keepclassmembers class android.support.v4.app.NotificationCompat$Action$Extender {
}

-keep class android.support.v4.app.NotificationCompat$Action$WearableExtender
-keepclassmembers class android.support.v4.app.NotificationCompat$Action$WearableExtender {
   <init>(...);
   <init>(...);
   *** getCancelLabel(...);
   *** getConfirmLabel(...);
   *** getInProgressLabel(...);
   *** isAvailableOffline(...);
   *** clone(...);
   *** extend(...);
   *** setAvailableOffline(...);
   *** setCancelLabel(...);
   *** setConfirmLabel(...);
   *** setInProgressLabel(...);
}

-keep class android.support.v4.app.NotificationCompat$Action
-keepclassmembers class android.support.v4.app.NotificationCompat$Action {
   <init>(...);
   <init>(...);
   *** getActionIntent(...);
   *** getExtras(...);
   *** getIcon(...);
   *** getTitle(...);
   *** getRemoteInputs(...);
}

-keep class android.support.v4.app.NotificationCompat$BigPictureStyle
-keepclassmembers class android.support.v4.app.NotificationCompat$BigPictureStyle {
   <init>(...);
   <init>(...);
   *** bigLargeIcon(...);
   *** bigPicture(...);
   *** setBigContentTitle(...);
   *** setSummaryText(...);
}

-keep class android.support.v4.app.NotificationCompat$BigTextStyle
-keepclassmembers class android.support.v4.app.NotificationCompat$BigTextStyle {
   <init>(...);
   <init>(...);
   *** bigText(...);
   *** setBigContentTitle(...);
   *** setSummaryText(...);
}

-keep class android.support.v4.app.NotificationCompat$Builder
-keepclassmembers class android.support.v4.app.NotificationCompat$Builder {
   <init>(...);
   *** getExtender(...);
   *** getExtras(...);
   *** getNotification(...);
   *** addAction(...);
   *** addAction(...);
   *** addExtras(...);
   *** addPerson(...);
   *** build(...);
   *** extend(...);
   *** limitCharSequenceLength(...);
   *** setAutoCancel(...);
   *** setCategory(...);
   *** setColor(...);
   *** setContent(...);
   *** setContentInfo(...);
   *** setContentIntent(...);
   *** setContentText(...);
   *** setContentTitle(...);
   *** setDefaults(...);
   *** setDeleteIntent(...);
   *** setExtras(...);
   *** setFullScreenIntent(...);
   *** setGroup(...);
   *** setGroupSummary(...);
   *** setLargeIcon(...);
   *** setLights(...);
   *** setLocalOnly(...);
   *** setNumber(...);
   *** setOngoing(...);
   *** setOnlyAlertOnce(...);
   *** setPriority(...);
   *** setProgress(...);
   *** setPublicVersion(...);
   *** setShowWhen(...);
   *** setSmallIcon(...);
   *** setSmallIcon(...);
   *** setSortKey(...);
   *** setSound(...);
   *** setSound(...);
   *** setStyle(...);
   *** setSubText(...);
   *** setTicker(...);
   *** setTicker(...);
   *** setUsesChronometer(...);
   *** setVibrate(...);
   *** setVisibility(...);
   *** setWhen(...);
}

-keep class android.support.v4.app.NotificationCompat$BuilderExtender
-keepclassmembers class android.support.v4.app.NotificationCompat$BuilderExtender {
   <init>(...);
   *** build(...);
}

-keep class android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$Builder
-keepclassmembers class android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$Builder {
   <init>(...);
   *** addMessage(...);
   *** build(...);
   *** setLatestTimestamp(...);
   *** setReadPendingIntent(...);
   *** setReplyAction(...);
}

-keep class android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation
-keepclassmembers class android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation {
   *** getLatestTimestamp(...);
   *** getParticipant(...);
   *** getReadPendingIntent(...);
   *** getRemoteInput(...);
   *** getReplyPendingIntent(...);
   *** getMessages(...);
   *** getParticipants(...);
}

-keep class android.support.v4.app.NotificationCompat$CarExtender
-keepclassmembers class android.support.v4.app.NotificationCompat$CarExtender {
   <init>(...);
   <init>(...);
   *** getColor(...);
   *** getLargeIcon(...);
   *** extend(...);
   *** getUnreadConversation(...);
   *** setColor(...);
   *** setLargeIcon(...);
   *** setUnreadConversation(...);
}

-keep class android.support.v4.app.NotificationCompat$Extender
-keepclassmembers class android.support.v4.app.NotificationCompat$Extender {
}

-keep class android.support.v4.app.NotificationCompat$InboxStyle
-keepclassmembers class android.support.v4.app.NotificationCompat$InboxStyle {
   <init>(...);
   <init>(...);
   *** addLine(...);
   *** setBigContentTitle(...);
   *** setSummaryText(...);
}

-keep class android.support.v4.app.NotificationCompat$Style
-keepclassmembers class android.support.v4.app.NotificationCompat$Style {
   <init>(...);
   *** build(...);
   *** setBuilder(...);
}

-keep class android.support.v4.app.NotificationCompat$Style
-keepclassmembers class android.support.v4.app.NotificationCompat$Style {
}

-keep class android.support.v4.app.NotificationCompat$WearableExtender
-keepclassmembers class android.support.v4.app.NotificationCompat$WearableExtender {
   <init>(...);
   <init>(...);
   *** getActions(...);
   *** getBackground(...);
   *** getContentAction(...);
   *** getContentIcon(...);
   *** getContentIconGravity(...);
   *** getContentIntentAvailableOffline(...);
   *** getCustomContentHeight(...);
   *** getCustomSizePreset(...);
   *** getDisplayIntent(...);
   *** getGravity(...);
   *** getHintAvoidBackgroundClipping(...);
   *** getHintHideIcon(...);
   *** getHintScreenTimeout(...);
   *** getHintShowBackgroundOnly(...);
   *** getPages(...);
   *** getStartScrollBottom(...);
   *** addAction(...);
   *** addActions(...);
   *** addPage(...);
   *** addPages(...);
   *** clearActions(...);
   *** clearPages(...);
   *** clone(...);
   *** extend(...);
   *** setBackground(...);
   *** setContentAction(...);
   *** setContentIcon(...);
   *** setContentIconGravity(...);
   *** setContentIntentAvailableOffline(...);
   *** setCustomContentHeight(...);
   *** setCustomSizePreset(...);
   *** setDisplayIntent(...);
   *** setGravity(...);
   *** setHintAvoidBackgroundClipping(...);
   *** setHintHideIcon(...);
   *** setHintScreenTimeout(...);
   *** setHintShowBackgroundOnly(...);
   *** setStartScrollBottom(...);
}

-keep class android.support.v4.app.NotificationCompat
-keepclassmembers class android.support.v4.app.NotificationCompat {
   <init>(...);
   *** getAction(...);
   *** getActionCount(...);
   *** getCategory(...);
   *** getExtras(...);
   *** getGroup(...);
   *** getLocalOnly(...);
   *** getSortKey(...);
   *** isGroupSummary(...);
}

-keep class android.support.v4.view.ViewPager$Decor
-keepclassmembers class android.support.v4.view.ViewPager$Decor {
}

-keep class android.support.v4.view.ViewPager$ItemInfo
-keepclassmembers class android.support.v4.view.ViewPager$ItemInfo {
}

-keep class android.support.v4.view.ViewPager$LayoutParams
-keepclassmembers class android.support.v4.view.ViewPager$LayoutParams {
   <init>(...);
   <init>(...);
}

-keep class android.support.v4.view.ViewPager$MyAccessibilityDelegate
-keepclassmembers class android.support.v4.view.ViewPager$MyAccessibilityDelegate {
}

-keep class android.support.v4.view.ViewPager$OnPageChangeListener
-keepclassmembers class android.support.v4.view.ViewPager$OnPageChangeListener {
}

-keep class mono.android.support.v4.view.ViewPager_OnPageChangeListenerImplementor
-keepclassmembers class mono.android.support.v4.view.ViewPager_OnPageChangeListenerImplementor {
}

-keep class android.support.v4.view.ViewPager$PageTransformer
-keepclassmembers class android.support.v4.view.ViewPager$PageTransformer {
}

-keep class android.support.v4.view.ViewPager$PagerObserver
-keepclassmembers class android.support.v4.view.ViewPager$PagerObserver {
}

-keep class android.support.v4.view.ViewPager$SavedState
-keepclassmembers class android.support.v4.view.ViewPager$SavedState {
   <init>(...);
}

-keep class android.support.v4.view.ViewPager$SimpleOnPageChangeListener
-keepclassmembers class android.support.v4.view.ViewPager$SimpleOnPageChangeListener {
   <init>(...);
   *** onPageScrollStateChanged(...);
   *** onPageScrolled(...);
   *** onPageSelected(...);
}

-keep class android.support.v4.view.ViewPager$ViewPositionComparator
-keepclassmembers class android.support.v4.view.ViewPager$ViewPositionComparator {
   *** compare(...);
   *** compare(...);
}

-keep class android.support.v4.view.ViewPager
-keepclassmembers class android.support.v4.view.ViewPager {
   <init>(...);
   <init>(...);
   *** canScrollHorizontally(...);
   *** getAdapter(...);
   *** setAdapter(...);
   *** getCurrentItem(...);
   *** setCurrentItem(...);
   *** isFakeDragging(...);
   *** getOffscreenPageLimit(...);
   *** setOffscreenPageLimit(...);
   *** getPageMargin(...);
   *** setPageMargin(...);
   *** addOnPageChangeListener(...);
   *** arrowScroll(...);
   *** beginFakeDrag(...);
   *** canScroll(...);
   *** clearOnPageChangeListeners(...);
   *** endFakeDrag(...);
   *** executeKeyEvent(...);
   *** fakeDragBy(...);
   *** onLayout(...);
   *** onPageScrolled(...);
   *** onRestoreInstanceState(...);
   *** onSaveInstanceState(...);
   *** removeOnPageChangeListener(...);
   *** setCurrentItem(...);
   *** setOnPageChangeListener(...);
   *** setPageMarginDrawable(...);
   *** setPageMarginDrawable(...);
   *** setPageTransformer(...);
}

-keep class android.support.v4.app.FragmentActivity$HostCallbacks
-keepclassmembers class android.support.v4.app.FragmentActivity$HostCallbacks {
   <init>(...);
   *** onAttachFragment(...);
   *** onGetHost(...);
}

-keep class android.support.v4.app.FragmentActivity$NonConfigurationInstances
-keepclassmembers class android.support.v4.app.FragmentActivity$NonConfigurationInstances {
}

-keep class android.support.v4.app.FragmentActivity
-keepclassmembers class android.support.v4.app.FragmentActivity {
   <init>(...);
   *** dump(...);
   *** onRequestPermissionsResult(...);
   *** getLastCustomNonConfigurationInstance(...);
   *** getSupportFragmentManager(...);
   *** getSupportLoaderManager(...);
   *** onAttachFragment(...);
   *** onCreate(...);
   *** onCreateView(...);
   *** onCreateView(...);
   *** onPrepareOptionsPanel(...);
   *** onRequestPermissionsResult(...);
   *** onResumeFragments(...);
   *** onRetainCustomNonConfigurationInstance(...);
   *** onRetainNonConfigurationInstance(...);
   *** onStateNotSaved(...);
   *** setEnterSharedElementCallback(...);
   *** setExitSharedElementCallback(...);
   *** startActivityFromFragment(...);
   *** supportFinishAfterTransition(...);
   *** supportInvalidateOptionsMenu(...);
   *** supportPostponeEnterTransition(...);
   *** supportStartPostponedEnterTransition(...);
   *** validateRequestPermissionsRequestCode(...);
}

-keep class android.support.v4.widget.NestedScrollView$AccessibilityDelegate
-keepclassmembers class android.support.v4.widget.NestedScrollView$AccessibilityDelegate {
}

-keep class android.support.v4.widget.NestedScrollView$SavedState
-keepclassmembers class android.support.v4.widget.NestedScrollView$SavedState {
   <init>(...);
}

-keep class android.support.v4.widget.NestedScrollView
-keepclassmembers class android.support.v4.widget.NestedScrollView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isFillViewport(...);
   *** setFillViewport(...);
   *** hasNestedScrollingParent(...);
   *** getMaxScrollAmount(...);
   *** getNestedScrollAxes(...);
   *** isNestedScrollingEnabled(...);
   *** setNestedScrollingEnabled(...);
   *** isSmoothScrollingEnabled(...);
   *** setSmoothScrollingEnabled(...);
   *** arrowScroll(...);
   *** computeScrollDeltaToGetChildRectOnScreen(...);
   *** dispatchNestedFling(...);
   *** dispatchNestedPreFling(...);
   *** dispatchNestedPreScroll(...);
   *** dispatchNestedScroll(...);
   *** executeKeyEvent(...);
   *** fling(...);
   *** fullScroll(...);
   *** onAttachedToWindow(...);
   *** onNestedFling(...);
   *** onNestedPreFling(...);
   *** onNestedPreScroll(...);
   *** onNestedScroll(...);
   *** onNestedScrollAccepted(...);
   *** onStartNestedScroll(...);
   *** onStopNestedScroll(...);
   *** pageScroll(...);
   *** smoothScrollBy(...);
   *** smoothScrollTo(...);
   *** startNestedScroll(...);
   *** stopNestedScroll(...);
}

-keep class android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener
-keepclassmembers class android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener {
}

-keep class mono.android.support.v4.widget.SwipeRefreshLayout_OnRefreshListenerImplementor
-keepclassmembers class mono.android.support.v4.widget.SwipeRefreshLayout_OnRefreshListenerImplementor {
}

-keep class android.support.v4.widget.SwipeRefreshLayout
-keepclassmembers class android.support.v4.widget.SwipeRefreshLayout {
   <init>(...);
   <init>(...);
   *** hasNestedScrollingParent(...);
   *** getNestedScrollAxes(...);
   *** isNestedScrollingEnabled(...);
   *** setNestedScrollingEnabled(...);
   *** getProgressCircleDiameter(...);
   *** isRefreshing(...);
   *** setRefreshing(...);
   *** canChildScrollUp(...);
   *** dispatchNestedFling(...);
   *** dispatchNestedPreFling(...);
   *** dispatchNestedPreScroll(...);
   *** dispatchNestedScroll(...);
   *** onLayout(...);
   *** onMeasure(...);
   *** onNestedFling(...);
   *** onNestedPreFling(...);
   *** onNestedPreScroll(...);
   *** onNestedScroll(...);
   *** onNestedScrollAccepted(...);
   *** onStartNestedScroll(...);
   *** onStopNestedScroll(...);
   *** setColorScheme(...);
   *** setColorSchemeColors(...);
   *** setColorSchemeResources(...);
   *** setDistanceToTriggerSync(...);
   *** setOnRefreshListener(...);
   *** setProgressBackgroundColor(...);
   *** setProgressBackgroundColorSchemeColor(...);
   *** setProgressBackgroundColorSchemeResource(...);
   *** setProgressViewEndTarget(...);
   *** setProgressViewOffset(...);
   *** setSize(...);
   *** startNestedScroll(...);
   *** stopNestedScroll(...);
}

-keep class android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat
-keepclassmembers class android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat {
   *** capabilityToString(...);
   *** feedbackTypeToString(...);
   *** flagToString(...);
   *** getCanRetrieveWindowContent(...);
   *** getCapabilities(...);
   *** getDescription(...);
   *** getId(...);
   *** getResolveInfo(...);
   *** getSettingsActivityName(...);
}

-keep class android.support.v4.animation.AnimatorCompatHelper
-keepclassmembers class android.support.v4.animation.AnimatorCompatHelper {
   *** clearInterpolator(...);
   *** emptyValueAnimator(...);
}

-keep class android.support.v4.animation.AnimatorCompatHelper
-keepclassmembers class android.support.v4.animation.AnimatorCompatHelper {
}

-keep class android.support.v4.animation.AnimatorListenerCompat
-keepclassmembers class android.support.v4.animation.AnimatorListenerCompat {
}

-keep class android.support.v4.animation.AnimatorUpdateListenerCompat
-keepclassmembers class android.support.v4.animation.AnimatorUpdateListenerCompat {
}

-keep class android.support.v4.animation.ValueAnimatorCompat
-keepclassmembers class android.support.v4.animation.ValueAnimatorCompat {
}

-keep class android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC
-keepclassmembers class android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC {
   *** getThemeUpIndicator(...);
   *** setActionBarDescription(...);
   *** setActionBarUpIndicator(...);
}

-keep class android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplJellybeanMR2
-keepclassmembers class android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplJellybeanMR2 {
   *** getThemeUpIndicator(...);
   *** setActionBarDescription(...);
   *** setActionBarUpIndicator(...);
}

-keep class android.support.v4.app.ActionBarDrawerToggle$Delegate
-keepclassmembers class android.support.v4.app.ActionBarDrawerToggle$Delegate {
}

-keep class android.support.v4.app.ActionBarDrawerToggle$DelegateProvider
-keepclassmembers class android.support.v4.app.ActionBarDrawerToggle$DelegateProvider {
}

-keep class android.support.v4.app.ActionBarDrawerToggle$SlideDrawable
-keepclassmembers class android.support.v4.app.ActionBarDrawerToggle$SlideDrawable {
   *** getPosition(...);
   *** setPosition(...);
   *** setOffset(...);
}

-keep class android.support.v4.app.ActionBarDrawerToggle
-keepclassmembers class android.support.v4.app.ActionBarDrawerToggle {
   <init>(...);
   <init>(...);
   *** isDrawerIndicatorEnabled(...);
   *** setDrawerIndicatorEnabled(...);
   *** onConfigurationChanged(...);
   *** onDrawerClosed(...);
   *** onDrawerOpened(...);
   *** onDrawerSlide(...);
   *** onDrawerStateChanged(...);
   *** onOptionsItemSelected(...);
   *** setHomeAsUpIndicator(...);
   *** setHomeAsUpIndicator(...);
   *** syncState(...);
}

-keep class android.support.v4.app.ActivityCompat$OnRequestPermissionsResultCallback
-keepclassmembers class android.support.v4.app.ActivityCompat$OnRequestPermissionsResultCallback {
}

-keep class android.support.v4.app.ActivityCompat
-keepclassmembers class android.support.v4.app.ActivityCompat {
   <init>(...);
   *** finishAffinity(...);
   *** finishAfterTransition(...);
   *** getReferrer(...);
   *** invalidateOptionsMenu(...);
   *** postponeEnterTransition(...);
   *** requestPermissions(...);
   *** setEnterSharedElementCallback(...);
   *** setExitSharedElementCallback(...);
   *** shouldShowRequestPermissionRationale(...);
   *** startActivity(...);
   *** startActivityForResult(...);
   *** startPostponedEnterTransition(...);
}

-keep class android.support.v4.app.ActivityManagerCompat
-keepclassmembers class android.support.v4.app.ActivityManagerCompat {
   *** isLowRamDevice(...);
}

-keep class android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImpl21
-keepclassmembers class android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImpl21 {
}

-keep class android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImplJB
-keepclassmembers class android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImplJB {
}

-keep class android.support.v4.app.ActivityOptionsCompat
-keepclassmembers class android.support.v4.app.ActivityOptionsCompat {
   <init>(...);
   *** makeCustomAnimation(...);
   *** makeScaleUpAnimation(...);
   *** makeSceneTransitionAnimation(...);
   *** makeSceneTransitionAnimation(...);
   *** makeThumbnailScaleUpAnimation(...);
   *** toBundle(...);
   *** update(...);
}

-keep class android.support.v4.app.AppOpsManagerCompat
-keepclassmembers class android.support.v4.app.AppOpsManagerCompat {
   <init>(...);
   *** noteOp(...);
   *** noteProxyOp(...);
   *** permissionToOp(...);
}

-keep class android.support.v4.app.AppOpsManagerCompat23
-keepclassmembers class android.support.v4.app.AppOpsManagerCompat23 {
   <init>(...);
   *** noteOp(...);
   *** noteProxyOp(...);
   *** permissionToOp(...);
}

-keep class android.support.v4.app.BundleCompat
-keepclassmembers class android.support.v4.app.BundleCompat {
   <init>(...);
   *** getBinder(...);
   *** putBinder(...);
}

-keep class android.support.v4.app.DialogFragment
-keepclassmembers class android.support.v4.app.DialogFragment {
   <init>(...);
   *** isCancelable(...);
   *** setCancelable(...);
   *** getDialog(...);
   *** getShowsDialog(...);
   *** setShowsDialog(...);
   *** getTheme(...);
   *** dismiss(...);
   *** dismissAllowingStateLoss(...);
   *** onCancel(...);
   *** onCreateDialog(...);
   *** onDismiss(...);
   *** setStyle(...);
   *** setupDialog(...);
   *** show(...);
   *** show(...);
}

-keep class android.support.v4.app.Fragment$InstantiationException
-keepclassmembers class android.support.v4.app.Fragment$InstantiationException {
   <init>(...);
}

-keep class android.support.v4.app.Fragment$SavedState
-keepclassmembers class android.support.v4.app.Fragment$SavedState {
   *** describeContents(...);
   *** writeToParcel(...);
}

-keep class android.support.v4.app.Fragment
-keepclassmembers class android.support.v4.app.Fragment {
   <init>(...);
   *** getActivity(...);
   *** getAllowEnterTransitionOverlap(...);
   *** setAllowEnterTransitionOverlap(...);
   *** getAllowReturnTransitionOverlap(...);
   *** setAllowReturnTransitionOverlap(...);
   *** getArguments(...);
   *** setArguments(...);
   *** getChildFragmentManager(...);
   *** getContext(...);
   *** getEnterTransition(...);
   *** setEnterTransition(...);
   *** getExitTransition(...);
   *** setExitTransition(...);
   *** getFragmentManager(...);
   *** hasOptionsMenu(...);
   *** setHasOptionsMenu(...);
   *** getHost(...);
   *** getId(...);
   *** isAdded(...);
   *** isDetached(...);
   *** isHidden(...);
   *** isInLayout(...);
   *** isMenuVisible(...);
   *** isRemoving(...);
   *** isResumed(...);
   *** isVisible(...);
   *** getLoaderManager(...);
   *** getParentFragment(...);
   *** getReenterTransition(...);
   *** setReenterTransition(...);
   *** getResources(...);
   *** getRetainInstance(...);
   *** setRetainInstance(...);
   *** getReturnTransition(...);
   *** setReturnTransition(...);
   *** getSharedElementEnterTransition(...);
   *** setSharedElementEnterTransition(...);
   *** getSharedElementReturnTransition(...);
   *** setSharedElementReturnTransition(...);
   *** getTag(...);
   *** getTargetFragment(...);
   *** getTargetRequestCode(...);
   *** getUserVisibleHint(...);
   *** setUserVisibleHint(...);
   *** getView(...);
   *** dump(...);
   *** equals(...);
   *** getLayoutInflater(...);
   *** getString(...);
   *** getString(...);
   *** getText(...);
   *** hashCode(...);
   *** instantiate(...);
   *** instantiate(...);
   *** onActivityCreated(...);
   *** onActivityResult(...);
   *** onAttach(...);
   *** onAttach(...);
   *** onConfigurationChanged(...);
   *** onContextItemSelected(...);
   *** onCreate(...);
   *** onCreateAnimation(...);
   *** onCreateContextMenu(...);
   *** onCreateOptionsMenu(...);
   *** onCreateView(...);
   *** onDestroy(...);
   *** onDestroyOptionsMenu(...);
   *** onDestroyView(...);
   *** onDetach(...);
   *** onHiddenChanged(...);
   *** onInflate(...);
   *** onInflate(...);
   *** onLowMemory(...);
   *** onOptionsItemSelected(...);
   *** onOptionsMenuClosed(...);
   *** onPause(...);
   *** onPrepareOptionsMenu(...);
   *** onRequestPermissionsResult(...);
   *** onResume(...);
   *** onSaveInstanceState(...);
   *** onStart(...);
   *** onStop(...);
   *** onViewCreated(...);
   *** onViewStateRestored(...);
   *** registerForContextMenu(...);
   *** requestPermissions(...);
   *** setEnterSharedElementCallback(...);
   *** setExitSharedElementCallback(...);
   *** setInitialSavedState(...);
   *** setMenuVisibility(...);
   *** setTargetFragment(...);
   *** shouldShowRequestPermissionRationale(...);
   *** startActivity(...);
   *** startActivityForResult(...);
   *** unregisterForContextMenu(...);
}

-keep class android.support.v4.app.FragmentContainer
-keepclassmembers class android.support.v4.app.FragmentContainer {
   <init>(...);
   *** onFindViewById(...);
   *** onHasView(...);
}

-keep class android.support.v4.app.FragmentContainer
-keepclassmembers class android.support.v4.app.FragmentContainer {
   *** onFindViewById(...);
   *** onHasView(...);
}

-keep class android.support.v4.app.FragmentController
-keepclassmembers class android.support.v4.app.FragmentController {
   *** getActiveFragmentsCount(...);
   *** getSupportFragmentManager(...);
   *** getSupportLoaderManager(...);
   *** attachHost(...);
   *** createController(...);
   *** dispatchActivityCreated(...);
   *** dispatchConfigurationChanged(...);
   *** dispatchContextItemSelected(...);
   *** dispatchCreate(...);
   *** dispatchCreateOptionsMenu(...);
   *** dispatchDestroy(...);
   *** dispatchDestroyView(...);
   *** dispatchLowMemory(...);
   *** dispatchOptionsItemSelected(...);
   *** dispatchOptionsMenuClosed(...);
   *** dispatchPause(...);
   *** dispatchPrepareOptionsMenu(...);
   *** dispatchReallyStop(...);
   *** dispatchResume(...);
   *** dispatchStart(...);
   *** dispatchStop(...);
   *** doLoaderDestroy(...);
   *** doLoaderRetain(...);
   *** doLoaderStart(...);
   *** doLoaderStop(...);
   *** dumpLoaders(...);
   *** execPendingActions(...);
   *** getActiveFragments(...);
   *** noteStateNotSaved(...);
   *** onCreateView(...);
   *** reportLoaderStart(...);
   *** restoreAllState(...);
   *** restoreLoaderNonConfig(...);
   *** retainLoaderNonConfig(...);
   *** retainNonConfig(...);
   *** saveAllState(...);
}

-keep class android.support.v4.app.FragmentHostCallback
-keepclassmembers class android.support.v4.app.FragmentHostCallback {
   <init>(...);
   *** onDump(...);
   *** onFindViewById(...);
   *** onGetHost(...);
   *** onGetLayoutInflater(...);
   *** onGetWindowAnimations(...);
   *** onHasView(...);
   *** onHasWindowAnimations(...);
   *** onRequestPermissionsFromFragment(...);
   *** onShouldSaveFragmentState(...);
   *** onShouldShowRequestPermissionRationale(...);
   *** onStartActivityFromFragment(...);
   *** onSupportInvalidateOptionsMenu(...);
}

-keep class android.support.v4.app.FragmentHostCallback
-keepclassmembers class android.support.v4.app.FragmentHostCallback {
   *** onGetHost(...);
}

-keep class android.support.v4.app.FragmentManager$BackStackEntry
-keepclassmembers class android.support.v4.app.FragmentManager$BackStackEntry {
}

-keep class android.support.v4.app.FragmentManager$OnBackStackChangedListener
-keepclassmembers class android.support.v4.app.FragmentManager$OnBackStackChangedListener {
}

-keep class mono.android.support.v4.app.FragmentManager_OnBackStackChangedListenerImplementor
-keepclassmembers class mono.android.support.v4.app.FragmentManager_OnBackStackChangedListenerImplementor {
}

-keep class android.support.v4.app.FragmentManager
-keepclassmembers class android.support.v4.app.FragmentManager {
   <init>(...);
   *** getBackStackEntryCount(...);
   *** getFragments(...);
   *** isDestroyed(...);
   *** addOnBackStackChangedListener(...);
   *** beginTransaction(...);
   *** dump(...);
   *** enableDebugLogging(...);
   *** executePendingTransactions(...);
   *** findFragmentById(...);
   *** findFragmentByTag(...);
   *** getBackStackEntryAt(...);
   *** getFragment(...);
   *** openTransaction(...);
   *** popBackStack(...);
   *** popBackStack(...);
   *** popBackStack(...);
   *** popBackStackImmediate(...);
   *** popBackStackImmediate(...);
   *** popBackStackImmediate(...);
   *** putFragment(...);
   *** removeOnBackStackChangedListener(...);
   *** saveFragmentInstanceState(...);
}

-keep class android.support.v4.app.FragmentManager
-keepclassmembers class android.support.v4.app.FragmentManager {
   *** getBackStackEntryCount(...);
   *** getFragments(...);
   *** isDestroyed(...);
   *** addOnBackStackChangedListener(...);
   *** beginTransaction(...);
   *** dump(...);
   *** executePendingTransactions(...);
   *** findFragmentById(...);
   *** findFragmentByTag(...);
   *** getBackStackEntryAt(...);
   *** getFragment(...);
   *** popBackStack(...);
   *** popBackStack(...);
   *** popBackStack(...);
   *** popBackStackImmediate(...);
   *** popBackStackImmediate(...);
   *** popBackStackImmediate(...);
   *** putFragment(...);
   *** removeOnBackStackChangedListener(...);
   *** saveFragmentInstanceState(...);
}

-keep class android.support.v4.app.FragmentPagerAdapter
-keepclassmembers class android.support.v4.app.FragmentPagerAdapter {
   <init>(...);
   *** getItem(...);
   *** getItemId(...);
   *** isViewFromObject(...);
}

-keep class android.support.v4.app.FragmentPagerAdapter
-keepclassmembers class android.support.v4.app.FragmentPagerAdapter {
   *** getItem(...);
   *** getCount(...);
}

-keep class android.support.v4.app.FragmentStatePagerAdapter
-keepclassmembers class android.support.v4.app.FragmentStatePagerAdapter {
   <init>(...);
   *** getItem(...);
   *** isViewFromObject(...);
}

-keep class android.support.v4.app.FragmentStatePagerAdapter
-keepclassmembers class android.support.v4.app.FragmentStatePagerAdapter {
   *** getItem(...);
   *** getCount(...);
}

-keep class android.support.v4.app.FragmentTabHost$DummyTabFactory
-keepclassmembers class android.support.v4.app.FragmentTabHost$DummyTabFactory {
   <init>(...);
   *** createTabContent(...);
}

-keep class android.support.v4.app.FragmentTabHost$SavedState
-keepclassmembers class android.support.v4.app.FragmentTabHost$SavedState {
}

-keep class android.support.v4.app.FragmentTabHost$TabInfo
-keepclassmembers class android.support.v4.app.FragmentTabHost$TabInfo {
}

-keep class android.support.v4.app.FragmentTabHost
-keepclassmembers class android.support.v4.app.FragmentTabHost {
   <init>(...);
   <init>(...);
   *** addTab(...);
   *** onTabChanged(...);
   *** setup(...);
   *** setup(...);
}

-keep class android.support.v4.app.FragmentTransaction
-keepclassmembers class android.support.v4.app.FragmentTransaction {
   <init>(...);
   *** isAddToBackStackAllowed(...);
   *** isEmpty(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** addSharedElement(...);
   *** addToBackStack(...);
   *** attach(...);
   *** commit(...);
   *** commitAllowingStateLoss(...);
   *** detach(...);
   *** disallowAddToBackStack(...);
   *** hide(...);
   *** remove(...);
   *** replace(...);
   *** replace(...);
   *** setBreadCrumbShortTitle(...);
   *** setBreadCrumbShortTitle(...);
   *** setBreadCrumbTitle(...);
   *** setBreadCrumbTitle(...);
   *** setCustomAnimations(...);
   *** setCustomAnimations(...);
   *** setTransition(...);
   *** setTransitionStyle(...);
   *** show(...);
}

-keep class android.support.v4.app.FragmentTransaction
-keepclassmembers class android.support.v4.app.FragmentTransaction {
   *** isAddToBackStackAllowed(...);
   *** isEmpty(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** addSharedElement(...);
   *** addToBackStack(...);
   *** attach(...);
   *** commit(...);
   *** commitAllowingStateLoss(...);
   *** detach(...);
   *** disallowAddToBackStack(...);
   *** hide(...);
   *** remove(...);
   *** replace(...);
   *** replace(...);
   *** setBreadCrumbShortTitle(...);
   *** setBreadCrumbShortTitle(...);
   *** setBreadCrumbTitle(...);
   *** setBreadCrumbTitle(...);
   *** setCustomAnimations(...);
   *** setCustomAnimations(...);
   *** setTransition(...);
   *** setTransitionStyle(...);
   *** show(...);
}

-keep class android.support.v4.app.NotificationBuilderWithBuilderAccessor
-keepclassmembers class android.support.v4.app.NotificationBuilderWithBuilderAccessor {
}

-keep class android.support.v4.app.INotificationSideChannel$Stub$Proxy
-keepclassmembers class android.support.v4.app.INotificationSideChannel$Stub$Proxy {
   *** getInterfaceDescriptor(...);
   *** asBinder(...);
   *** cancel(...);
   *** cancelAll(...);
   *** notify(...);
}

-keep class android.support.v4.app.INotificationSideChannel$Stub
-keepclassmembers class android.support.v4.app.INotificationSideChannel$Stub {
   <init>(...);
   *** asBinder(...);
   *** asInterface(...);
   *** onTransact(...);
   *** cancel(...);
   *** cancelAll(...);
   *** notify(...);
}

-keep class android.support.v4.app.INotificationSideChannel$Stub
-keepclassmembers class android.support.v4.app.INotificationSideChannel$Stub {
   *** cancel(...);
   *** cancelAll(...);
   *** notify(...);
}

-keep class android.support.v4.app.INotificationSideChannel
-keepclassmembers class android.support.v4.app.INotificationSideChannel {
}

-keep class android.support.v4.app.ListFragment
-keepclassmembers class android.support.v4.app.ListFragment {
   <init>(...);
   *** getListAdapter(...);
   *** setListAdapter(...);
   *** getListView(...);
   *** getSelectedItemId(...);
   *** getSelectedItemPosition(...);
   *** onListItemClick(...);
   *** setEmptyText(...);
   *** setListShown(...);
   *** setListShownNoAnimation(...);
   *** setSelection(...);
}

-keep class android.support.v4.app.LoaderManager$LoaderCallbacks
-keepclassmembers class android.support.v4.app.LoaderManager$LoaderCallbacks {
}

-keep class android.support.v4.app.LoaderManager
-keepclassmembers class android.support.v4.app.LoaderManager {
   <init>(...);
   *** hasRunningLoaders(...);
   *** destroyLoader(...);
   *** dump(...);
   *** enableDebugLogging(...);
   *** getLoader(...);
   *** initLoader(...);
   *** restartLoader(...);
}

-keep class android.support.v4.app.LoaderManager
-keepclassmembers class android.support.v4.app.LoaderManager {
   *** destroyLoader(...);
   *** dump(...);
   *** getLoader(...);
   *** initLoader(...);
   *** restartLoader(...);
}

-keep class android.support.v4.app.NavUtils
-keepclassmembers class android.support.v4.app.NavUtils {
   *** getParentActivityIntent(...);
   *** getParentActivityIntent(...);
   *** getParentActivityIntent(...);
   *** getParentActivityName(...);
   *** getParentActivityName(...);
   *** navigateUpFromSameTask(...);
   *** navigateUpTo(...);
   *** shouldUpRecreateTask(...);
}

-keep class android.support.v4.app.NotificationCompatBase$Action$Factory
-keepclassmembers class android.support.v4.app.NotificationCompatBase$Action$Factory {
}

-keep class android.support.v4.app.NotificationCompatBase$Action
-keepclassmembers class android.support.v4.app.NotificationCompatBase$Action {
   <init>(...);
   *** getActionIntent(...);
   *** getExtras(...);
   *** getIcon(...);
   *** getTitle(...);
   *** getRemoteInputs(...);
}

-keep class android.support.v4.app.NotificationCompatBase$Action
-keepclassmembers class android.support.v4.app.NotificationCompatBase$Action {
   *** getActionIntent(...);
   *** getExtras(...);
   *** getIcon(...);
   *** getTitle(...);
   *** getRemoteInputs(...);
}

-keep class android.support.v4.app.NotificationCompatBase$UnreadConversation$Factory
-keepclassmembers class android.support.v4.app.NotificationCompatBase$UnreadConversation$Factory {
}

-keep class android.support.v4.app.NotificationCompatBase$UnreadConversation
-keepclassmembers class android.support.v4.app.NotificationCompatBase$UnreadConversation {
   <init>(...);
}

-keep class android.support.v4.app.NotificationCompatBase$UnreadConversation
-keepclassmembers class android.support.v4.app.NotificationCompatBase$UnreadConversation {
}

-keep class android.support.v4.app.NotificationCompatBase
-keepclassmembers class android.support.v4.app.NotificationCompatBase {
   <init>(...);
}

-keep class android.support.v4.app.NotificationCompatExtras
-keepclassmembers class android.support.v4.app.NotificationCompatExtras {
}

-keep class android.support.v4.app.NotificationCompatSideChannelService$NotificationSideChannelStub
-keepclassmembers class android.support.v4.app.NotificationCompatSideChannelService$NotificationSideChannelStub {
   *** cancel(...);
   *** cancelAll(...);
   *** notify(...);
}

-keep class android.support.v4.app.NotificationCompatSideChannelService
-keepclassmembers class android.support.v4.app.NotificationCompatSideChannelService {
   <init>(...);
   *** cancel(...);
   *** cancelAll(...);
   *** notify(...);
   *** onBind(...);
}

-keep class android.support.v4.app.NotificationCompatSideChannelService
-keepclassmembers class android.support.v4.app.NotificationCompatSideChannelService {
   *** cancel(...);
   *** cancelAll(...);
   *** notify(...);
}

-keep class android.support.v4.app.NotificationManagerCompat$CancelTask
-keepclassmembers class android.support.v4.app.NotificationManagerCompat$CancelTask {
   <init>(...);
   <init>(...);
   *** send(...);
}

-keep class android.support.v4.app.NotificationManagerCompat$NotifyTask
-keepclassmembers class android.support.v4.app.NotificationManagerCompat$NotifyTask {
   <init>(...);
   *** send(...);
}

-keep class android.support.v4.app.NotificationManagerCompat$ServiceConnectedEvent
-keepclassmembers class android.support.v4.app.NotificationManagerCompat$ServiceConnectedEvent {
   <init>(...);
}

-keep class android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord
-keepclassmembers class android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord {
   <init>(...);
}

-keep class android.support.v4.app.NotificationManagerCompat$SideChannelManager
-keepclassmembers class android.support.v4.app.NotificationManagerCompat$SideChannelManager {
   <init>(...);
   *** handleMessage(...);
   *** onServiceConnected(...);
   *** onServiceDisconnected(...);
}

-keep class android.support.v4.app.NotificationManagerCompat$Task
-keepclassmembers class android.support.v4.app.NotificationManagerCompat$Task {
}

-keep class android.support.v4.app.NotificationManagerCompat
-keepclassmembers class android.support.v4.app.NotificationManagerCompat {
   *** cancel(...);
   *** cancel(...);
   *** cancelAll(...);
   *** from(...);
   *** getEnabledListenerPackages(...);
   *** notify(...);
   *** notify(...);
}

-keep class android.support.v4.app.RemoteInput$Builder
-keepclassmembers class android.support.v4.app.RemoteInput$Builder {
   <init>(...);
   *** getExtras(...);
   *** addExtras(...);
   *** build(...);
   *** setAllowFreeFormInput(...);
   *** setChoices(...);
   *** setLabel(...);
}

-keep class android.support.v4.app.RemoteInput$ImplJellybean
-keepclassmembers class android.support.v4.app.RemoteInput$ImplJellybean {
   *** addResultsToIntent(...);
   *** getResultsFromIntent(...);
}

-keep class android.support.v4.app.RemoteInput
-keepclassmembers class android.support.v4.app.RemoteInput {
   *** getAllowFreeFormInput(...);
   *** getExtras(...);
   *** getLabel(...);
   *** getResultKey(...);
   *** addResultsToIntent(...);
   *** getChoices(...);
   *** getResultsFromIntent(...);
}

-keep class android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory
-keepclassmembers class android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory {
}

-keep class android.support.v4.app.RemoteInputCompatBase$RemoteInput
-keepclassmembers class android.support.v4.app.RemoteInputCompatBase$RemoteInput {
   <init>(...);
   *** getAllowFreeFormInput(...);
   *** getExtras(...);
   *** getLabel(...);
   *** getResultKey(...);
   *** getChoices(...);
}

-keep class android.support.v4.app.RemoteInputCompatBase$RemoteInput
-keepclassmembers class android.support.v4.app.RemoteInputCompatBase$RemoteInput {
   *** getAllowFreeFormInput(...);
   *** getExtras(...);
   *** getLabel(...);
   *** getResultKey(...);
   *** getChoices(...);
}

-keep class android.support.v4.app.RemoteInputCompatBase
-keepclassmembers class android.support.v4.app.RemoteInputCompatBase {
}

-keep class android.support.v4.app.ServiceCompat
-keepclassmembers class android.support.v4.app.ServiceCompat {
}

-keep class android.support.v4.app.ShareCompat$IntentBuilder
-keepclassmembers class android.support.v4.app.ShareCompat$IntentBuilder {
   *** getIntent(...);
   *** addEmailBcc(...);
   *** addEmailBcc(...);
   *** addEmailCc(...);
   *** addEmailCc(...);
   *** addEmailTo(...);
   *** addEmailTo(...);
   *** addStream(...);
   *** createChooserIntent(...);
   *** from(...);
   *** setChooserTitle(...);
   *** setChooserTitle(...);
   *** setEmailBcc(...);
   *** setEmailCc(...);
   *** setEmailTo(...);
   *** setHtmlText(...);
   *** setStream(...);
   *** setSubject(...);
   *** setText(...);
   *** setType(...);
   *** startChooser(...);
}

-keep class android.support.v4.app.ShareCompat$IntentReader
-keepclassmembers class android.support.v4.app.ShareCompat$IntentReader {
   *** getCallingActivity(...);
   *** getCallingActivityIcon(...);
   *** getCallingApplicationIcon(...);
   *** getCallingApplicationLabel(...);
   *** getCallingPackage(...);
   *** getHtmlText(...);
   *** isMultipleShare(...);
   *** isShareIntent(...);
   *** isSingleShare(...);
   *** getStream(...);
   *** getStreamCount(...);
   *** getSubject(...);
   *** getText(...);
   *** getType(...);
   *** from(...);
   *** getEmailBcc(...);
   *** getEmailCc(...);
   *** getEmailTo(...);
   *** getStream(...);
}

-keep class android.support.v4.app.ShareCompat
-keepclassmembers class android.support.v4.app.ShareCompat {
   <init>(...);
   *** configureMenuItem(...);
   *** configureMenuItem(...);
   *** getCallingActivity(...);
   *** getCallingPackage(...);
}

-keep class android.support.v4.app.SharedElementCallback
-keepclassmembers class android.support.v4.app.SharedElementCallback {
   <init>(...);
   *** onCaptureSharedElementSnapshot(...);
   *** onCreateSnapshotView(...);
   *** onMapSharedElements(...);
   *** onRejectSharedElements(...);
   *** onSharedElementEnd(...);
   *** onSharedElementStart(...);
}

-keep class android.support.v4.app.SharedElementCallback
-keepclassmembers class android.support.v4.app.SharedElementCallback {
}

-keep class android.support.v4.app.TaskStackBuilder$SupportParentable
-keepclassmembers class android.support.v4.app.TaskStackBuilder$SupportParentable {
}

-keep class android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean
-keepclassmembers class android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean {
   *** getPendingIntent(...);
}

-keep class android.support.v4.app.TaskStackBuilder
-keepclassmembers class android.support.v4.app.TaskStackBuilder {
   *** getIntentCount(...);
   *** addNextIntent(...);
   *** addNextIntentWithParentStack(...);
   *** addParentStack(...);
   *** addParentStack(...);
   *** addParentStack(...);
   *** create(...);
   *** editIntentAt(...);
   *** from(...);
   *** getIntent(...);
   *** getIntents(...);
   *** getPendingIntent(...);
   *** getPendingIntent(...);
   *** iterator(...);
   *** startActivities(...);
   *** startActivities(...);
}

-keep class android.support.v4.BuildConfig
-keepclassmembers class android.support.v4.BuildConfig {
   <init>(...);
}

-keep class android.support.v4.content.AsyncTaskLoader
-keepclassmembers class android.support.v4.content.AsyncTaskLoader {
   <init>(...);
   *** isLoadInBackgroundCanceled(...);
   *** cancelLoadInBackground(...);
   *** loadInBackground(...);
   *** onCanceled(...);
   *** onLoadInBackground(...);
   *** setUpdateThrottle(...);
   *** waitForLoader(...);
}

-keep class android.support.v4.content.AsyncTaskLoader
-keepclassmembers class android.support.v4.content.AsyncTaskLoader {
   *** loadInBackground(...);
}

-keep class android.support.v4.content.ContentResolverCompat
-keepclassmembers class android.support.v4.content.ContentResolverCompat {
   *** query(...);
}

-keep class android.support.v4.content.ContextCompat
-keepclassmembers class android.support.v4.content.ContextCompat {
   <init>(...);
   *** checkSelfPermission(...);
   *** getCodeCacheDir(...);
   *** getColor(...);
   *** getColorStateList(...);
   *** getDrawable(...);
   *** getExternalCacheDirs(...);
   *** getExternalFilesDirs(...);
   *** getNoBackupFilesDir(...);
   *** getObbDirs(...);
   *** startActivities(...);
   *** startActivities(...);
}

-keep class android.support.v4.content.CursorLoader
-keepclassmembers class android.support.v4.content.CursorLoader {
   <init>(...);
   <init>(...);
   *** getSelection(...);
   *** setSelection(...);
   *** getSortOrder(...);
   *** setSortOrder(...);
   *** getUri(...);
   *** setUri(...);
   *** deliverResult(...);
   *** getProjection(...);
   *** getSelectionArgs(...);
   *** loadInBackground(...);
   *** onCanceled(...);
   *** setProjection(...);
   *** setSelectionArgs(...);
}

-keep class android.support.v4.content.FileProvider$PathStrategy
-keepclassmembers class android.support.v4.content.FileProvider$PathStrategy {
}

-keep class android.support.v4.content.FileProvider$SimplePathStrategy
-keepclassmembers class android.support.v4.content.FileProvider$SimplePathStrategy {
   <init>(...);
   *** addRoot(...);
   *** getFileForUri(...);
   *** getUriForFile(...);
}

-keep class android.support.v4.content.FileProvider
-keepclassmembers class android.support.v4.content.FileProvider {
   <init>(...);
   *** delete(...);
   *** getType(...);
   *** getUriForFile(...);
   *** insert(...);
   *** onCreate(...);
   *** query(...);
   *** update(...);
}

-keep class android.support.v4.content.IntentCompat
-keepclassmembers class android.support.v4.content.IntentCompat {
   *** makeMainActivity(...);
   *** makeMainSelectorActivity(...);
   *** makeRestartActivityTask(...);
}

-keep class android.support.v4.content.Loader$ForceLoadContentObserver
-keepclassmembers class android.support.v4.content.Loader$ForceLoadContentObserver {
   <init>(...);
}

-keep class android.support.v4.content.Loader$OnLoadCanceledListener
-keepclassmembers class android.support.v4.content.Loader$OnLoadCanceledListener {
}

-keep class mono.android.support.v4.content.Loader_OnLoadCanceledListenerImplementor
-keepclassmembers class mono.android.support.v4.content.Loader_OnLoadCanceledListenerImplementor {
}

-keep class android.support.v4.content.Loader$OnLoadCompleteListener
-keepclassmembers class android.support.v4.content.Loader$OnLoadCompleteListener {
}

-keep class mono.android.support.v4.content.Loader_OnLoadCompleteListenerImplementor
-keepclassmembers class mono.android.support.v4.content.Loader_OnLoadCompleteListenerImplementor {
}

-keep class android.support.v4.content.Loader
-keepclassmembers class android.support.v4.content.Loader {
   <init>(...);
   *** getContext(...);
   *** getId(...);
   *** isAbandoned(...);
   *** isReset(...);
   *** isStarted(...);
   *** abandon(...);
   *** cancelLoad(...);
   *** commitContentChanged(...);
   *** dataToString(...);
   *** deliverCancellation(...);
   *** deliverResult(...);
   *** dump(...);
   *** forceLoad(...);
   *** onAbandon(...);
   *** onCancelLoad(...);
   *** onContentChanged(...);
   *** onForceLoad(...);
   *** onReset(...);
   *** onStartLoading(...);
   *** onStopLoading(...);
   *** registerListener(...);
   *** registerOnLoadCanceledListener(...);
   *** reset(...);
   *** rollbackContentChanged(...);
   *** startLoading(...);
   *** stopLoading(...);
   *** takeContentChanged(...);
   *** unregisterListener(...);
   *** unregisterOnLoadCanceledListener(...);
}

-keep class android.support.v4.content.LocalBroadcastManager$BroadcastRecord
-keepclassmembers class android.support.v4.content.LocalBroadcastManager$BroadcastRecord {
}

-keep class android.support.v4.content.LocalBroadcastManager$ReceiverRecord
-keepclassmembers class android.support.v4.content.LocalBroadcastManager$ReceiverRecord {
}

-keep class android.support.v4.content.LocalBroadcastManager
-keepclassmembers class android.support.v4.content.LocalBroadcastManager {
   *** getInstance(...);
   *** registerReceiver(...);
   *** sendBroadcast(...);
   *** sendBroadcastSync(...);
   *** unregisterReceiver(...);
}

-keep class android.support.v4.content.ModernAsyncTask$AsyncTaskResult
-keepclassmembers class android.support.v4.content.ModernAsyncTask$AsyncTaskResult {
}

-keep class android.support.v4.content.ModernAsyncTask$InternalHandler
-keepclassmembers class android.support.v4.content.ModernAsyncTask$InternalHandler {
   <init>(...);
}

-keep class android.support.v4.content.ModernAsyncTask$Status
-keepclassmembers class android.support.v4.content.ModernAsyncTask$Status {
   *** valueOf(...);
   *** values(...);
}

-keep class android.support.v4.content.ModernAsyncTask$WorkerRunnable
-keepclassmembers class android.support.v4.content.ModernAsyncTask$WorkerRunnable {
   *** call(...);
}

-keep class android.support.v4.content.ModernAsyncTask$WorkerRunnable
-keepclassmembers class android.support.v4.content.ModernAsyncTask$WorkerRunnable {
   *** call(...);
}

-keep class android.support.v4.content.ModernAsyncTask
-keepclassmembers class android.support.v4.content.ModernAsyncTask {
   <init>(...);
   *** isCancelled(...);
   *** cancel(...);
   *** doInBackground(...);
   *** execute(...);
   *** get(...);
   *** get(...);
   *** getStatus(...);
   *** onCancelled(...);
   *** onCancelled(...);
   *** onPostExecute(...);
   *** onPreExecute(...);
   *** onProgressUpdate(...);
   *** publishProgress(...);
   *** setDefaultExecutor(...);
}

-keep class android.support.v4.content.ModernAsyncTask
-keepclassmembers class android.support.v4.content.ModernAsyncTask {
   *** doInBackground(...);
}

-keep class android.support.v4.content.pm.ActivityInfoCompat
-keepclassmembers class android.support.v4.content.pm.ActivityInfoCompat {
}

-keep class android.support.v4.content.PermissionChecker$PermissionResult
-keepclassmembers class android.support.v4.content.PermissionChecker$PermissionResult {
}

-keep class android.support.v4.content.PermissionChecker
-keepclassmembers class android.support.v4.content.PermissionChecker {
   *** checkCallingOrSelfPermission(...);
   *** checkCallingPermission(...);
   *** checkPermission(...);
   *** checkSelfPermission(...);
}

-keep class android.support.v4.content.res.ResourcesCompat
-keepclassmembers class android.support.v4.content.res.ResourcesCompat {
   <init>(...);
   *** getDrawable(...);
   *** getDrawableForDensity(...);
}

-keep class android.support.v4.content.res.TypedArrayUtils
-keepclassmembers class android.support.v4.content.res.TypedArrayUtils {
   <init>(...);
   *** getBoolean(...);
   *** getDrawable(...);
   *** getInt(...);
   *** getResourceId(...);
   *** getString(...);
   *** getTextArray(...);
}

-keep class android.support.v4.content.SharedPreferencesCompat$EditorCompat$Helper
-keepclassmembers class android.support.v4.content.SharedPreferencesCompat$EditorCompat$Helper {
}

-keep class android.support.v4.content.SharedPreferencesCompat$EditorCompat
-keepclassmembers class android.support.v4.content.SharedPreferencesCompat$EditorCompat {
   *** getInstance(...);
   *** apply(...);
}

-keep class android.support.v4.content.SharedPreferencesCompat
-keepclassmembers class android.support.v4.content.SharedPreferencesCompat {
   <init>(...);
}

-keep class android.support.v4.content.WakefulBroadcastReceiver
-keepclassmembers class android.support.v4.content.WakefulBroadcastReceiver {
   <init>(...);
   *** completeWakefulIntent(...);
   *** startWakefulService(...);
}

-keep class android.support.v4.content.WakefulBroadcastReceiver
-keepclassmembers class android.support.v4.content.WakefulBroadcastReceiver {
   *** onReceive(...);
}

-keep class android.support.v4.database.DatabaseUtilsCompat
-keepclassmembers class android.support.v4.database.DatabaseUtilsCompat {
   *** appendSelectionArgs(...);
   *** concatenateWhere(...);
}

-keep class android.support.v4.graphics.BitmapCompat
-keepclassmembers class android.support.v4.graphics.BitmapCompat {
   <init>(...);
   *** getAllocationByteCount(...);
   *** hasMipMap(...);
   *** setHasMipMap(...);
}

-keep class android.support.v4.graphics.ColorUtils
-keepclassmembers class android.support.v4.graphics.ColorUtils {
   *** HSLToColor(...);
   *** RGBToHSL(...);
   *** calculateContrast(...);
   *** calculateLuminance(...);
   *** calculateMinimumAlpha(...);
   *** colorToHSL(...);
   *** compositeColors(...);
   *** setAlphaComponent(...);
}

-keep class android.support.v4.graphics.drawable.DrawableCompat
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat {
   <init>(...);
   *** getLayoutDirection(...);
   *** isAutoMirrored(...);
   *** jumpToCurrentState(...);
   *** setAutoMirrored(...);
   *** setHotspot(...);
   *** setHotspotBounds(...);
   *** setLayoutDirection(...);
   *** setTint(...);
   *** setTintList(...);
   *** setTintMode(...);
   *** unwrap(...);
   *** wrap(...);
}

-keep class android.support.v4.graphics.drawable.DrawableWrapper
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapper {
}

-keep class android.support.v4.graphics.drawable.RoundedBitmapDrawable
-keepclassmembers class android.support.v4.graphics.drawable.RoundedBitmapDrawable {
   *** setAlpha(...);
   *** setColorFilter(...);
}

-keep class android.support.v4.graphics.drawable.RoundedBitmapDrawableFactory$DefaultRoundedBitmapDrawable
-keepclassmembers class android.support.v4.graphics.drawable.RoundedBitmapDrawableFactory$DefaultRoundedBitmapDrawable {
}

-keep class android.support.v4.graphics.drawable.RoundedBitmapDrawableFactory
-keepclassmembers class android.support.v4.graphics.drawable.RoundedBitmapDrawableFactory {
   <init>(...);
   *** create(...);
   *** create(...);
   *** create(...);
}

-keep class android.support.v4.hardware.display.DisplayManagerCompat
-keepclassmembers class android.support.v4.hardware.display.DisplayManagerCompat {
   *** getDisplay(...);
   *** getDisplays(...);
   *** getDisplays(...);
   *** getInstance(...);
}

-keep class android.support.v4.hardware.display.DisplayManagerCompat
-keepclassmembers class android.support.v4.hardware.display.DisplayManagerCompat {
   *** getDisplay(...);
   *** getDisplays(...);
   *** getDisplays(...);
}

-keep class android.support.v4.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback
-keepclassmembers class android.support.v4.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback {
   <init>(...);
   *** onAuthenticationError(...);
   *** onAuthenticationFailed(...);
   *** onAuthenticationHelp(...);
   *** onAuthenticationSucceeded(...);
}

-keep class android.support.v4.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback
-keepclassmembers class android.support.v4.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback {
}

-keep class android.support.v4.hardware.fingerprint.FingerprintManagerCompat$AuthenticationResult
-keepclassmembers class android.support.v4.hardware.fingerprint.FingerprintManagerCompat$AuthenticationResult {
   <init>(...);
   *** getCryptoObject(...);
}

-keep class android.support.v4.hardware.fingerprint.FingerprintManagerCompat$CryptoObject
-keepclassmembers class android.support.v4.hardware.fingerprint.FingerprintManagerCompat$CryptoObject {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCipher(...);
   *** getMac(...);
   *** getSignature(...);
}

-keep class android.support.v4.hardware.fingerprint.FingerprintManagerCompat
-keepclassmembers class android.support.v4.hardware.fingerprint.FingerprintManagerCompat {
   *** hasEnrolledFingerprints(...);
   *** isHardwareDetected(...);
   *** authenticate(...);
   *** from(...);
}

-keep class android.support.v4.media.MediaDescriptionCompat$Builder
-keepclassmembers class android.support.v4.media.MediaDescriptionCompat$Builder {
   <init>(...);
   *** build(...);
   *** setDescription(...);
   *** setExtras(...);
   *** setIconBitmap(...);
   *** setIconUri(...);
   *** setMediaId(...);
   *** setMediaUri(...);
   *** setSubtitle(...);
   *** setTitle(...);
}

-keep class android.support.v4.media.MediaDescriptionCompat
-keepclassmembers class android.support.v4.media.MediaDescriptionCompat {
   *** getDescription(...);
   *** getExtras(...);
   *** getIconBitmap(...);
   *** getIconUri(...);
   *** getMediaDescription(...);
   *** getMediaId(...);
   *** getMediaUri(...);
   *** getSubtitle(...);
   *** getTitle(...);
   *** describeContents(...);
   *** fromMediaDescription(...);
   *** writeToParcel(...);
}

-keep class android.support.v4.media.MediaMetadataCompat$BitmapKey
-keepclassmembers class android.support.v4.media.MediaMetadataCompat$BitmapKey {
}

-keep class android.support.v4.media.MediaMetadataCompat$Builder
-keepclassmembers class android.support.v4.media.MediaMetadataCompat$Builder {
   <init>(...);
   <init>(...);
   *** build(...);
   *** putBitmap(...);
   *** putLong(...);
   *** putRating(...);
   *** putString(...);
   *** putText(...);
}

-keep class android.support.v4.media.MediaMetadataCompat$LongKey
-keepclassmembers class android.support.v4.media.MediaMetadataCompat$LongKey {
}

-keep class android.support.v4.media.MediaMetadataCompat$RatingKey
-keepclassmembers class android.support.v4.media.MediaMetadataCompat$RatingKey {
}

-keep class android.support.v4.media.MediaMetadataCompat$TextKey
-keepclassmembers class android.support.v4.media.MediaMetadataCompat$TextKey {
}

-keep class android.support.v4.media.MediaMetadataCompat
-keepclassmembers class android.support.v4.media.MediaMetadataCompat {
   *** getBundle(...);
   *** getDescription(...);
   *** getMediaMetadata(...);
   *** containsKey(...);
   *** describeContents(...);
   *** fromMediaMetadata(...);
   *** getBitmap(...);
   *** getLong(...);
   *** getRating(...);
   *** getString(...);
   *** getText(...);
   *** keySet(...);
   *** size(...);
   *** writeToParcel(...);
}

-keep class android.support.v4.media.RatingCompat$StarStyle
-keepclassmembers class android.support.v4.media.RatingCompat$StarStyle {
}

-keep class android.support.v4.media.RatingCompat$Style
-keepclassmembers class android.support.v4.media.RatingCompat$Style {
}

-keep class android.support.v4.media.RatingCompat
-keepclassmembers class android.support.v4.media.RatingCompat {
   *** hasHeart(...);
   *** isRated(...);
   *** isThumbUp(...);
   *** getPercentRating(...);
   *** getRating(...);
   *** getRatingStyle(...);
   *** getStarRating(...);
   *** describeContents(...);
   *** fromRating(...);
   *** newHeartRating(...);
   *** newPercentageRating(...);
   *** newStarRating(...);
   *** newThumbRating(...);
   *** newUnratedRating(...);
   *** writeToParcel(...);
}

-keep class android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy
-keepclassmembers class android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy {
   *** getInterfaceDescriptor(...);
   *** asBinder(...);
   *** onEvent(...);
   *** onExtrasChanged(...);
   *** onMetadataChanged(...);
   *** onPlaybackStateChanged(...);
   *** onQueueChanged(...);
   *** onQueueTitleChanged(...);
   *** onSessionDestroyed(...);
   *** onVolumeInfoChanged(...);
}

-keep class android.support.v4.media.session.IMediaControllerCallback$Stub
-keepclassmembers class android.support.v4.media.session.IMediaControllerCallback$Stub {
   <init>(...);
   *** asBinder(...);
   *** asInterface(...);
   *** onTransact(...);
   *** onEvent(...);
   *** onExtrasChanged(...);
   *** onMetadataChanged(...);
   *** onPlaybackStateChanged(...);
   *** onQueueChanged(...);
   *** onQueueTitleChanged(...);
   *** onSessionDestroyed(...);
   *** onVolumeInfoChanged(...);
}

-keep class android.support.v4.media.session.IMediaControllerCallback$Stub
-keepclassmembers class android.support.v4.media.session.IMediaControllerCallback$Stub {
   *** onEvent(...);
   *** onExtrasChanged(...);
   *** onMetadataChanged(...);
   *** onPlaybackStateChanged(...);
   *** onQueueChanged(...);
   *** onQueueTitleChanged(...);
   *** onSessionDestroyed(...);
   *** onVolumeInfoChanged(...);
}

-keep class android.support.v4.media.session.IMediaControllerCallback
-keepclassmembers class android.support.v4.media.session.IMediaControllerCallback {
}

-keep class android.support.v4.media.session.IMediaSession$Stub$Proxy
-keepclassmembers class android.support.v4.media.session.IMediaSession$Stub$Proxy {
   *** getExtras(...);
   *** getFlags(...);
   *** getInterfaceDescriptor(...);
   *** isTransportControlEnabled(...);
   *** getLaunchPendingIntent(...);
   *** getMetadata(...);
   *** getPackageName(...);
   *** getPlaybackState(...);
   *** getQueue(...);
   *** getQueueTitle(...);
   *** getRatingType(...);
   *** getTag(...);
   *** getVolumeAttributes(...);
   *** adjustVolume(...);
   *** asBinder(...);
   *** fastForward(...);
   *** next(...);
   *** pause(...);
   *** play(...);
   *** playFromMediaId(...);
   *** playFromSearch(...);
   *** playFromUri(...);
   *** previous(...);
   *** rate(...);
   *** registerCallbackListener(...);
   *** rewind(...);
   *** seekTo(...);
   *** sendCustomAction(...);
   *** sendMediaButton(...);
   *** setVolumeTo(...);
   *** skipToQueueItem(...);
   *** stop(...);
   *** unregisterCallbackListener(...);
}

-keep class android.support.v4.media.session.IMediaSession$Stub
-keepclassmembers class android.support.v4.media.session.IMediaSession$Stub {
   <init>(...);
   *** asBinder(...);
   *** asInterface(...);
   *** onTransact(...);
   *** adjustVolume(...);
   *** fastForward(...);
   *** next(...);
   *** pause(...);
   *** play(...);
   *** playFromMediaId(...);
   *** playFromSearch(...);
   *** playFromUri(...);
   *** previous(...);
   *** rate(...);
   *** registerCallbackListener(...);
   *** rewind(...);
   *** seekTo(...);
   *** sendCustomAction(...);
   *** sendMediaButton(...);
   *** setVolumeTo(...);
   *** skipToQueueItem(...);
   *** stop(...);
   *** unregisterCallbackListener(...);
   *** getExtras(...);
   *** getFlags(...);
   *** isTransportControlEnabled(...);
   *** getLaunchPendingIntent(...);
   *** getMetadata(...);
   *** getPackageName(...);
   *** getPlaybackState(...);
   *** getQueue(...);
   *** getQueueTitle(...);
   *** getRatingType(...);
   *** getTag(...);
   *** getVolumeAttributes(...);
}

-keep class android.support.v4.media.session.IMediaSession$Stub
-keepclassmembers class android.support.v4.media.session.IMediaSession$Stub {
   *** getExtras(...);
   *** getFlags(...);
   *** isTransportControlEnabled(...);
   *** getLaunchPendingIntent(...);
   *** getMetadata(...);
   *** getPackageName(...);
   *** getPlaybackState(...);
   *** getQueue(...);
   *** getQueueTitle(...);
   *** getRatingType(...);
   *** getTag(...);
   *** getVolumeAttributes(...);
   *** adjustVolume(...);
   *** fastForward(...);
   *** next(...);
   *** pause(...);
   *** play(...);
   *** playFromMediaId(...);
   *** playFromSearch(...);
   *** playFromUri(...);
   *** previous(...);
   *** rate(...);
   *** registerCallbackListener(...);
   *** rewind(...);
   *** seekTo(...);
   *** sendCustomAction(...);
   *** sendMediaButton(...);
   *** setVolumeTo(...);
   *** skipToQueueItem(...);
   *** stop(...);
   *** unregisterCallbackListener(...);
}

-keep class android.support.v4.media.session.IMediaSession
-keepclassmembers class android.support.v4.media.session.IMediaSession {
}

-keep class android.support.v4.media.session.MediaControllerCompat$Callback$MessageHandler
-keepclassmembers class android.support.v4.media.session.MediaControllerCompat$Callback$MessageHandler {
   <init>(...);
   *** post(...);
}

-keep class android.support.v4.media.session.MediaControllerCompat$Callback$StubCompat
-keepclassmembers class android.support.v4.media.session.MediaControllerCompat$Callback$StubCompat {
   *** onEvent(...);
   *** onExtrasChanged(...);
   *** onMetadataChanged(...);
   *** onPlaybackStateChanged(...);
   *** onQueueChanged(...);
   *** onQueueTitleChanged(...);
   *** onSessionDestroyed(...);
   *** onVolumeInfoChanged(...);
}

-keep class android.support.v4.media.session.MediaControllerCompat$Callback
-keepclassmembers class android.support.v4.media.session.MediaControllerCompat$Callback {
   <init>(...);
   *** binderDied(...);
   *** onAudioInfoChanged(...);
   *** onExtrasChanged(...);
   *** onMetadataChanged(...);
   *** onPlaybackStateChanged(...);
   *** onQueueChanged(...);
   *** onQueueTitleChanged(...);
   *** onSessionDestroyed(...);
   *** onSessionEvent(...);
}

-keep class android.support.v4.media.session.MediaControllerCompat$Callback
-keepclassmembers class android.support.v4.media.session.MediaControllerCompat$Callback {
}

-keep class android.support.v4.media.session.MediaControllerCompat$PlaybackInfo
-keepclassmembers class android.support.v4.media.session.MediaControllerCompat$PlaybackInfo {
   *** getAudioStream(...);
   *** getCurrentVolume(...);
   *** getMaxVolume(...);
   *** getPlaybackType(...);
   *** getVolumeControl(...);
}

-keep class android.support.v4.media.session.MediaControllerCompat$TransportControls
-keepclassmembers class android.support.v4.media.session.MediaControllerCompat$TransportControls {
   *** fastForward(...);
   *** pause(...);
   *** play(...);
   *** playFromMediaId(...);
   *** playFromSearch(...);
   *** playFromUri(...);
   *** rewind(...);
   *** seekTo(...);
   *** sendCustomAction(...);
   *** sendCustomAction(...);
   *** setRating(...);
   *** skipToNext(...);
   *** skipToPrevious(...);
   *** skipToQueueItem(...);
   *** stop(...);
}

-keep class android.support.v4.media.session.MediaControllerCompat$TransportControls
-keepclassmembers class android.support.v4.media.session.MediaControllerCompat$TransportControls {
   *** fastForward(...);
   *** pause(...);
   *** play(...);
   *** playFromMediaId(...);
   *** playFromSearch(...);
   *** playFromUri(...);
   *** rewind(...);
   *** seekTo(...);
   *** sendCustomAction(...);
   *** sendCustomAction(...);
   *** setRating(...);
   *** skipToNext(...);
   *** skipToPrevious(...);
   *** skipToQueueItem(...);
   *** stop(...);
}

-keep class android.support.v4.media.session.MediaControllerCompat$TransportControlsBase
-keepclassmembers class android.support.v4.media.session.MediaControllerCompat$TransportControlsBase {
   <init>(...);
   *** fastForward(...);
   *** pause(...);
   *** play(...);
   *** playFromMediaId(...);
   *** playFromSearch(...);
   *** playFromUri(...);
   *** rewind(...);
   *** seekTo(...);
   *** sendCustomAction(...);
   *** sendCustomAction(...);
   *** setRating(...);
   *** skipToNext(...);
   *** skipToPrevious(...);
   *** skipToQueueItem(...);
   *** stop(...);
}

-keep class android.support.v4.media.session.MediaControllerCompat
-keepclassmembers class android.support.v4.media.session.MediaControllerCompat {
   <init>(...);
   <init>(...);
   *** getExtras(...);
   *** getFlags(...);
   *** getMediaController(...);
   *** getMetadata(...);
   *** getPackageName(...);
   *** getPlaybackState(...);
   *** getQueue(...);
   *** getQueueTitle(...);
   *** getRatingType(...);
   *** getSessionActivity(...);
   *** getSessionToken(...);
   *** adjustVolume(...);
   *** dispatchMediaButtonEvent(...);
   *** getPlaybackInfo(...);
   *** getTransportControls(...);
   *** registerCallback(...);
   *** registerCallback(...);
   *** sendCommand(...);
   *** setVolumeTo(...);
   *** unregisterCallback(...);
}

-keep class android.support.v4.media.session.MediaSessionCompat$Callback
-keepclassmembers class android.support.v4.media.session.MediaSessionCompat$Callback {
   <init>(...);
   *** onCommand(...);
   *** onCustomAction(...);
   *** onFastForward(...);
   *** onMediaButtonEvent(...);
   *** onPause(...);
   *** onPlay(...);
   *** onPlayFromMediaId(...);
   *** onPlayFromSearch(...);
   *** onPlayFromUri(...);
   *** onRewind(...);
   *** onSeekTo(...);
   *** onSetRating(...);
   *** onSkipToNext(...);
   *** onSkipToPrevious(...);
   *** onSkipToQueueItem(...);
   *** onStop(...);
}

-keep class android.support.v4.media.session.MediaSessionCompat$Callback
-keepclassmembers class android.support.v4.media.session.MediaSessionCompat$Callback {
}

-keep class android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MediaSessionStub
-keepclassmembers class android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MediaSessionStub {
   *** getExtras(...);
   *** getFlags(...);
   *** isTransportControlEnabled(...);
   *** getLaunchPendingIntent(...);
   *** getMetadata(...);
   *** getPackageName(...);
   *** getPlaybackState(...);
   *** getQueue(...);
   *** getQueueTitle(...);
   *** getRatingType(...);
   *** getTag(...);
   *** getVolumeAttributes(...);
   *** adjustVolume(...);
   *** fastForward(...);
   *** next(...);
   *** pause(...);
   *** play(...);
   *** playFromMediaId(...);
   *** playFromSearch(...);
   *** playFromUri(...);
   *** previous(...);
   *** rate(...);
   *** registerCallbackListener(...);
   *** rewind(...);
   *** seekTo(...);
   *** sendCustomAction(...);
   *** sendMediaButton(...);
   *** setVolumeTo(...);
   *** skipToQueueItem(...);
   *** stop(...);
   *** unregisterCallbackListener(...);
}

-keep class android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler
-keepclassmembers class android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler {
   *** post(...);
   *** post(...);
   *** post(...);
   *** post(...);
}

-keep class android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener
-keepclassmembers class android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener {
}

-keep class mono.android.support.v4.media.session.MediaSessionCompat_OnActiveChangeListenerImplementor
-keepclassmembers class mono.android.support.v4.media.session.MediaSessionCompat_OnActiveChangeListenerImplementor {
}

-keep class android.support.v4.media.session.MediaSessionCompat$QueueItem
-keepclassmembers class android.support.v4.media.session.MediaSessionCompat$QueueItem {
   <init>(...);
   *** getDescription(...);
   *** getQueueId(...);
   *** describeContents(...);
   *** getQueueItem(...);
   *** obtain(...);
   *** writeToParcel(...);
}

-keep class android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper
-keepclassmembers class android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper {
   <init>(...);
   *** describeContents(...);
   *** writeToParcel(...);
}

-keep class android.support.v4.media.session.MediaSessionCompat$SessionFlags
-keepclassmembers class android.support.v4.media.session.MediaSessionCompat$SessionFlags {
}

-keep class android.support.v4.media.session.MediaSessionCompat$Token
-keepclassmembers class android.support.v4.media.session.MediaSessionCompat$Token {
   *** describeContents(...);
   *** fromToken(...);
   *** getToken(...);
   *** writeToParcel(...);
}

-keep class android.support.v4.media.session.MediaSessionCompat
-keepclassmembers class android.support.v4.media.session.MediaSessionCompat {
   <init>(...);
   *** isActive(...);
   *** setActive(...);
   *** getController(...);
   *** getMediaSession(...);
   *** getRemoteControlClient(...);
   *** getSessionToken(...);
   *** addOnActiveChangeListener(...);
   *** obtain(...);
   *** release(...);
   *** removeOnActiveChangeListener(...);
   *** sendSessionEvent(...);
   *** setCallback(...);
   *** setCallback(...);
   *** setExtras(...);
   *** setFlags(...);
   *** setMediaButtonReceiver(...);
   *** setMetadata(...);
   *** setPlaybackState(...);
   *** setPlaybackToLocal(...);
   *** setPlaybackToRemote(...);
   *** setQueue(...);
   *** setQueueTitle(...);
   *** setRatingType(...);
   *** setSessionActivity(...);
}

-keep class android.support.v4.media.session.MediaSessionCompatApi8
-keepclassmembers class android.support.v4.media.session.MediaSessionCompatApi8 {
   <init>(...);
   *** registerMediaButtonEventReceiver(...);
   *** unregisterMediaButtonEventReceiver(...);
}

-keep class android.support.v4.media.session.ParcelableVolumeInfo
-keepclassmembers class android.support.v4.media.session.ParcelableVolumeInfo {
   <init>(...);
   <init>(...);
   *** describeContents(...);
   *** writeToParcel(...);
}

-keep class android.support.v4.media.session.PlaybackStateCompat$Actions
-keepclassmembers class android.support.v4.media.session.PlaybackStateCompat$Actions {
}

-keep class android.support.v4.media.session.PlaybackStateCompat$Builder
-keepclassmembers class android.support.v4.media.session.PlaybackStateCompat$Builder {
   <init>(...);
   <init>(...);
   *** addCustomAction(...);
   *** addCustomAction(...);
   *** build(...);
   *** setActions(...);
   *** setActiveQueueItemId(...);
   *** setBufferedPosition(...);
   *** setErrorMessage(...);
   *** setExtras(...);
   *** setState(...);
   *** setState(...);
}

-keep class android.support.v4.media.session.PlaybackStateCompat$CustomAction$Builder
-keepclassmembers class android.support.v4.media.session.PlaybackStateCompat$CustomAction$Builder {
   <init>(...);
   <init>(...);
   *** build(...);
   *** setExtras(...);
}

-keep class android.support.v4.media.session.PlaybackStateCompat$CustomAction
-keepclassmembers class android.support.v4.media.session.PlaybackStateCompat$CustomAction {
   *** getAction(...);
   *** getExtras(...);
   *** getIcon(...);
   *** getName(...);
   *** describeContents(...);
   *** fromCustomAction(...);
   *** getCustomAction(...);
   *** writeToParcel(...);
}

-keep class android.support.v4.media.session.PlaybackStateCompat$State
-keepclassmembers class android.support.v4.media.session.PlaybackStateCompat$State {
}

-keep class android.support.v4.media.session.PlaybackStateCompat
-keepclassmembers class android.support.v4.media.session.PlaybackStateCompat {
   *** getActions(...);
   *** getActiveQueueItemId(...);
   *** getBufferedPosition(...);
   *** getCustomActions(...);
   *** getErrorMessage(...);
   *** getExtras(...);
   *** getLastPositionUpdateTime(...);
   *** getPlaybackSpeed(...);
   *** getPlaybackState(...);
   *** getPosition(...);
   *** getState(...);
   *** describeContents(...);
   *** fromPlaybackState(...);
   *** writeToParcel(...);
}

-keep class android.support.v4.media.TransportController
-keepclassmembers class android.support.v4.media.TransportController {
   <init>(...);
   *** getBufferPercentage(...);
   *** getCurrentPosition(...);
   *** getDuration(...);
   *** isPlaying(...);
   *** getTransportControlFlags(...);
   *** pausePlaying(...);
   *** registerStateListener(...);
   *** seekTo(...);
   *** startPlaying(...);
   *** stopPlaying(...);
   *** unregisterStateListener(...);
}

-keep class android.support.v4.media.TransportController
-keepclassmembers class android.support.v4.media.TransportController {
   *** getBufferPercentage(...);
   *** getCurrentPosition(...);
   *** getDuration(...);
   *** isPlaying(...);
   *** getTransportControlFlags(...);
   *** pausePlaying(...);
   *** registerStateListener(...);
   *** seekTo(...);
   *** startPlaying(...);
   *** stopPlaying(...);
   *** unregisterStateListener(...);
}

-keep class android.support.v4.media.TransportMediator
-keepclassmembers class android.support.v4.media.TransportMediator {
   <init>(...);
   <init>(...);
   *** getBufferPercentage(...);
   *** getCurrentPosition(...);
   *** getDuration(...);
   *** isPlaying(...);
   *** getRemoteControlClient(...);
   *** getTransportControlFlags(...);
   *** destroy(...);
   *** dispatchKeyEvent(...);
   *** pausePlaying(...);
   *** refreshState(...);
   *** registerStateListener(...);
   *** seekTo(...);
   *** startPlaying(...);
   *** stopPlaying(...);
   *** unregisterStateListener(...);
}

-keep class android.support.v4.media.TransportPerformer
-keepclassmembers class android.support.v4.media.TransportPerformer {
   <init>(...);
   *** onAudioFocusChange(...);
   *** onGetBufferPercentage(...);
   *** onGetCurrentPosition(...);
   *** onGetDuration(...);
   *** onGetTransportControlFlags(...);
   *** onIsPlaying(...);
   *** onMediaButtonDown(...);
   *** onMediaButtonUp(...);
   *** onPause(...);
   *** onSeekTo(...);
   *** onStart(...);
   *** onStop(...);
}

-keep class android.support.v4.media.TransportPerformer
-keepclassmembers class android.support.v4.media.TransportPerformer {
   *** onGetCurrentPosition(...);
   *** onGetDuration(...);
   *** onIsPlaying(...);
   *** onPause(...);
   *** onSeekTo(...);
   *** onStart(...);
   *** onStop(...);
}

-keep class android.support.v4.media.TransportStateListener
-keepclassmembers class android.support.v4.media.TransportStateListener {
   <init>(...);
   *** onPlayingChanged(...);
   *** onTransportControlsChanged(...);
}

-keep class android.support.v4.media.VolumeProviderCompat$Callback
-keepclassmembers class android.support.v4.media.VolumeProviderCompat$Callback {
   <init>(...);
   *** onVolumeChanged(...);
}

-keep class android.support.v4.media.VolumeProviderCompat$Callback
-keepclassmembers class android.support.v4.media.VolumeProviderCompat$Callback {
   *** onVolumeChanged(...);
}

-keep class android.support.v4.media.VolumeProviderCompat$ControlType
-keepclassmembers class android.support.v4.media.VolumeProviderCompat$ControlType {
}

-keep class android.support.v4.media.VolumeProviderCompat
-keepclassmembers class android.support.v4.media.VolumeProviderCompat {
   <init>(...);
   *** getCurrentVolume(...);
   *** setCurrentVolume(...);
   *** getMaxVolume(...);
   *** getVolumeControl(...);
   *** getVolumeProvider(...);
   *** onAdjustVolume(...);
   *** onSetVolumeTo(...);
   *** setCallback(...);
}

-keep class android.support.v4.media.VolumeProviderCompat
-keepclassmembers class android.support.v4.media.VolumeProviderCompat {
}

-keep class android.support.v4.net.ConnectivityManagerCompat
-keepclassmembers class android.support.v4.net.ConnectivityManagerCompat {
   <init>(...);
   *** getNetworkInfoFromBroadcast(...);
   *** isActiveNetworkMetered(...);
}

-keep class android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags
-keepclassmembers class android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags {
}

-keep class android.support.v4.net.TrafficStatsCompat
-keepclassmembers class android.support.v4.net.TrafficStatsCompat {
   <init>(...);
   *** getThreadStatsTag(...);
   *** setThreadStatsTag(...);
   *** clearThreadStatsTag(...);
   *** incrementOperationCount(...);
   *** incrementOperationCount(...);
   *** tagSocket(...);
   *** untagSocket(...);
}

-keep class android.support.v4.os.AsyncTaskCompat
-keepclassmembers class android.support.v4.os.AsyncTaskCompat {
   <init>(...);
   *** executeParallel(...);
}

-keep class android.support.v4.os.CancellationSignal$OnCancelListener
-keepclassmembers class android.support.v4.os.CancellationSignal$OnCancelListener {
}

-keep class mono.android.support.v4.os.CancellationSignal_OnCancelListenerImplementor
-keepclassmembers class mono.android.support.v4.os.CancellationSignal_OnCancelListenerImplementor {
}

-keep class android.support.v4.os.CancellationSignal
-keepclassmembers class android.support.v4.os.CancellationSignal {
   <init>(...);
   *** getCancellationSignalObject(...);
   *** isCanceled(...);
   *** cancel(...);
   *** setOnCancelListener(...);
   *** throwIfCanceled(...);
}

-keep class android.support.v4.os.EnvironmentCompat
-keepclassmembers class android.support.v4.os.EnvironmentCompat {
   <init>(...);
   *** getStorageState(...);
}

-keep class android.support.v4.os.ParcelableCompatCreatorCallbacks
-keepclassmembers class android.support.v4.os.ParcelableCompatCreatorCallbacks {
}

-keep class android.support.v4.os.OperationCanceledException
-keepclassmembers class android.support.v4.os.OperationCanceledException {
   <init>(...);
   <init>(...);
}

-keep class android.support.v4.os.ParcelableCompat$CompatCreator
-keepclassmembers class android.support.v4.os.ParcelableCompat$CompatCreator {
   <init>(...);
   *** createFromParcel(...);
   *** newArray(...);
}

-keep class android.support.v4.os.ParcelableCompat
-keepclassmembers class android.support.v4.os.ParcelableCompat {
   <init>(...);
   *** newCreator(...);
}

-keep class android.support.v4.os.TraceCompat
-keepclassmembers class android.support.v4.os.TraceCompat {
   <init>(...);
   *** beginSection(...);
   *** endSection(...);
}

-keep class android.support.v4.print.PrintHelper$OnPrintFinishCallback
-keepclassmembers class android.support.v4.print.PrintHelper$OnPrintFinishCallback {
}

-keep class android.support.v4.print.PrintHelper
-keepclassmembers class android.support.v4.print.PrintHelper {
   <init>(...);
   *** getColorMode(...);
   *** setColorMode(...);
   *** getOrientation(...);
   *** setOrientation(...);
   *** getScaleMode(...);
   *** setScaleMode(...);
   *** printBitmap(...);
   *** printBitmap(...);
   *** printBitmap(...);
   *** printBitmap(...);
   *** systemSupportsPrint(...);
}

-keep class android.support.v4.provider.DocumentFile
-keepclassmembers class android.support.v4.provider.DocumentFile {
   *** isDirectory(...);
   *** isFile(...);
   *** getName(...);
   *** getParentFile(...);
   *** getType(...);
   *** getUri(...);
   *** canRead(...);
   *** canWrite(...);
   *** createDirectory(...);
   *** createFile(...);
   *** delete(...);
   *** exists(...);
   *** findFile(...);
   *** fromFile(...);
   *** fromSingleUri(...);
   *** fromTreeUri(...);
   *** isDocumentUri(...);
   *** lastModified(...);
   *** length(...);
   *** listFiles(...);
   *** renameTo(...);
}

-keep class android.support.v4.provider.DocumentFile
-keepclassmembers class android.support.v4.provider.DocumentFile {
   *** isDirectory(...);
   *** isFile(...);
   *** getName(...);
   *** getType(...);
   *** getUri(...);
   *** canRead(...);
   *** canWrite(...);
   *** createDirectory(...);
   *** createFile(...);
   *** delete(...);
   *** exists(...);
   *** lastModified(...);
   *** length(...);
   *** listFiles(...);
   *** renameTo(...);
}

-keep class android.support.v4.text.BidiFormatter$Builder
-keepclassmembers class android.support.v4.text.BidiFormatter$Builder {
   <init>(...);
   <init>(...);
   <init>(...);
   *** build(...);
   *** setTextDirectionHeuristic(...);
   *** stereoReset(...);
}

-keep class android.support.v4.text.BidiFormatter$DirectionalityEstimator
-keepclassmembers class android.support.v4.text.BidiFormatter$DirectionalityEstimator {
}

-keep class android.support.v4.text.BidiFormatter
-keepclassmembers class android.support.v4.text.BidiFormatter {
   *** getInstance(...);
   *** isRtlContext(...);
   *** getStereoReset(...);
   *** getInstance(...);
   *** getInstance(...);
   *** isRtl(...);
   *** unicodeWrap(...);
   *** unicodeWrap(...);
   *** unicodeWrap(...);
   *** unicodeWrap(...);
}

-keep class android.support.v4.text.ICUCompat$ICUCompatImplIcs
-keepclassmembers class android.support.v4.text.ICUCompat$ICUCompatImplIcs {
   *** maximizeAndGetScript(...);
}

-keep class android.support.v4.text.ICUCompat$ICUCompatImplLollipop
-keepclassmembers class android.support.v4.text.ICUCompat$ICUCompatImplLollipop {
   *** maximizeAndGetScript(...);
}

-keep class android.support.v4.text.ICUCompat
-keepclassmembers class android.support.v4.text.ICUCompat {
   <init>(...);
   *** maximizeAndGetScript(...);
}

-keep class android.support.v4.text.ICUCompatApi23
-keepclassmembers class android.support.v4.text.ICUCompatApi23 {
   <init>(...);
   *** maximizeAndGetScript(...);
}

-keep class android.support.v4.text.TextDirectionHeuristicCompat
-keepclassmembers class android.support.v4.text.TextDirectionHeuristicCompat {
}

-keep class android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong
-keepclassmembers class android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong {
   *** checkRtl(...);
}

-keep class android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong
-keepclassmembers class android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong {
   *** checkRtl(...);
}

-keep class android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm
-keepclassmembers class android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm {
}

-keep class android.support.v4.text.TextDirectionHeuristicsCompat
-keepclassmembers class android.support.v4.text.TextDirectionHeuristicsCompat {
   <init>(...);
}

-keep class android.support.v4.text.TextUtilsCompat
-keepclassmembers class android.support.v4.text.TextUtilsCompat {
   <init>(...);
   *** getLayoutDirectionFromLocale(...);
   *** htmlEncode(...);
}

-keep class android.support.v4.text.TextUtilsCompatJellybeanMr1
-keepclassmembers class android.support.v4.text.TextUtilsCompatJellybeanMr1 {
   <init>(...);
   *** getLayoutDirectionFromLocale(...);
   *** htmlEncode(...);
}

-keep class android.support.v4.util.AtomicFile
-keepclassmembers class android.support.v4.util.AtomicFile {
   <init>(...);
   *** getBaseFile(...);
   *** delete(...);
   *** failWrite(...);
   *** finishWrite(...);
   *** openRead(...);
   *** readFully(...);
   *** startWrite(...);
}

-keep class android.support.v4.util.CircularArray
-keepclassmembers class android.support.v4.util.CircularArray {
   <init>(...);
   <init>(...);
   *** getFirst(...);
   *** isEmpty(...);
   *** getLast(...);
   *** addFirst(...);
   *** addLast(...);
   *** clear(...);
   *** get(...);
   *** popFirst(...);
   *** popLast(...);
   *** removeFromEnd(...);
   *** removeFromStart(...);
   *** size(...);
}

-keep class android.support.v4.util.CircularIntArray
-keepclassmembers class android.support.v4.util.CircularIntArray {
   <init>(...);
   <init>(...);
   *** getFirst(...);
   *** isEmpty(...);
   *** getLast(...);
   *** addFirst(...);
   *** addLast(...);
   *** clear(...);
   *** get(...);
   *** popFirst(...);
   *** popLast(...);
   *** removeFromEnd(...);
   *** removeFromStart(...);
   *** size(...);
}

-keep class android.support.v4.util.DebugUtils
-keepclassmembers class android.support.v4.util.DebugUtils {
   <init>(...);
   *** buildShortClassTag(...);
}

-keep class android.support.v4.util.LogWriter
-keepclassmembers class android.support.v4.util.LogWriter {
   <init>(...);
   *** close(...);
   *** flush(...);
   *** write(...);
}

-keep class android.support.v4.util.LongSparseArray
-keepclassmembers class android.support.v4.util.LongSparseArray {
   <init>(...);
   <init>(...);
   *** append(...);
   *** clear(...);
   *** clone(...);
   *** delete(...);
   *** get(...);
   *** get(...);
   *** indexOfKey(...);
   *** indexOfValue(...);
   *** keyAt(...);
   *** put(...);
   *** remove(...);
   *** removeAt(...);
   *** setValueAt(...);
   *** size(...);
   *** valueAt(...);
}

-keep class android.support.v4.util.LruCache
-keepclassmembers class android.support.v4.util.LruCache {
   <init>(...);
   *** create(...);
   *** createCount(...);
   *** entryRemoved(...);
   *** evictAll(...);
   *** evictionCount(...);
   *** get(...);
   *** hitCount(...);
   *** maxSize(...);
   *** missCount(...);
   *** put(...);
   *** putCount(...);
   *** remove(...);
   *** resize(...);
   *** size(...);
   *** sizeOf(...);
   *** snapshot(...);
   *** toString(...);
   *** trimToSize(...);
}

-keep class android.support.v4.util.Pair
-keepclassmembers class android.support.v4.util.Pair {
   <init>(...);
   *** create(...);
}

-keep class android.support.v4.util.Pools$Pool
-keepclassmembers class android.support.v4.util.Pools$Pool {
}

-keep class android.support.v4.util.Pools$SimplePool
-keepclassmembers class android.support.v4.util.Pools$SimplePool {
   <init>(...);
   *** acquire(...);
   *** release(...);
}

-keep class android.support.v4.util.Pools$SynchronizedPool
-keepclassmembers class android.support.v4.util.Pools$SynchronizedPool {
   <init>(...);
}

-keep class android.support.v4.util.Pools
-keepclassmembers class android.support.v4.util.Pools {
}

-keep class android.support.v4.util.SimpleArrayMap
-keepclassmembers class android.support.v4.util.SimpleArrayMap {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isEmpty(...);
   *** clear(...);
   *** containsKey(...);
   *** containsValue(...);
   *** ensureCapacity(...);
   *** get(...);
   *** indexOfKey(...);
   *** keyAt(...);
   *** put(...);
   *** putAll(...);
   *** remove(...);
   *** removeAt(...);
   *** setValueAt(...);
   *** size(...);
   *** valueAt(...);
}

-keep class android.support.v4.util.SparseArrayCompat
-keepclassmembers class android.support.v4.util.SparseArrayCompat {
   <init>(...);
   <init>(...);
   *** append(...);
   *** clear(...);
   *** clone(...);
   *** delete(...);
   *** get(...);
   *** get(...);
   *** indexOfKey(...);
   *** indexOfValue(...);
   *** keyAt(...);
   *** put(...);
   *** remove(...);
   *** removeAt(...);
   *** removeAtRange(...);
   *** setValueAt(...);
   *** size(...);
   *** valueAt(...);
}

-keep class android.support.v4.util.TimeUtils
-keepclassmembers class android.support.v4.util.TimeUtils {
   <init>(...);
   *** formatDuration(...);
   *** formatDuration(...);
   *** formatDuration(...);
   *** formatDuration(...);
}

-keep class android.support.v4.view.accessibility.AccessibilityEventCompat
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityEventCompat {
   *** appendRecord(...);
   *** asRecord(...);
   *** getContentChangeTypes(...);
   *** getRecord(...);
   *** getRecordCount(...);
   *** setContentChangeTypes(...);
}

-keep class android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat {
   <init>(...);
   *** onAccessibilityStateChanged(...);
}

-keep class android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat {
   *** onAccessibilityStateChanged(...);
}

-keep class android.support.v4.view.accessibility.AccessibilityManagerCompat
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityManagerCompat {
   <init>(...);
   *** addAccessibilityStateChangeListener(...);
   *** getEnabledAccessibilityServiceList(...);
   *** getInstalledAccessibilityServiceList(...);
   *** isTouchExplorationEnabled(...);
   *** removeAccessibilityStateChangeListener(...);
}

-keep class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat {
   <init>(...);
   <init>(...);
   *** getId(...);
   *** getLabel(...);
}

-keep class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat {
   *** getColumnCount(...);
   *** isHierarchical(...);
   *** getRowCount(...);
   *** obtain(...);
}

-keep class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat {
   *** getColumnIndex(...);
   *** getColumnSpan(...);
   *** isHeading(...);
   *** isSelected(...);
   *** getRowIndex(...);
   *** getRowSpan(...);
   *** obtain(...);
}

-keep class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat {
   *** getCurrent(...);
   *** getMax(...);
   *** getMin(...);
   *** getType(...);
}

-keep class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat {
   <init>(...);
   *** isAccessibilityFocused(...);
   *** setAccessibilityFocused(...);
   *** getActionList(...);
   *** getActions(...);
   *** isCheckable(...);
   *** setCheckable(...);
   *** isChecked(...);
   *** setChecked(...);
   *** getChildCount(...);
   *** getClassName(...);
   *** setClassName(...);
   *** isClickable(...);
   *** setClickable(...);
   *** getCollectionInfo(...);
   *** getCollectionItemInfo(...);
   *** getContentDescription(...);
   *** setContentDescription(...);
   *** isContentInvalid(...);
   *** setContentInvalid(...);
   *** isDismissable(...);
   *** setDismissable(...);
   *** isEditable(...);
   *** setEditable(...);
   *** isEnabled(...);
   *** setEnabled(...);
   *** getError(...);
   *** setError(...);
   *** getExtras(...);
   *** isFocusable(...);
   *** setFocusable(...);
   *** isFocused(...);
   *** setFocused(...);
   *** getInfo(...);
   *** getInputType(...);
   *** setInputType(...);
   *** getLabelFor(...);
   *** getLabeledBy(...);
   *** getLiveRegion(...);
   *** setLiveRegion(...);
   *** isLongClickable(...);
   *** setLongClickable(...);
   *** getMaxTextLength(...);
   *** setMaxTextLength(...);
   *** getMovementGranularities(...);
   *** setMovementGranularities(...);
   *** isMultiLine(...);
   *** setMultiLine(...);
   *** getPackageName(...);
   *** setPackageName(...);
   *** getParent(...);
   *** isPassword(...);
   *** setPassword(...);
   *** getRangeInfo(...);
   *** setRangeInfo(...);
   *** isScrollable(...);
   *** setScrollable(...);
   *** isSelected(...);
   *** setSelected(...);
   *** getText(...);
   *** setText(...);
   *** getTextSelectionEnd(...);
   *** getTextSelectionStart(...);
   *** getTraversalAfter(...);
   *** getTraversalBefore(...);
   *** getViewIdResourceName(...);
   *** setViewIdResourceName(...);
   *** isVisibleToUser(...);
   *** setVisibleToUser(...);
   *** getWindow(...);
   *** getWindowId(...);
   *** addAction(...);
   *** addAction(...);
   *** addChild(...);
   *** addChild(...);
   *** canOpenPopup(...);
   *** findAccessibilityNodeInfosByText(...);
   *** findAccessibilityNodeInfosByViewId(...);
   *** findFocus(...);
   *** focusSearch(...);
   *** getBoundsInParent(...);
   *** getBoundsInScreen(...);
   *** getChild(...);
   *** obtain(...);
   *** obtain(...);
   *** obtain(...);
   *** obtain(...);
   *** performAction(...);
   *** performAction(...);
   *** recycle(...);
   *** refresh(...);
   *** removeAction(...);
   *** removeChild(...);
   *** removeChild(...);
   *** setBoundsInParent(...);
   *** setBoundsInScreen(...);
   *** setCanOpenPopup(...);
   *** setCollectionInfo(...);
   *** setCollectionItemInfo(...);
   *** setLabelFor(...);
   *** setLabelFor(...);
   *** setLabeledBy(...);
   *** setLabeledBy(...);
   *** setParent(...);
   *** setParent(...);
   *** setSource(...);
   *** setSource(...);
   *** setTextSelection(...);
   *** setTraversalAfter(...);
   *** setTraversalAfter(...);
   *** setTraversalBefore(...);
   *** setTraversalBefore(...);
}

-keep class android.support.v4.view.accessibility.AccessibilityNodeProviderCompat
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeProviderCompat {
   <init>(...);
   <init>(...);
   *** getProvider(...);
   *** createAccessibilityNodeInfo(...);
   *** findAccessibilityNodeInfosByText(...);
   *** findFocus(...);
   *** performAction(...);
}

-keep class android.support.v4.view.accessibility.AccessibilityRecordCompat
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityRecordCompat {
   <init>(...);
   *** getAddedCount(...);
   *** setAddedCount(...);
   *** getBeforeText(...);
   *** setBeforeText(...);
   *** isChecked(...);
   *** setChecked(...);
   *** getClassName(...);
   *** setClassName(...);
   *** getContentDescription(...);
   *** setContentDescription(...);
   *** getCurrentItemIndex(...);
   *** setCurrentItemIndex(...);
   *** isEnabled(...);
   *** setEnabled(...);
   *** getFromIndex(...);
   *** setFromIndex(...);
   *** isFullScreen(...);
   *** setFullScreen(...);
   *** getImpl(...);
   *** getItemCount(...);
   *** setItemCount(...);
   *** getMaxScrollX(...);
   *** setMaxScrollX(...);
   *** getMaxScrollY(...);
   *** setMaxScrollY(...);
   *** getParcelableData(...);
   *** setParcelableData(...);
   *** isPassword(...);
   *** setPassword(...);
   *** getRemovedCount(...);
   *** setRemovedCount(...);
   *** getScrollX(...);
   *** setScrollX(...);
   *** getScrollY(...);
   *** setScrollY(...);
   *** isScrollable(...);
   *** setScrollable(...);
   *** getSource(...);
   *** getText(...);
   *** getToIndex(...);
   *** setToIndex(...);
   *** getWindowId(...);
   *** obtain(...);
   *** obtain(...);
   *** recycle(...);
   *** setSource(...);
   *** setSource(...);
}

-keep class android.support.v4.view.accessibility.AccessibilityWindowInfoCompat
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityWindowInfoCompat {
   *** getChildCount(...);
   *** getId(...);
   *** isAccessibilityFocused(...);
   *** isActive(...);
   *** isFocused(...);
   *** getLayer(...);
   *** getParent(...);
   *** getRoot(...);
   *** getType(...);
   *** getBoundsInScreen(...);
   *** getChild(...);
   *** obtain(...);
   *** obtain(...);
   *** recycle(...);
}

-keep class android.support.v4.view.AccessibilityDelegateCompat
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat {
   <init>(...);
   *** dispatchPopulateAccessibilityEvent(...);
   *** getAccessibilityNodeProvider(...);
   *** onInitializeAccessibilityEvent(...);
   *** onInitializeAccessibilityNodeInfo(...);
   *** onPopulateAccessibilityEvent(...);
   *** onRequestSendAccessibilityEvent(...);
   *** performAccessibilityAction(...);
   *** sendAccessibilityEvent(...);
   *** sendAccessibilityEventUnchecked(...);
}

-keep class android.support.v4.view.ActionProvider$SubUiVisibilityListener
-keepclassmembers class android.support.v4.view.ActionProvider$SubUiVisibilityListener {
}

-keep class mono.android.support.v4.view.ActionProvider_SubUiVisibilityListenerImplementor
-keepclassmembers class mono.android.support.v4.view.ActionProvider_SubUiVisibilityListenerImplementor {
}

-keep class android.support.v4.view.ActionProvider$VisibilityListener
-keepclassmembers class android.support.v4.view.ActionProvider$VisibilityListener {
}

-keep class mono.android.support.v4.view.ActionProvider_VisibilityListenerImplementor
-keepclassmembers class mono.android.support.v4.view.ActionProvider_VisibilityListenerImplementor {
}

-keep class android.support.v4.view.ActionProvider
-keepclassmembers class android.support.v4.view.ActionProvider {
   <init>(...);
   *** getContext(...);
   *** hasSubMenu(...);
   *** isVisible(...);
   *** onCreateActionView(...);
   *** onCreateActionView(...);
   *** onPerformDefaultAction(...);
   *** onPrepareSubMenu(...);
   *** overridesItemVisibility(...);
   *** refreshVisibility(...);
   *** reset(...);
   *** setSubUiVisibilityListener(...);
   *** setVisibilityListener(...);
   *** subUiVisibilityChanged(...);
}

-keep class android.support.v4.view.ActionProvider
-keepclassmembers class android.support.v4.view.ActionProvider {
   *** onCreateActionView(...);
}

-keep class android.support.v4.view.animation.FastOutLinearInInterpolator
-keepclassmembers class android.support.v4.view.animation.FastOutLinearInInterpolator {
   <init>(...);
   *** getInterpolation(...);
}

-keep class android.support.v4.view.animation.FastOutSlowInInterpolator
-keepclassmembers class android.support.v4.view.animation.FastOutSlowInInterpolator {
   <init>(...);
   *** getInterpolation(...);
}

-keep class android.support.v4.view.animation.LinearOutSlowInInterpolator
-keepclassmembers class android.support.v4.view.animation.LinearOutSlowInInterpolator {
   <init>(...);
   *** getInterpolation(...);
}

-keep class android.support.v4.view.animation.LookupTableInterpolator
-keepclassmembers class android.support.v4.view.animation.LookupTableInterpolator {
   <init>(...);
   *** getInterpolation(...);
}

-keep class android.support.v4.view.animation.LookupTableInterpolator
-keepclassmembers class android.support.v4.view.animation.LookupTableInterpolator {
}

-keep class android.support.v4.view.animation.PathInterpolatorCompat
-keepclassmembers class android.support.v4.view.animation.PathInterpolatorCompat {
   *** create(...);
   *** create(...);
   *** create(...);
}

-keep class android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler
-keepclassmembers class android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler {
}

-keep class android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2
-keepclassmembers class android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2 {
   <init>(...);
   *** isLongpressEnabled(...);
   *** setIsLongpressEnabled(...);
   *** onTouchEvent(...);
   *** setOnDoubleTapListener(...);
}

-keep class android.support.v4.view.GestureDetectorCompat
-keepclassmembers class android.support.v4.view.GestureDetectorCompat {
   <init>(...);
   <init>(...);
   *** isLongpressEnabled(...);
   *** setIsLongpressEnabled(...);
   *** onTouchEvent(...);
   *** setOnDoubleTapListener(...);
}

-keep class android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1
-keepclassmembers class android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 {
   *** apply(...);
   *** apply(...);
   *** applyDisplay(...);
   *** getAbsoluteGravity(...);
}

-keep class android.support.v4.view.GravityCompat
-keepclassmembers class android.support.v4.view.GravityCompat {
   <init>(...);
   *** apply(...);
   *** apply(...);
   *** applyDisplay(...);
   *** getAbsoluteGravity(...);
}

-keep class android.support.v4.view.LayoutInflaterFactory
-keepclassmembers class android.support.v4.view.LayoutInflaterFactory {
}

-keep class android.support.v4.view.NestedScrollingChild
-keepclassmembers class android.support.v4.view.NestedScrollingChild {
}

-keep class android.support.v4.view.NestedScrollingParent
-keepclassmembers class android.support.v4.view.NestedScrollingParent {
}

-keep class android.support.v4.view.OnApplyWindowInsetsListener
-keepclassmembers class android.support.v4.view.OnApplyWindowInsetsListener {
}

-keep class mono.android.support.v4.view.OnApplyWindowInsetsListenerImplementor
-keepclassmembers class mono.android.support.v4.view.OnApplyWindowInsetsListenerImplementor {
}

-keep class android.support.v4.view.ScrollingView
-keepclassmembers class android.support.v4.view.ScrollingView {
}

-keep class android.support.v4.view.TintableBackgroundView
-keepclassmembers class android.support.v4.view.TintableBackgroundView {
}

-keep class android.support.v4.view.ViewPropertyAnimatorListener
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorListener {
}

-keep class mono.android.support.v4.view.ViewPropertyAnimatorListenerImplementor
-keepclassmembers class mono.android.support.v4.view.ViewPropertyAnimatorListenerImplementor {
}

-keep class android.support.v4.view.ViewPropertyAnimatorUpdateListener
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorUpdateListener {
}

-keep class mono.android.support.v4.view.ViewPropertyAnimatorUpdateListenerImplementor
-keepclassmembers class mono.android.support.v4.view.ViewPropertyAnimatorUpdateListenerImplementor {
}

-keep class android.support.v4.view.InputDeviceCompat
-keepclassmembers class android.support.v4.view.InputDeviceCompat {
   <init>(...);
}

-keep class android.support.v4.view.KeyEventCompat
-keepclassmembers class android.support.v4.view.KeyEventCompat {
   <init>(...);
   *** dispatch(...);
   *** getKeyDispatcherState(...);
   *** hasModifiers(...);
   *** hasNoModifiers(...);
   *** isTracking(...);
   *** metaStateHasModifiers(...);
   *** metaStateHasNoModifiers(...);
   *** normalizeMetaState(...);
   *** startTracking(...);
}

-keep class android.support.v4.view.LayoutInflaterCompat
-keepclassmembers class android.support.v4.view.LayoutInflaterCompat {
   *** setFactory(...);
}

-keep class android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplJbMr1
-keepclassmembers class android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplJbMr1 {
   *** getLayoutDirection(...);
   *** getMarginEnd(...);
   *** getMarginStart(...);
   *** isMarginRelative(...);
   *** resolveLayoutDirection(...);
   *** setLayoutDirection(...);
   *** setMarginEnd(...);
   *** setMarginStart(...);
}

-keep class android.support.v4.view.MarginLayoutParamsCompat
-keepclassmembers class android.support.v4.view.MarginLayoutParamsCompat {
   <init>(...);
   *** getLayoutDirection(...);
   *** getMarginEnd(...);
   *** getMarginStart(...);
   *** isMarginRelative(...);
   *** resolveLayoutDirection(...);
   *** setLayoutDirection(...);
   *** setMarginEnd(...);
   *** setMarginStart(...);
}

-keep class android.support.v4.view.MenuCompat
-keepclassmembers class android.support.v4.view.MenuCompat {
   <init>(...);
   *** setShowAsAction(...);
}

-keep class android.support.v4.view.MenuItemCompat$OnActionExpandListener
-keepclassmembers class android.support.v4.view.MenuItemCompat$OnActionExpandListener {
}

-keep class mono.android.support.v4.view.MenuItemCompat_OnActionExpandListenerImplementor
-keepclassmembers class mono.android.support.v4.view.MenuItemCompat_OnActionExpandListenerImplementor {
}

-keep class android.support.v4.view.MenuItemCompat
-keepclassmembers class android.support.v4.view.MenuItemCompat {
   <init>(...);
   *** collapseActionView(...);
   *** expandActionView(...);
   *** getActionProvider(...);
   *** getActionView(...);
   *** isActionViewExpanded(...);
   *** setActionProvider(...);
   *** setActionView(...);
   *** setActionView(...);
   *** setOnActionExpandListener(...);
   *** setShowAsAction(...);
}

-keep class android.support.v4.view.MotionEventCompat
-keepclassmembers class android.support.v4.view.MotionEventCompat {
   <init>(...);
   *** findPointerIndex(...);
   *** getActionIndex(...);
   *** getActionMasked(...);
   *** getAxisValue(...);
   *** getAxisValue(...);
   *** getPointerCount(...);
   *** getPointerId(...);
   *** getSource(...);
   *** getX(...);
   *** getY(...);
}

-keep class android.support.v4.view.NestedScrollingChildHelper
-keepclassmembers class android.support.v4.view.NestedScrollingChildHelper {
   <init>(...);
   *** hasNestedScrollingParent(...);
   *** isNestedScrollingEnabled(...);
   *** setNestedScrollingEnabled(...);
   *** dispatchNestedFling(...);
   *** dispatchNestedPreFling(...);
   *** dispatchNestedPreScroll(...);
   *** dispatchNestedScroll(...);
   *** onDetachedFromWindow(...);
   *** onStopNestedScroll(...);
   *** startNestedScroll(...);
   *** stopNestedScroll(...);
}

-keep class android.support.v4.view.NestedScrollingParentHelper
-keepclassmembers class android.support.v4.view.NestedScrollingParentHelper {
   <init>(...);
   *** getNestedScrollAxes(...);
   *** onNestedScrollAccepted(...);
   *** onStopNestedScroll(...);
}

-keep class android.support.v4.view.PagerAdapter
-keepclassmembers class android.support.v4.view.PagerAdapter {
   <init>(...);
   *** getCount(...);
   *** destroyItem(...);
   *** destroyItem(...);
   *** finishUpdate(...);
   *** finishUpdate(...);
   *** getItemPosition(...);
   *** getPageTitle(...);
   *** getPageWidth(...);
   *** instantiateItem(...);
   *** instantiateItem(...);
   *** isViewFromObject(...);
   *** notifyDataSetChanged(...);
   *** registerDataSetObserver(...);
   *** restoreState(...);
   *** saveState(...);
   *** setPrimaryItem(...);
   *** setPrimaryItem(...);
   *** startUpdate(...);
   *** startUpdate(...);
   *** unregisterDataSetObserver(...);
}

-keep class android.support.v4.view.PagerAdapter
-keepclassmembers class android.support.v4.view.PagerAdapter {
   *** getCount(...);
   *** isViewFromObject(...);
}

-keep class android.support.v4.view.PagerTabStrip
-keepclassmembers class android.support.v4.view.PagerTabStrip {
   <init>(...);
   <init>(...);
   *** getDrawFullUnderline(...);
   *** setDrawFullUnderline(...);
   *** getTabIndicatorColor(...);
   *** setTabIndicatorColor(...);
   *** setTabIndicatorColorResource(...);
}

-keep class android.support.v4.view.PagerTitleStrip$PageListener
-keepclassmembers class android.support.v4.view.PagerTitleStrip$PageListener {
   *** onAdapterChanged(...);
   *** onPageScrollStateChanged(...);
   *** onPageScrolled(...);
   *** onPageSelected(...);
}

-keep class android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs
-keepclassmembers class android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs {
   *** setSingleLineAllCaps(...);
}

-keep class android.support.v4.view.PagerTitleStrip
-keepclassmembers class android.support.v4.view.PagerTitleStrip {
   <init>(...);
   <init>(...);
   *** getTextSpacing(...);
   *** setTextSpacing(...);
   *** onLayout(...);
   *** setGravity(...);
   *** setNonPrimaryAlpha(...);
   *** setTextColor(...);
   *** setTextSize(...);
}

-keep class android.support.v4.view.ScaleGestureDetectorCompat
-keepclassmembers class android.support.v4.view.ScaleGestureDetectorCompat {
   *** isQuickScaleEnabled(...);
   *** setQuickScaleEnabled(...);
}

-keep class android.support.v4.view.VelocityTrackerCompat
-keepclassmembers class android.support.v4.view.VelocityTrackerCompat {
   <init>(...);
   *** getXVelocity(...);
   *** getYVelocity(...);
}

-keep class android.support.v4.view.ViewCompat
-keepclassmembers class android.support.v4.view.ViewCompat {
   <init>(...);
   *** animate(...);
   *** canScrollHorizontally(...);
   *** canScrollVertically(...);
   *** combineMeasuredStates(...);
   *** dispatchApplyWindowInsets(...);
   *** dispatchFinishTemporaryDetach(...);
   *** dispatchNestedFling(...);
   *** dispatchNestedPreFling(...);
   *** dispatchNestedPreScroll(...);
   *** dispatchNestedScroll(...);
   *** dispatchStartTemporaryDetach(...);
   *** getAccessibilityLiveRegion(...);
   *** getAccessibilityNodeProvider(...);
   *** getAlpha(...);
   *** getBackgroundTintList(...);
   *** getBackgroundTintMode(...);
   *** getClipBounds(...);
   *** getElevation(...);
   *** getFitsSystemWindows(...);
   *** getImportantForAccessibility(...);
   *** getLabelFor(...);
   *** getLayerType(...);
   *** getLayoutDirection(...);
   *** getMeasuredHeightAndState(...);
   *** getMeasuredState(...);
   *** getMeasuredWidthAndState(...);
   *** getMinimumHeight(...);
   *** getMinimumWidth(...);
   *** getOverScrollMode(...);
   *** getPaddingEnd(...);
   *** getPaddingStart(...);
   *** getParentForAccessibility(...);
   *** getPivotX(...);
   *** getPivotY(...);
   *** getRotation(...);
   *** getRotationX(...);
   *** getRotationY(...);
   *** getScaleX(...);
   *** getScaleY(...);
   *** getTransitionName(...);
   *** getTranslationX(...);
   *** getTranslationY(...);
   *** getTranslationZ(...);
   *** getWindowSystemUiVisibility(...);
   *** getX(...);
   *** getY(...);
   *** getZ(...);
   *** hasAccessibilityDelegate(...);
   *** hasNestedScrollingParent(...);
   *** hasOverlappingRendering(...);
   *** hasTransientState(...);
   *** isAttachedToWindow(...);
   *** isLaidOut(...);
   *** isNestedScrollingEnabled(...);
   *** isOpaque(...);
   *** isPaddingRelative(...);
   *** jumpDrawablesToCurrentState(...);
   *** offsetLeftAndRight(...);
   *** offsetTopAndBottom(...);
   *** onApplyWindowInsets(...);
   *** onInitializeAccessibilityEvent(...);
   *** onInitializeAccessibilityNodeInfo(...);
   *** onPopulateAccessibilityEvent(...);
   *** performAccessibilityAction(...);
   *** postInvalidateOnAnimation(...);
   *** postInvalidateOnAnimation(...);
   *** postOnAnimation(...);
   *** postOnAnimationDelayed(...);
   *** requestApplyInsets(...);
   *** resolveSizeAndState(...);
   *** setAccessibilityDelegate(...);
   *** setAccessibilityLiveRegion(...);
   *** setActivated(...);
   *** setAlpha(...);
   *** setBackgroundTintList(...);
   *** setBackgroundTintMode(...);
   *** setChildrenDrawingOrderEnabled(...);
   *** setClipBounds(...);
   *** setElevation(...);
   *** setFitsSystemWindows(...);
   *** setHasTransientState(...);
   *** setImportantForAccessibility(...);
   *** setLabelFor(...);
   *** setLayerPaint(...);
   *** setLayerType(...);
   *** setLayoutDirection(...);
   *** setNestedScrollingEnabled(...);
   *** setOnApplyWindowInsetsListener(...);
   *** setOverScrollMode(...);
   *** setPaddingRelative(...);
   *** setPivotX(...);
   *** setPivotY(...);
   *** setRotation(...);
   *** setRotationX(...);
   *** setRotationY(...);
   *** setSaveFromParentEnabled(...);
   *** setScaleX(...);
   *** setScaleY(...);
   *** setTransitionName(...);
   *** setTranslationX(...);
   *** setTranslationY(...);
   *** setTranslationZ(...);
   *** setX(...);
   *** setY(...);
   *** startNestedScroll(...);
   *** stopNestedScroll(...);
}

-keep class android.support.v4.view.ViewConfigurationCompat
-keepclassmembers class android.support.v4.view.ViewConfigurationCompat {
   <init>(...);
   *** getScaledPagingTouchSlop(...);
   *** hasPermanentMenuKey(...);
}

-keep class android.support.v4.view.ViewGroupCompat
-keepclassmembers class android.support.v4.view.ViewGroupCompat {
   *** getLayoutMode(...);
   *** getNestedScrollAxes(...);
   *** isTransitionGroup(...);
   *** onRequestSendAccessibilityEvent(...);
   *** setLayoutMode(...);
   *** setMotionEventSplittingEnabled(...);
   *** setTransitionGroup(...);
}

-keep class android.support.v4.view.ViewParentCompat
-keepclassmembers class android.support.v4.view.ViewParentCompat {
   *** notifySubtreeAccessibilityStateChanged(...);
   *** onNestedFling(...);
   *** onNestedPreFling(...);
   *** onNestedPreScroll(...);
   *** onNestedScroll(...);
   *** onNestedScrollAccepted(...);
   *** onStartNestedScroll(...);
   *** onStopNestedScroll(...);
   *** requestSendAccessibilityEvent(...);
}

-keep class android.support.v4.view.ViewParentCompatICS
-keepclassmembers class android.support.v4.view.ViewParentCompatICS {
   <init>(...);
   *** requestSendAccessibilityEvent(...);
}

-keep class android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl$Starter
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl$Starter {
   *** run(...);
}

-keep class android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl$MyVpaListener
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl$MyVpaListener {
   *** onAnimationCancel(...);
   *** onAnimationEnd(...);
   *** onAnimationStart(...);
}

-keep class android.support.v4.view.ViewPropertyAnimatorCompat
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat {
   *** getDuration(...);
   *** getInterpolator(...);
   *** getStartDelay(...);
   *** alpha(...);
   *** alphaBy(...);
   *** cancel(...);
   *** rotation(...);
   *** rotationBy(...);
   *** rotationX(...);
   *** rotationXBy(...);
   *** rotationY(...);
   *** rotationYBy(...);
   *** scaleX(...);
   *** scaleXBy(...);
   *** scaleY(...);
   *** scaleYBy(...);
   *** setDuration(...);
   *** setInterpolator(...);
   *** setListener(...);
   *** setStartDelay(...);
   *** setUpdateListener(...);
   *** start(...);
   *** translationX(...);
   *** translationXBy(...);
   *** translationY(...);
   *** translationYBy(...);
   *** translationZ(...);
   *** translationZBy(...);
   *** withEndAction(...);
   *** withLayer(...);
   *** withStartAction(...);
   *** x(...);
   *** xBy(...);
   *** y(...);
   *** yBy(...);
   *** z(...);
   *** zBy(...);
}

-keep class android.support.v4.view.ViewPropertyAnimatorListenerAdapter
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorListenerAdapter {
   <init>(...);
   *** onAnimationCancel(...);
   *** onAnimationEnd(...);
   *** onAnimationStart(...);
}

-keep class android.support.v4.view.WindowCompat
-keepclassmembers class android.support.v4.view.WindowCompat {
   <init>(...);
}

-keep class android.support.v4.view.WindowInsetsCompat
-keepclassmembers class android.support.v4.view.WindowInsetsCompat {
   *** hasInsets(...);
   *** hasStableInsets(...);
   *** hasSystemWindowInsets(...);
   *** isConsumed(...);
   *** isRound(...);
   *** getStableInsetBottom(...);
   *** getStableInsetLeft(...);
   *** getStableInsetRight(...);
   *** getStableInsetTop(...);
   *** getSystemWindowInsetBottom(...);
   *** getSystemWindowInsetLeft(...);
   *** getSystemWindowInsetRight(...);
   *** getSystemWindowInsetTop(...);
   *** consumeStableInsets(...);
   *** consumeSystemWindowInsets(...);
   *** replaceSystemWindowInsets(...);
   *** replaceSystemWindowInsets(...);
}

-keep class android.support.v4.widget.AutoScrollHelper$ClampedScroller
-keepclassmembers class android.support.v4.widget.AutoScrollHelper$ClampedScroller {
   <init>(...);
   *** getDeltaX(...);
   *** getDeltaY(...);
   *** getHorizontalDirection(...);
   *** isFinished(...);
   *** getVerticalDirection(...);
   *** computeScrollDelta(...);
   *** requestStop(...);
   *** setRampDownDuration(...);
   *** setRampUpDuration(...);
   *** setTargetVelocity(...);
   *** start(...);
}

-keep class android.support.v4.widget.AutoScrollHelper$ScrollAnimationRunnable
-keepclassmembers class android.support.v4.widget.AutoScrollHelper$ScrollAnimationRunnable {
   *** run(...);
}

-keep class android.support.v4.widget.AutoScrollHelper
-keepclassmembers class android.support.v4.widget.AutoScrollHelper {
   <init>(...);
   *** isEnabled(...);
   *** isExclusive(...);
   *** canTargetScrollHorizontally(...);
   *** canTargetScrollVertically(...);
   *** onTouch(...);
   *** scrollTargetBy(...);
   *** setActivationDelay(...);
   *** setEdgeType(...);
   *** setEnabled(...);
   *** setExclusive(...);
   *** setMaximumEdges(...);
   *** setMaximumVelocity(...);
   *** setMinimumVelocity(...);
   *** setRampDownDuration(...);
   *** setRampUpDuration(...);
   *** setRelativeEdges(...);
   *** setRelativeVelocity(...);
}

-keep class android.support.v4.widget.AutoScrollHelper
-keepclassmembers class android.support.v4.widget.AutoScrollHelper {
   *** canTargetScrollHorizontally(...);
   *** canTargetScrollVertically(...);
   *** scrollTargetBy(...);
}

-keep class android.support.v4.widget.CompoundButtonCompat$BaseCompoundButtonCompat
-keepclassmembers class android.support.v4.widget.CompoundButtonCompat$BaseCompoundButtonCompat {
   *** getButtonDrawable(...);
   *** getButtonTintList(...);
   *** getButtonTintMode(...);
   *** setButtonTintList(...);
   *** setButtonTintMode(...);
}

-keep class android.support.v4.widget.CompoundButtonCompat
-keepclassmembers class android.support.v4.widget.CompoundButtonCompat {
   *** getButtonDrawable(...);
   *** getButtonTintList(...);
   *** getButtonTintMode(...);
   *** setButtonTintList(...);
   *** setButtonTintMode(...);
}

-keep class android.support.v4.widget.ContentLoadingProgressBar
-keepclassmembers class android.support.v4.widget.ContentLoadingProgressBar {
   <init>(...);
   <init>(...);
   *** hide(...);
   *** onAttachedToWindow(...);
   *** onDetachedFromWindow(...);
   *** show(...);
}

-keep class android.support.v4.widget.CursorAdapter$ChangeObserver
-keepclassmembers class android.support.v4.widget.CursorAdapter$ChangeObserver {
   <init>(...);
}

-keep class android.support.v4.widget.CursorAdapter$MyDataSetObserver
-keepclassmembers class android.support.v4.widget.CursorAdapter$MyDataSetObserver {
}

-keep class android.support.v4.widget.CursorAdapter
-keepclassmembers class android.support.v4.widget.CursorAdapter {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCount(...);
   *** getCursor(...);
   *** getFilter(...);
   *** getFilterQueryProvider(...);
   *** setFilterQueryProvider(...);
   *** bindView(...);
   *** changeCursor(...);
   *** convertToString(...);
   *** getItem(...);
   *** getItemId(...);
   *** getView(...);
   *** init(...);
   *** newDropDownView(...);
   *** newView(...);
   *** onContentChanged(...);
   *** runQueryOnBackgroundThread(...);
   *** swapCursor(...);
}

-keep class android.support.v4.widget.CursorAdapter
-keepclassmembers class android.support.v4.widget.CursorAdapter {
   *** bindView(...);
   *** newView(...);
}

-keep class android.support.v4.widget.DrawerLayout$AccessibilityDelegate
-keepclassmembers class android.support.v4.widget.DrawerLayout$AccessibilityDelegate {
}

-keep class android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate
-keepclassmembers class android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate {
}

-keep class android.support.v4.widget.DrawerLayout$DrawerListener
-keepclassmembers class android.support.v4.widget.DrawerLayout$DrawerListener {
}

-keep class mono.android.support.v4.widget.DrawerLayout_DrawerListenerImplementor
-keepclassmembers class mono.android.support.v4.widget.DrawerLayout_DrawerListenerImplementor {
}

-keep class android.support.v4.widget.DrawerLayout$LayoutParams
-keepclassmembers class android.support.v4.widget.DrawerLayout$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class android.support.v4.widget.DrawerLayout$SavedState
-keepclassmembers class android.support.v4.widget.DrawerLayout$SavedState {
   <init>(...);
   <init>(...);
}

-keep class android.support.v4.widget.DrawerLayout$SimpleDrawerListener
-keepclassmembers class android.support.v4.widget.DrawerLayout$SimpleDrawerListener {
   <init>(...);
   *** onDrawerClosed(...);
   *** onDrawerOpened(...);
   *** onDrawerSlide(...);
   *** onDrawerStateChanged(...);
}

-keep class android.support.v4.widget.DrawerLayout$SimpleDrawerListener
-keepclassmembers class android.support.v4.widget.DrawerLayout$SimpleDrawerListener {
}

-keep class android.support.v4.widget.DrawerLayout$ViewDragCallback
-keepclassmembers class android.support.v4.widget.DrawerLayout$ViewDragCallback {
   <init>(...);
   *** removeCallbacks(...);
   *** setDragger(...);
   *** tryCaptureView(...);
}

-keep class android.support.v4.widget.DrawerLayout
-keepclassmembers class android.support.v4.widget.DrawerLayout {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getDrawerElevation(...);
   *** setDrawerElevation(...);
   *** getStatusBarBackgroundDrawable(...);
   *** closeDrawer(...);
   *** closeDrawer(...);
   *** closeDrawers(...);
   *** getDrawerLockMode(...);
   *** getDrawerLockMode(...);
   *** getDrawerTitle(...);
   *** isDrawerOpen(...);
   *** isDrawerOpen(...);
   *** isDrawerVisible(...);
   *** isDrawerVisible(...);
   *** onDraw(...);
   *** onLayout(...);
   *** onRtlPropertiesChanged(...);
   *** openDrawer(...);
   *** openDrawer(...);
   *** setChildInsets(...);
   *** setDrawerListener(...);
   *** setDrawerLockMode(...);
   *** setDrawerLockMode(...);
   *** setDrawerLockMode(...);
   *** setDrawerShadow(...);
   *** setDrawerShadow(...);
   *** setDrawerTitle(...);
   *** setScrimColor(...);
   *** setStatusBarBackground(...);
   *** setStatusBarBackground(...);
   *** setStatusBarBackgroundColor(...);
}

-keep class android.support.v4.widget.EdgeEffectCompat
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat {
   <init>(...);
   *** isFinished(...);
   *** draw(...);
   *** finish(...);
   *** onAbsorb(...);
   *** onPull(...);
   *** onPull(...);
   *** onRelease(...);
   *** setSize(...);
}

-keep class android.support.v4.widget.ExploreByTouchHelper$ExploreByTouchNodeProvider
-keepclassmembers class android.support.v4.widget.ExploreByTouchHelper$ExploreByTouchNodeProvider {
}

-keep class android.support.v4.widget.ExploreByTouchHelper
-keepclassmembers class android.support.v4.widget.ExploreByTouchHelper {
   <init>(...);
   *** getFocusedVirtualView(...);
   *** dispatchHoverEvent(...);
   *** getVirtualViewAt(...);
   *** getVisibleVirtualViews(...);
   *** invalidateRoot(...);
   *** invalidateVirtualView(...);
   *** onPerformActionForVirtualView(...);
   *** onPopulateEventForVirtualView(...);
   *** onPopulateNodeForHost(...);
   *** onPopulateNodeForVirtualView(...);
   *** sendEventForVirtualView(...);
}

-keep class android.support.v4.widget.ExploreByTouchHelper
-keepclassmembers class android.support.v4.widget.ExploreByTouchHelper {
   *** getVirtualViewAt(...);
   *** getVisibleVirtualViews(...);
   *** onPerformActionForVirtualView(...);
   *** onPopulateEventForVirtualView(...);
   *** onPopulateNodeForVirtualView(...);
}

-keep class android.support.v4.widget.TintableCompoundButton
-keepclassmembers class android.support.v4.widget.TintableCompoundButton {
}

-keep class android.support.v4.widget.ListPopupWindowCompat
-keepclassmembers class android.support.v4.widget.ListPopupWindowCompat {
   *** createDragToOpenListener(...);
}

-keep class android.support.v4.widget.ListViewAutoScrollHelper
-keepclassmembers class android.support.v4.widget.ListViewAutoScrollHelper {
   <init>(...);
   *** canTargetScrollHorizontally(...);
   *** canTargetScrollVertically(...);
   *** scrollTargetBy(...);
}

-keep class android.support.v4.widget.PopupMenuCompat
-keepclassmembers class android.support.v4.widget.PopupMenuCompat {
   *** getDragToOpenListener(...);
}

-keep class android.support.v4.widget.PopupWindowCompat
-keepclassmembers class android.support.v4.widget.PopupWindowCompat {
   *** getOverlapAnchor(...);
   *** getWindowLayoutType(...);
   *** setOverlapAnchor(...);
   *** setWindowLayoutType(...);
   *** showAsDropDown(...);
}

-keep class android.support.v4.widget.ResourceCursorAdapter
-keepclassmembers class android.support.v4.widget.ResourceCursorAdapter {
   <init>(...);
   <init>(...);
   <init>(...);
   *** newView(...);
   *** setDropDownViewResource(...);
   *** setViewResource(...);
}

-keep class android.support.v4.widget.ResourceCursorAdapter
-keepclassmembers class android.support.v4.widget.ResourceCursorAdapter {
   *** bindView(...);
}

-keep class android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread
-keepclassmembers class android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread {
   *** abortAnimation(...);
   *** computeScrollOffset(...);
   *** createScroller(...);
   *** fling(...);
   *** fling(...);
   *** getCurrVelocity(...);
   *** getCurrX(...);
   *** getCurrY(...);
   *** getFinalX(...);
   *** getFinalY(...);
   *** isFinished(...);
   *** isOverScrolled(...);
   *** notifyHorizontalEdgeReached(...);
   *** notifyVerticalEdgeReached(...);
   *** startScroll(...);
   *** startScroll(...);
}

-keep class android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs
-keepclassmembers class android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs {
   *** getCurrVelocity(...);
}

-keep class android.support.v4.widget.ScrollerCompat
-keepclassmembers class android.support.v4.widget.ScrollerCompat {
   *** getCurrVelocity(...);
   *** getCurrX(...);
   *** getCurrY(...);
   *** getFinalX(...);
   *** getFinalY(...);
   *** isFinished(...);
   *** isOverScrolled(...);
   *** abortAnimation(...);
   *** computeScrollOffset(...);
   *** create(...);
   *** create(...);
   *** fling(...);
   *** fling(...);
   *** notifyHorizontalEdgeReached(...);
   *** notifyVerticalEdgeReached(...);
   *** startScroll(...);
   *** startScroll(...);
}

-keep class android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat
-keepclassmembers class android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat {
   <init>(...);
   *** onClose(...);
}

-keep class android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat
-keepclassmembers class android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat {
}

-keep class android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat
-keepclassmembers class android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat {
   <init>(...);
   *** onQueryTextChange(...);
   *** onQueryTextSubmit(...);
}

-keep class android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat
-keepclassmembers class android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat {
}

-keep class android.support.v4.widget.SearchViewCompat
-keepclassmembers class android.support.v4.widget.SearchViewCompat {
   *** getQuery(...);
   *** isIconified(...);
   *** isQueryRefinementEnabled(...);
   *** isSubmitButtonEnabled(...);
   *** newSearchView(...);
   *** setIconified(...);
   *** setImeOptions(...);
   *** setInputType(...);
   *** setMaxWidth(...);
   *** setOnCloseListener(...);
   *** setOnQueryTextListener(...);
   *** setQuery(...);
   *** setQueryHint(...);
   *** setQueryRefinementEnabled(...);
   *** setSearchableInfo(...);
   *** setSubmitButtonEnabled(...);
}

-keep class android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter
-keepclassmembers class android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter {
}

-keep class android.support.v4.widget.SimpleCursorAdapter$ViewBinder
-keepclassmembers class android.support.v4.widget.SimpleCursorAdapter$ViewBinder {
}

-keep class android.support.v4.widget.SimpleCursorAdapter
-keepclassmembers class android.support.v4.widget.SimpleCursorAdapter {
   <init>(...);
   <init>(...);
   *** getCursorToStringConverter(...);
   *** setCursorToStringConverter(...);
   *** getStringConversionColumn(...);
   *** setStringConversionColumn(...);
   *** getViewBinder(...);
   *** setViewBinder(...);
   *** bindView(...);
   *** changeCursorAndColumns(...);
   *** setViewImage(...);
   *** setViewText(...);
}

-keep class android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate
-keepclassmembers class android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate {
   *** filter(...);
}

-keep class android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable
-keepclassmembers class android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable {
   *** run(...);
}

-keep class android.support.v4.widget.SlidingPaneLayout$DragHelperCallback
-keepclassmembers class android.support.v4.widget.SlidingPaneLayout$DragHelperCallback {
   *** tryCaptureView(...);
}

-keep class android.support.v4.widget.SlidingPaneLayout$LayoutParams
-keepclassmembers class android.support.v4.widget.SlidingPaneLayout$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class android.support.v4.widget.SlidingPaneLayout$PanelSlideListener
-keepclassmembers class android.support.v4.widget.SlidingPaneLayout$PanelSlideListener {
}

-keep class mono.android.support.v4.widget.SlidingPaneLayout_PanelSlideListenerImplementor
-keepclassmembers class mono.android.support.v4.widget.SlidingPaneLayout_PanelSlideListenerImplementor {
}

-keep class android.support.v4.widget.SlidingPaneLayout$SavedState
-keepclassmembers class android.support.v4.widget.SlidingPaneLayout$SavedState {
}

-keep class android.support.v4.widget.SlidingPaneLayout$SimplePanelSlideListener
-keepclassmembers class android.support.v4.widget.SlidingPaneLayout$SimplePanelSlideListener {
   <init>(...);
   *** onPanelClosed(...);
   *** onPanelOpened(...);
   *** onPanelSlide(...);
}

-keep class android.support.v4.widget.SlidingPaneLayout
-keepclassmembers class android.support.v4.widget.SlidingPaneLayout {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCoveredFadeColor(...);
   *** setCoveredFadeColor(...);
   *** isOpen(...);
   *** isSlideable(...);
   *** getParallaxDistance(...);
   *** setParallaxDistance(...);
   *** getSliderFadeColor(...);
   *** setSliderFadeColor(...);
   *** canScroll(...);
   *** canSlide(...);
   *** closePane(...);
   *** onLayout(...);
   *** openPane(...);
   *** setPanelSlideListener(...);
   *** setShadowDrawable(...);
   *** setShadowDrawableLeft(...);
   *** setShadowDrawableRight(...);
   *** setShadowResource(...);
   *** setShadowResourceLeft(...);
   *** setShadowResourceRight(...);
   *** smoothSlideClosed(...);
   *** smoothSlideOpen(...);
}

-keep class android.support.v4.widget.Space
-keepclassmembers class android.support.v4.widget.Space {
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class android.support.v4.widget.TextViewCompat
-keepclassmembers class android.support.v4.widget.TextViewCompat {
   *** setCompoundDrawablesRelative(...);
   *** setCompoundDrawablesRelativeWithIntrinsicBounds(...);
   *** setCompoundDrawablesRelativeWithIntrinsicBounds(...);
}

-keep class android.support.v4.widget.ViewDragHelper$Callback
-keepclassmembers class android.support.v4.widget.ViewDragHelper$Callback {
   <init>(...);
   *** clampViewPositionHorizontal(...);
   *** clampViewPositionVertical(...);
   *** getOrderedChildIndex(...);
   *** getViewHorizontalDragRange(...);
   *** getViewVerticalDragRange(...);
   *** onEdgeDragStarted(...);
   *** onEdgeLock(...);
   *** onEdgeTouched(...);
   *** onViewCaptured(...);
   *** onViewDragStateChanged(...);
   *** onViewPositionChanged(...);
   *** onViewReleased(...);
   *** tryCaptureView(...);
}

-keep class android.support.v4.widget.ViewDragHelper$Callback
-keepclassmembers class android.support.v4.widget.ViewDragHelper$Callback {
   *** tryCaptureView(...);
}

-keep class android.support.v4.widget.ViewDragHelper
-keepclassmembers class android.support.v4.widget.ViewDragHelper {
   *** getActivePointerId(...);
   *** getCapturedView(...);
   *** getEdgeSize(...);
   *** getMinVelocity(...);
   *** setMinVelocity(...);
   *** getTouchSlop(...);
   *** getViewDragState(...);
   *** abort(...);
   *** canScroll(...);
   *** cancel(...);
   *** captureChildView(...);
   *** checkTouchSlop(...);
   *** checkTouchSlop(...);
   *** continueSettling(...);
   *** create(...);
   *** create(...);
   *** findTopChildUnder(...);
   *** flingCapturedView(...);
   *** isCapturedViewUnder(...);
   *** isEdgeTouched(...);
   *** isEdgeTouched(...);
   *** isPointerDown(...);
   *** isViewUnder(...);
   *** processTouchEvent(...);
   *** setEdgeTrackingEnabled(...);
   *** settleCapturedViewAt(...);
   *** shouldInterceptTouchEvent(...);
   *** smoothSlideViewTo(...);
}

# ACW for Xamarin.AndroidX.Annotation
# ACW for Xamarin.AndroidX.Annotation.Experimental
# ACW for Xamarin.AndroidX.AppCompat.AppCompatResources
-keep class androidx.appcompat.graphics.drawable.DrawableWrapper
-keepclassmembers class androidx.appcompat.graphics.drawable.DrawableWrapper {
   <init>(...);
   *** getOpacity(...);
   *** getWrappedDrawable(...);
   *** setWrappedDrawable(...);
   *** draw(...);
   *** invalidateDrawable(...);
   *** scheduleDrawable(...);
   *** setAlpha(...);
   *** setColorFilter(...);
   *** unscheduleDrawable(...);
}

-keep class androidx.appcompat.content.res.AppCompatResources
-keepclassmembers class androidx.appcompat.content.res.AppCompatResources {
   *** getColorStateList(...);
   *** getDrawable(...);
}

# ACW for Xamarin.AndroidX.AppCompat
-keep class androidx.appcompat.graphics.drawable.DrawerArrowDrawable
-keepclassmembers class androidx.appcompat.graphics.drawable.DrawerArrowDrawable {
   <init>(...);
   *** getArrowHeadLength(...);
   *** setArrowHeadLength(...);
   *** getArrowShaftLength(...);
   *** setArrowShaftLength(...);
   *** getBarLength(...);
   *** setBarLength(...);
   *** getBarThickness(...);
   *** setBarThickness(...);
   *** getColor(...);
   *** setColor(...);
   *** getDirection(...);
   *** setDirection(...);
   *** getGapSize(...);
   *** setGapSize(...);
   *** getOpacity(...);
   *** getPaint(...);
   *** getProgress(...);
   *** setProgress(...);
   *** isSpinEnabled(...);
   *** setSpinEnabled(...);
   *** draw(...);
   *** setAlpha(...);
   *** setColorFilter(...);
   *** setVerticalMirror(...);
}

-keep class androidx.appcompat.app.AlertDialog$Builder
-keepclassmembers class androidx.appcompat.app.AlertDialog$Builder {
   <init>(...);
   <init>(...);
   *** getContext(...);
   *** create(...);
   *** setAdapter(...);
   *** setCancelable(...);
   *** setCursor(...);
   *** setCustomTitle(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setIconAttribute(...);
   *** setInverseBackgroundForced(...);
   *** setItems(...);
   *** setItems(...);
   *** setMessage(...);
   *** setMessage(...);
   *** setMultiChoiceItems(...);
   *** setMultiChoiceItems(...);
   *** setMultiChoiceItems(...);
   *** setNegativeButton(...);
   *** setNegativeButton(...);
   *** setNegativeButtonIcon(...);
   *** setNeutralButton(...);
   *** setNeutralButton(...);
   *** setNeutralButtonIcon(...);
   *** setOnCancelListener(...);
   *** setOnDismissListener(...);
   *** setOnItemSelectedListener(...);
   *** setOnKeyListener(...);
   *** setPositiveButton(...);
   *** setPositiveButton(...);
   *** setPositiveButtonIcon(...);
   *** setRecycleOnMeasureEnabled(...);
   *** setSingleChoiceItems(...);
   *** setSingleChoiceItems(...);
   *** setSingleChoiceItems(...);
   *** setSingleChoiceItems(...);
   *** setTitle(...);
   *** setTitle(...);
   *** setView(...);
   *** setView(...);
   *** setView(...);
   *** show(...);
}

-keep class androidx.appcompat.app.AlertDialog
-keepclassmembers class androidx.appcompat.app.AlertDialog {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getListView(...);
   *** getButton(...);
   *** setButton(...);
   *** setButton(...);
   *** setButton(...);
   *** setCustomTitle(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setIconAttribute(...);
   *** setMessage(...);
   *** setView(...);
   *** setView(...);
}

-keep class androidx.appcompat.app.ActionBar$LayoutParams
-keepclassmembers class androidx.appcompat.app.ActionBar$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class androidx.appcompat.app.ActionBar$OnMenuVisibilityListener
-keepclassmembers class androidx.appcompat.app.ActionBar$OnMenuVisibilityListener {
}

-keep class mono.androidx.appcompat.app.ActionBar_OnMenuVisibilityListenerImplementor
-keepclassmembers class mono.androidx.appcompat.app.ActionBar_OnMenuVisibilityListenerImplementor {
}

-keep class androidx.appcompat.app.ActionBar$OnNavigationListener
-keepclassmembers class androidx.appcompat.app.ActionBar$OnNavigationListener {
}

-keep class androidx.appcompat.app.ActionBar$Tab
-keepclassmembers class androidx.appcompat.app.ActionBar$Tab {
   <init>(...);
   *** getContentDescription(...);
   *** getCustomView(...);
   *** getIcon(...);
   *** getPosition(...);
   *** getTag(...);
   *** getText(...);
   *** select(...);
   *** setContentDescription(...);
   *** setContentDescription(...);
   *** setCustomView(...);
   *** setCustomView(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setTabListener(...);
   *** setTag(...);
   *** setText(...);
   *** setText(...);
}

-keep class androidx.appcompat.app.ActionBar$Tab
-keepclassmembers class androidx.appcompat.app.ActionBar$Tab {
   *** getContentDescription(...);
   *** getCustomView(...);
   *** getIcon(...);
   *** getPosition(...);
   *** getTag(...);
   *** getText(...);
   *** select(...);
   *** setContentDescription(...);
   *** setContentDescription(...);
   *** setCustomView(...);
   *** setCustomView(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setTabListener(...);
   *** setTag(...);
   *** setText(...);
   *** setText(...);
}

-keep class androidx.appcompat.app.ActionBar$TabListener
-keepclassmembers class androidx.appcompat.app.ActionBar$TabListener {
}

-keep class androidx.appcompat.app.ActionBar
-keepclassmembers class androidx.appcompat.app.ActionBar {
   <init>(...);
   *** getCustomView(...);
   *** setCustomView(...);
   *** getDisplayOptions(...);
   *** setDisplayOptions(...);
   *** getElevation(...);
   *** setElevation(...);
   *** getHeight(...);
   *** getHideOffset(...);
   *** setHideOffset(...);
   *** isHideOnContentScrollEnabled(...);
   *** setHideOnContentScrollEnabled(...);
   *** isShowing(...);
   *** isTitleTruncated(...);
   *** getNavigationItemCount(...);
   *** getNavigationMode(...);
   *** setNavigationMode(...);
   *** getSelectedNavigationIndex(...);
   *** getSelectedTab(...);
   *** getSubtitle(...);
   *** setSubtitle(...);
   *** getTabCount(...);
   *** getThemedContext(...);
   *** getTitle(...);
   *** setTitle(...);
   *** addOnMenuVisibilityListener(...);
   *** addTab(...);
   *** addTab(...);
   *** addTab(...);
   *** addTab(...);
   *** closeOptionsMenu(...);
   *** collapseActionView(...);
   *** dispatchMenuVisibilityChanged(...);
   *** getTabAt(...);
   *** hide(...);
   *** invalidateOptionsMenu(...);
   *** newTab(...);
   *** onConfigurationChanged(...);
   *** onKeyShortcut(...);
   *** onMenuKeyEvent(...);
   *** openOptionsMenu(...);
   *** removeAllTabs(...);
   *** removeOnMenuVisibilityListener(...);
   *** removeTab(...);
   *** removeTabAt(...);
   *** selectTab(...);
   *** setBackgroundDrawable(...);
   *** setCustomView(...);
   *** setCustomView(...);
   *** setDefaultDisplayHomeAsUpEnabled(...);
   *** setDisplayHomeAsUpEnabled(...);
   *** setDisplayOptions(...);
   *** setDisplayShowCustomEnabled(...);
   *** setDisplayShowHomeEnabled(...);
   *** setDisplayShowTitleEnabled(...);
   *** setDisplayUseLogoEnabled(...);
   *** setHomeActionContentDescription(...);
   *** setHomeActionContentDescription(...);
   *** setHomeAsUpIndicator(...);
   *** setHomeAsUpIndicator(...);
   *** setHomeButtonEnabled(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setListNavigationCallbacks(...);
   *** setLogo(...);
   *** setLogo(...);
   *** setSelectedNavigationItem(...);
   *** setShowHideAnimationEnabled(...);
   *** setSplitBackgroundDrawable(...);
   *** setStackedBackgroundDrawable(...);
   *** setSubtitle(...);
   *** setTitle(...);
   *** setWindowTitle(...);
   *** show(...);
   *** startActionMode(...);
}

-keep class androidx.appcompat.app.ActionBar
-keepclassmembers class androidx.appcompat.app.ActionBar {
   *** getCustomView(...);
   *** setCustomView(...);
   *** getDisplayOptions(...);
   *** setDisplayOptions(...);
   *** getHeight(...);
   *** isShowing(...);
   *** getNavigationItemCount(...);
   *** getNavigationMode(...);
   *** setNavigationMode(...);
   *** getSelectedNavigationIndex(...);
   *** getSelectedTab(...);
   *** getSubtitle(...);
   *** setSubtitle(...);
   *** getTabCount(...);
   *** getTitle(...);
   *** setTitle(...);
   *** addOnMenuVisibilityListener(...);
   *** addTab(...);
   *** addTab(...);
   *** addTab(...);
   *** addTab(...);
   *** getTabAt(...);
   *** hide(...);
   *** newTab(...);
   *** removeAllTabs(...);
   *** removeOnMenuVisibilityListener(...);
   *** removeTab(...);
   *** removeTabAt(...);
   *** selectTab(...);
   *** setBackgroundDrawable(...);
   *** setCustomView(...);
   *** setCustomView(...);
   *** setDisplayHomeAsUpEnabled(...);
   *** setDisplayOptions(...);
   *** setDisplayShowCustomEnabled(...);
   *** setDisplayShowHomeEnabled(...);
   *** setDisplayShowTitleEnabled(...);
   *** setDisplayUseLogoEnabled(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setListNavigationCallbacks(...);
   *** setLogo(...);
   *** setLogo(...);
   *** setSelectedNavigationItem(...);
   *** setSubtitle(...);
   *** setTitle(...);
   *** show(...);
}

-keep class androidx.appcompat.app.ActionBarDrawerToggle$Delegate
-keepclassmembers class androidx.appcompat.app.ActionBarDrawerToggle$Delegate {
}

-keep class androidx.appcompat.app.ActionBarDrawerToggle$DelegateProvider
-keepclassmembers class androidx.appcompat.app.ActionBarDrawerToggle$DelegateProvider {
}

-keep class androidx.appcompat.app.ActionBarDrawerToggle
-keepclassmembers class androidx.appcompat.app.ActionBarDrawerToggle {
   <init>(...);
   <init>(...);
   *** getDrawerArrowDrawable(...);
   *** setDrawerArrowDrawable(...);
   *** isDrawerIndicatorEnabled(...);
   *** setDrawerIndicatorEnabled(...);
   *** isDrawerSlideAnimationEnabled(...);
   *** setDrawerSlideAnimationEnabled(...);
   *** getToolbarNavigationClickListener(...);
   *** setToolbarNavigationClickListener(...);
   *** onConfigurationChanged(...);
   *** onDrawerClosed(...);
   *** onDrawerOpened(...);
   *** onDrawerSlide(...);
   *** onDrawerStateChanged(...);
   *** onOptionsItemSelected(...);
   *** setHomeAsUpIndicator(...);
   *** setHomeAsUpIndicator(...);
   *** syncState(...);
}

-keep class androidx.appcompat.app.AppCompatActivity
-keepclassmembers class androidx.appcompat.app.AppCompatActivity {
   <init>(...);
   <init>(...);
   *** getDelegate(...);
   *** getDrawerToggleDelegate(...);
   *** getSupportActionBar(...);
   *** getSupportParentActivityIntent(...);
   *** onCreateSupportNavigateUpTaskStack(...);
   *** onMenuItemSelected(...);
   *** onNightModeChanged(...);
   *** onPrepareSupportNavigateUpTaskStack(...);
   *** onSupportActionModeFinished(...);
   *** onSupportActionModeStarted(...);
   *** onSupportContentChanged(...);
   *** onSupportNavigateUp(...);
   *** onWindowStartingSupportActionMode(...);
   *** setSupportActionBar(...);
   *** setSupportProgress(...);
   *** setSupportProgressBarIndeterminate(...);
   *** setSupportProgressBarIndeterminateVisibility(...);
   *** setSupportProgressBarVisibility(...);
   *** startSupportActionMode(...);
   *** supportNavigateUpTo(...);
   *** supportRequestWindowFeature(...);
   *** supportShouldUpRecreateTask(...);
}

-keep class androidx.appcompat.app.AppCompatDelegate
-keepclassmembers class androidx.appcompat.app.AppCompatDelegate {
   *** isCompatVectorFromResourcesEnabled(...);
   *** setCompatVectorFromResourcesEnabled(...);
   *** getDefaultNightMode(...);
   *** setDefaultNightMode(...);
   *** getDrawerToggleDelegate(...);
   *** isHandleNativeActionModesEnabled(...);
   *** setHandleNativeActionModesEnabled(...);
   *** getLocalNightMode(...);
   *** getMenuInflater(...);
   *** getSupportActionBar(...);
   *** addContentView(...);
   *** applyDayNight(...);
   *** attachBaseContext(...);
   *** attachBaseContext2(...);
   *** create(...);
   *** create(...);
   *** create(...);
   *** create(...);
   *** createView(...);
   *** findViewById(...);
   *** hasWindowFeature(...);
   *** installViewFactory(...);
   *** invalidateOptionsMenu(...);
   *** onConfigurationChanged(...);
   *** onCreate(...);
   *** onDestroy(...);
   *** onPostCreate(...);
   *** onPostResume(...);
   *** onSaveInstanceState(...);
   *** onStart(...);
   *** onStop(...);
   *** requestWindowFeature(...);
   *** setContentView(...);
   *** setContentView(...);
   *** setContentView(...);
   *** setLocalNightMode(...);
   *** setSupportActionBar(...);
   *** setTheme(...);
   *** setTitle(...);
   *** startSupportActionMode(...);
}

-keep class androidx.appcompat.app.AppCompatDelegate
-keepclassmembers class androidx.appcompat.app.AppCompatDelegate {
   *** getDrawerToggleDelegate(...);
   *** isHandleNativeActionModesEnabled(...);
   *** setHandleNativeActionModesEnabled(...);
   *** getMenuInflater(...);
   *** getSupportActionBar(...);
   *** addContentView(...);
   *** applyDayNight(...);
   *** createView(...);
   *** findViewById(...);
   *** hasWindowFeature(...);
   *** installViewFactory(...);
   *** invalidateOptionsMenu(...);
   *** onConfigurationChanged(...);
   *** onCreate(...);
   *** onDestroy(...);
   *** onPostCreate(...);
   *** onPostResume(...);
   *** onSaveInstanceState(...);
   *** onStart(...);
   *** onStop(...);
   *** requestWindowFeature(...);
   *** setContentView(...);
   *** setContentView(...);
   *** setContentView(...);
   *** setLocalNightMode(...);
   *** setSupportActionBar(...);
   *** setTitle(...);
   *** startSupportActionMode(...);
}

-keep class androidx.appcompat.app.AppCompatDialog
-keepclassmembers class androidx.appcompat.app.AppCompatDialog {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getDelegate(...);
   *** getSupportActionBar(...);
   *** onSupportActionModeFinished(...);
   *** onSupportActionModeStarted(...);
   *** onWindowStartingSupportActionMode(...);
   *** supportRequestWindowFeature(...);
}

-keep class androidx.appcompat.app.AppCompatCallback
-keepclassmembers class androidx.appcompat.app.AppCompatCallback {
}

-keep class androidx.appcompat.widget.Toolbar$LayoutParams
-keepclassmembers class androidx.appcompat.widget.Toolbar$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class androidx.appcompat.widget.Toolbar$OnMenuItemClickListener
-keepclassmembers class androidx.appcompat.widget.Toolbar$OnMenuItemClickListener {
}

-keep class mono.androidx.appcompat.widget.Toolbar_OnMenuItemClickListenerImplementor
-keepclassmembers class mono.androidx.appcompat.widget.Toolbar_OnMenuItemClickListenerImplementor {
}

-keep class androidx.appcompat.widget.Toolbar
-keepclassmembers class androidx.appcompat.widget.Toolbar {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCollapseContentDescription(...);
   *** setCollapseContentDescription(...);
   *** getCollapseIcon(...);
   *** setCollapseIcon(...);
   *** getContentInsetEnd(...);
   *** getContentInsetEndWithActions(...);
   *** setContentInsetEndWithActions(...);
   *** getContentInsetLeft(...);
   *** getContentInsetRight(...);
   *** getContentInsetStart(...);
   *** getContentInsetStartWithNavigation(...);
   *** setContentInsetStartWithNavigation(...);
   *** getCurrentContentInsetEnd(...);
   *** getCurrentContentInsetLeft(...);
   *** getCurrentContentInsetRight(...);
   *** getCurrentContentInsetStart(...);
   *** hasExpandedActionView(...);
   *** isOverflowMenuShowPending(...);
   *** isOverflowMenuShowing(...);
   *** isTitleTruncated(...);
   *** getLogo(...);
   *** setLogo(...);
   *** getLogoDescription(...);
   *** setLogoDescription(...);
   *** getMenu(...);
   *** getNavigationContentDescription(...);
   *** setNavigationContentDescription(...);
   *** getNavigationIcon(...);
   *** setNavigationIcon(...);
   *** getOverflowIcon(...);
   *** setOverflowIcon(...);
   *** getPopupTheme(...);
   *** setPopupTheme(...);
   *** getSubtitle(...);
   *** setSubtitle(...);
   *** getTitle(...);
   *** setTitle(...);
   *** getTitleMarginBottom(...);
   *** setTitleMarginBottom(...);
   *** getTitleMarginEnd(...);
   *** setTitleMarginEnd(...);
   *** getTitleMarginStart(...);
   *** setTitleMarginStart(...);
   *** getTitleMarginTop(...);
   *** setTitleMarginTop(...);
   *** getWrapper(...);
   *** canShowOverflowMenu(...);
   *** collapseActionView(...);
   *** dismissPopupMenus(...);
   *** hideOverflowMenu(...);
   *** inflateMenu(...);
   *** onLayout(...);
   *** setCollapseContentDescription(...);
   *** setCollapseIcon(...);
   *** setCollapsible(...);
   *** setContentInsetsAbsolute(...);
   *** setContentInsetsRelative(...);
   *** setLogo(...);
   *** setLogoDescription(...);
   *** setMenuCallbacks(...);
   *** setNavigationContentDescription(...);
   *** setNavigationIcon(...);
   *** setNavigationOnClickListener(...);
   *** setOnMenuItemClickListener(...);
   *** setSubtitle(...);
   *** setSubtitleTextAppearance(...);
   *** setSubtitleTextColor(...);
   *** setSubtitleTextColor(...);
   *** setTitle(...);
   *** setTitleMargin(...);
   *** setTitleTextAppearance(...);
   *** setTitleTextColor(...);
   *** setTitleTextColor(...);
   *** showOverflowMenu(...);
}

-keep class androidx.appcompat.widget.AppCompatAutoCompleteTextView
-keepclassmembers class androidx.appcompat.widget.AppCompatAutoCompleteTextView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getSupportBackgroundTintList(...);
   *** setSupportBackgroundTintList(...);
   *** getSupportBackgroundTintMode(...);
   *** setSupportBackgroundTintMode(...);
}

-keep class androidx.appcompat.widget.AppCompatButton
-keepclassmembers class androidx.appcompat.widget.AppCompatButton {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getSupportBackgroundTintList(...);
   *** setSupportBackgroundTintList(...);
   *** getSupportBackgroundTintMode(...);
   *** setSupportBackgroundTintMode(...);
   *** getSupportCompoundDrawablesTintList(...);
   *** setSupportCompoundDrawablesTintList(...);
   *** getSupportCompoundDrawablesTintMode(...);
   *** setSupportCompoundDrawablesTintMode(...);
   *** setSupportAllCaps(...);
}

-keep class androidx.appcompat.widget.AppCompatCheckBox
-keepclassmembers class androidx.appcompat.widget.AppCompatCheckBox {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getSupportBackgroundTintList(...);
   *** setSupportBackgroundTintList(...);
   *** getSupportBackgroundTintMode(...);
   *** setSupportBackgroundTintMode(...);
   *** getSupportButtonTintList(...);
   *** setSupportButtonTintList(...);
   *** getSupportButtonTintMode(...);
   *** setSupportButtonTintMode(...);
}

-keep class androidx.appcompat.widget.AppCompatImageButton
-keepclassmembers class androidx.appcompat.widget.AppCompatImageButton {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getSupportBackgroundTintList(...);
   *** setSupportBackgroundTintList(...);
   *** getSupportBackgroundTintMode(...);
   *** setSupportBackgroundTintMode(...);
   *** getSupportImageTintList(...);
   *** setSupportImageTintList(...);
   *** getSupportImageTintMode(...);
   *** setSupportImageTintMode(...);
}

-keep class androidx.appcompat.widget.AppCompatRadioButton
-keepclassmembers class androidx.appcompat.widget.AppCompatRadioButton {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getSupportBackgroundTintList(...);
   *** setSupportBackgroundTintList(...);
   *** getSupportBackgroundTintMode(...);
   *** setSupportBackgroundTintMode(...);
   *** getSupportButtonTintList(...);
   *** setSupportButtonTintList(...);
   *** getSupportButtonTintMode(...);
   *** setSupportButtonTintMode(...);
}

-keep class androidx.appcompat.widget.DecorToolbar
-keepclassmembers class androidx.appcompat.widget.DecorToolbar {
}

-keep class androidx.appcompat.widget.LinearLayoutCompat
-keepclassmembers class androidx.appcompat.widget.LinearLayoutCompat {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isBaselineAligned(...);
   *** setBaselineAligned(...);
   *** getBaselineAlignedChildIndex(...);
   *** setBaselineAlignedChildIndex(...);
   *** getDividerDrawable(...);
   *** setDividerDrawable(...);
   *** getDividerPadding(...);
   *** setDividerPadding(...);
   *** getDividerWidth(...);
   *** getGravity(...);
   *** setGravity(...);
   *** isMeasureWithLargestChildEnabled(...);
   *** setMeasureWithLargestChildEnabled(...);
   *** getOrientation(...);
   *** setOrientation(...);
   *** getShowDividers(...);
   *** setShowDividers(...);
   *** getWeightSum(...);
   *** setWeightSum(...);
   *** hasDividerBeforeChildAt(...);
   *** onLayout(...);
   *** setHorizontalGravity(...);
   *** setVerticalGravity(...);
}

-keep class androidx.appcompat.widget.PopupMenu$OnDismissListener
-keepclassmembers class androidx.appcompat.widget.PopupMenu$OnDismissListener {
}

-keep class mono.androidx.appcompat.widget.PopupMenu_OnDismissListenerImplementor
-keepclassmembers class mono.androidx.appcompat.widget.PopupMenu_OnDismissListenerImplementor {
}

-keep class androidx.appcompat.widget.PopupMenu$OnMenuItemClickListener
-keepclassmembers class androidx.appcompat.widget.PopupMenu$OnMenuItemClickListener {
}

-keep class mono.androidx.appcompat.widget.PopupMenu_OnMenuItemClickListenerImplementor
-keepclassmembers class mono.androidx.appcompat.widget.PopupMenu_OnMenuItemClickListenerImplementor {
}

-keep class androidx.appcompat.widget.PopupMenu
-keepclassmembers class androidx.appcompat.widget.PopupMenu {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getDragToOpenListener(...);
   *** getGravity(...);
   *** setGravity(...);
   *** getMenu(...);
   *** getMenuInflater(...);
   *** dismiss(...);
   *** inflate(...);
   *** setOnDismissListener(...);
   *** setOnMenuItemClickListener(...);
   *** show(...);
}

-keep class androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener
-keepclassmembers class androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener {
   <init>(...);
   *** withFinalVisibility(...);
}

-keep class androidx.appcompat.widget.ScrollingTabContainerView
-keepclassmembers class androidx.appcompat.widget.ScrollingTabContainerView {
   <init>(...);
   *** addTab(...);
   *** addTab(...);
   *** animateToTab(...);
   *** animateToVisibility(...);
   *** onAttachedToWindow(...);
   *** onDetachedFromWindow(...);
   *** onItemSelected(...);
   *** onMeasure(...);
   *** onNothingSelected(...);
   *** removeAllTabs(...);
   *** removeTabAt(...);
   *** setAllowCollapse(...);
   *** setContentHeight(...);
   *** setTabSelected(...);
   *** updateTab(...);
}

-keep class androidx.appcompat.widget.SwitchCompat
-keepclassmembers class androidx.appcompat.widget.SwitchCompat {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getShowText(...);
   *** setShowText(...);
   *** getSplitTrack(...);
   *** setSplitTrack(...);
   *** getSwitchMinWidth(...);
   *** setSwitchMinWidth(...);
   *** getSwitchPadding(...);
   *** setSwitchPadding(...);
   *** getTextOff(...);
   *** setTextOff(...);
   *** getTextOn(...);
   *** setTextOn(...);
   *** getThumbDrawable(...);
   *** setThumbDrawable(...);
   *** getThumbTextPadding(...);
   *** setThumbTextPadding(...);
   *** getThumbTintList(...);
   *** setThumbTintList(...);
   *** getThumbTintMode(...);
   *** setThumbTintMode(...);
   *** getTrackDrawable(...);
   *** setTrackDrawable(...);
   *** getTrackTintList(...);
   *** setTrackTintList(...);
   *** getTrackTintMode(...);
   *** setTrackTintMode(...);
   *** onMeasure(...);
   *** setSwitchTextAppearance(...);
   *** setSwitchTypeface(...);
   *** setSwitchTypeface(...);
   *** setThumbResource(...);
   *** setTrackResource(...);
}

-keep class androidx.appcompat.view.ActionMode$Callback
-keepclassmembers class androidx.appcompat.view.ActionMode$Callback {
}

-keep class androidx.appcompat.view.ActionMode
-keepclassmembers class androidx.appcompat.view.ActionMode {
   <init>(...);
   *** getCustomView(...);
   *** setCustomView(...);
   *** isTitleOptional(...);
   *** isUiFocusable(...);
   *** getMenu(...);
   *** getMenuInflater(...);
   *** getSubtitle(...);
   *** setSubtitle(...);
   *** getTag(...);
   *** setTag(...);
   *** getTitle(...);
   *** setTitle(...);
   *** getTitleOptionalHint(...);
   *** setTitleOptionalHint(...);
   *** finish(...);
   *** invalidate(...);
   *** setSubtitle(...);
   *** setTitle(...);
}

-keep class androidx.appcompat.view.ActionMode
-keepclassmembers class androidx.appcompat.view.ActionMode {
   *** getCustomView(...);
   *** setCustomView(...);
   *** getMenu(...);
   *** getMenuInflater(...);
   *** getSubtitle(...);
   *** setSubtitle(...);
   *** getTitle(...);
   *** setTitle(...);
   *** finish(...);
   *** invalidate(...);
   *** setSubtitle(...);
   *** setTitle(...);
}

-keep class androidx.appcompat.view.menu.MenuBuilder$Callback
-keepclassmembers class androidx.appcompat.view.menu.MenuBuilder$Callback {
}

-keep class androidx.appcompat.view.menu.MenuBuilder
-keepclassmembers class androidx.appcompat.view.menu.MenuBuilder {
   <init>(...);
   *** getActionItems(...);
   *** getActionViewStatesKey(...);
   *** getContext(...);
   *** getExpandedItem(...);
   *** isGroupDividerEnabled(...);
   *** setGroupDividerEnabled(...);
   *** hasVisibleItems(...);
   *** getHeaderIcon(...);
   *** getHeaderTitle(...);
   *** getHeaderView(...);
   *** getNonActionItems(...);
   *** getRootMenu(...);
   *** isShortcutsVisible(...);
   *** setShortcutsVisible(...);
   *** getVisibleItems(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** addIntentOptions(...);
   *** addInternal(...);
   *** addMenuPresenter(...);
   *** addMenuPresenter(...);
   *** addSubMenu(...);
   *** addSubMenu(...);
   *** addSubMenu(...);
   *** addSubMenu(...);
   *** changeMenuMode(...);
   *** clear(...);
   *** clearAll(...);
   *** clearHeader(...);
   *** close(...);
   *** close(...);
   *** collapseItemActionView(...);
   *** expandItemActionView(...);
   *** findGroupIndex(...);
   *** findGroupIndex(...);
   *** findItem(...);
   *** findItemIndex(...);
   *** flagActionItems(...);
   *** getItem(...);
   *** isShortcutKey(...);
   *** onItemsChanged(...);
   *** performIdentifierAction(...);
   *** performItemAction(...);
   *** performItemAction(...);
   *** performShortcut(...);
   *** removeGroup(...);
   *** removeItem(...);
   *** removeItemAt(...);
   *** removeMenuPresenter(...);
   *** restoreActionViewStates(...);
   *** restorePresenterStates(...);
   *** saveActionViewStates(...);
   *** savePresenterStates(...);
   *** setCallback(...);
   *** setCurrentMenuInfo(...);
   *** setDefaultShowAsAction(...);
   *** setGroupCheckable(...);
   *** setGroupEnabled(...);
   *** setGroupVisible(...);
   *** setHeaderIconInt(...);
   *** setHeaderIconInt(...);
   *** setHeaderTitleInt(...);
   *** setHeaderTitleInt(...);
   *** setHeaderViewInt(...);
   *** setOptionalIconsVisible(...);
   *** setOverrideVisibleItems(...);
   *** setQwertyMode(...);
   *** size(...);
   *** startDispatchingItemsChanged(...);
   *** stopDispatchingItemsChanged(...);
}

-keep class androidx.appcompat.view.menu.MenuPresenter$Callback
-keepclassmembers class androidx.appcompat.view.menu.MenuPresenter$Callback {
}

-keep class androidx.appcompat.view.menu.MenuPresenter
-keepclassmembers class androidx.appcompat.view.menu.MenuPresenter {
}

-keep class androidx.appcompat.view.menu.MenuView$ItemView
-keepclassmembers class androidx.appcompat.view.menu.MenuView$ItemView {
}

-keep class androidx.appcompat.view.menu.MenuView
-keepclassmembers class androidx.appcompat.view.menu.MenuView {
}

-keep class androidx.appcompat.view.menu.MenuItemImpl
-keepclassmembers class androidx.appcompat.view.menu.MenuItemImpl {
   *** getActionProvider(...);
   *** getActionView(...);
   *** getAlphabeticModifiers(...);
   *** getAlphabeticShortcut(...);
   *** getContentDescription(...);
   *** isExclusiveCheckable(...);
   *** setExclusiveCheckable(...);
   *** getGroupId(...);
   *** hasCollapsibleActionView(...);
   *** hasSubMenu(...);
   *** getIcon(...);
   *** getIconTintList(...);
   *** getIconTintMode(...);
   *** getIntent(...);
   *** isActionButton(...);
   *** setIsActionButton(...);
   *** isActionViewExpanded(...);
   *** isCheckable(...);
   *** isChecked(...);
   *** isEnabled(...);
   *** isVisible(...);
   *** getItemId(...);
   *** getMenuInfo(...);
   *** getNumericModifiers(...);
   *** getNumericShortcut(...);
   *** getOrder(...);
   *** getOrdering(...);
   *** getSubMenu(...);
   *** getSupportActionProvider(...);
   *** getTitle(...);
   *** getTitleCondensed(...);
   *** getTooltipText(...);
   *** actionFormatChanged(...);
   *** collapseActionView(...);
   *** expandActionView(...);
   *** invoke(...);
   *** requestsActionButton(...);
   *** requiresActionButton(...);
   *** requiresOverflow(...);
   *** setActionProvider(...);
   *** setActionView(...);
   *** setActionView(...);
   *** setActionViewExpanded(...);
   *** setAlphabeticShortcut(...);
   *** setAlphabeticShortcut(...);
   *** setCallback(...);
   *** setCheckable(...);
   *** setChecked(...);
   *** setContentDescription(...);
   *** setEnabled(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setIconTintList(...);
   *** setIconTintMode(...);
   *** setIntent(...);
   *** setNumericShortcut(...);
   *** setNumericShortcut(...);
   *** setOnActionExpandListener(...);
   *** setOnMenuItemClickListener(...);
   *** setShortcut(...);
   *** setShortcut(...);
   *** setShowAsAction(...);
   *** setShowAsActionFlags(...);
   *** setSubMenu(...);
   *** setSupportActionProvider(...);
   *** setTitle(...);
   *** setTitle(...);
   *** setTitleCondensed(...);
   *** setTooltipText(...);
   *** setVisible(...);
   *** shouldShowIcon(...);
   *** showsTextAsAction(...);
}

-keep class androidx.appcompat.view.menu.SubMenuBuilder
-keepclassmembers class androidx.appcompat.view.menu.SubMenuBuilder {
   <init>(...);
   *** getActionViewStatesKey(...);
   *** isQwertyMode(...);
   *** getItem(...);
   *** getParentMenu(...);
   *** setHeaderIcon(...);
   *** setHeaderIcon(...);
   *** setHeaderTitle(...);
   *** setHeaderTitle(...);
   *** setHeaderView(...);
   *** setIcon(...);
   *** setIcon(...);
}

# ACW for Xamarin.AndroidX.Arch.Core.Common
# ACW for Xamarin.AndroidX.Arch.Core.Runtime
# ACW for Xamarin.AndroidX.AsyncLayoutInflater
# ACW for Xamarin.AndroidX.Browser
-keep class androidx.browser.customtabs.CustomTabsClient
-keepclassmembers class androidx.browser.customtabs.CustomTabsClient {
   *** attachSession(...);
   *** bindCustomTabsService(...);
   *** bindCustomTabsServicePreservePriority(...);
   *** connectAndInitialize(...);
   *** extraCommand(...);
   *** getPackageName(...);
   *** getPackageName(...);
   *** newPendingSession(...);
   *** newSession(...);
   *** newSession(...);
   *** warmup(...);
}

-keep class androidx.browser.customtabs.CustomTabsCallback
-keepclassmembers class androidx.browser.customtabs.CustomTabsCallback {
   <init>(...);
   *** extraCallback(...);
   *** extraCallbackWithResult(...);
   *** onMessageChannelReady(...);
   *** onNavigationEvent(...);
   *** onPostMessage(...);
   *** onRelationshipValidationResult(...);
}

-keep class androidx.browser.customtabs.CustomTabsServiceConnection
-keepclassmembers class androidx.browser.customtabs.CustomTabsServiceConnection {
   <init>(...);
   *** onCustomTabsServiceConnected(...);
   *** onServiceConnected(...);
   *** onServiceDisconnected(...);
}

-keep class androidx.browser.customtabs.CustomTabsServiceConnection
-keepclassmembers class androidx.browser.customtabs.CustomTabsServiceConnection {
   *** onCustomTabsServiceConnected(...);
   *** onServiceDisconnected(...);
}

-keep class androidx.browser.customtabs.CustomTabsSession$PendingSession
-keepclassmembers class androidx.browser.customtabs.CustomTabsSession$PendingSession {
}

-keep class androidx.browser.customtabs.CustomTabsSession
-keepclassmembers class androidx.browser.customtabs.CustomTabsSession {
   *** createMockSessionForTesting(...);
   *** mayLaunchUrl(...);
   *** postMessage(...);
   *** receiveFile(...);
   *** requestPostMessageChannel(...);
   *** setActionButton(...);
   *** setSecondaryToolbarViews(...);
   *** setToolbarItem(...);
   *** validateRelationship(...);
}

# ACW for Xamarin.AndroidX.CardView
-keep class androidx.cardview.widget.CardView
-keepclassmembers class androidx.cardview.widget.CardView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCardBackgroundColor(...);
   *** setCardBackgroundColor(...);
   *** getCardElevation(...);
   *** setCardElevation(...);
   *** getContentPaddingBottom(...);
   *** getContentPaddingLeft(...);
   *** getContentPaddingRight(...);
   *** getContentPaddingTop(...);
   *** getMaxCardElevation(...);
   *** setMaxCardElevation(...);
   *** getPreventCornerOverlap(...);
   *** setPreventCornerOverlap(...);
   *** getRadius(...);
   *** setRadius(...);
   *** getUseCompatPadding(...);
   *** setUseCompatPadding(...);
   *** setCardBackgroundColor(...);
   *** setContentPadding(...);
}

# ACW for Xamarin.AndroidX.Collection
# ACW for Xamarin.AndroidX.CoordinatorLayout
-keep class androidx.coordinatorlayout.widget.CoordinatorLayout$AttachedBehavior
-keepclassmembers class androidx.coordinatorlayout.widget.CoordinatorLayout$AttachedBehavior {
}

-keep class androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior
-keepclassmembers class androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior {
   <init>(...);
   <init>(...);
   *** blocksInteractionBelow(...);
   *** getInsetDodgeRect(...);
   *** getScrimColor(...);
   *** getScrimOpacity(...);
   *** getTag(...);
   *** layoutDependsOn(...);
   *** onApplyWindowInsets(...);
   *** onAttachedToLayoutParams(...);
   *** onDependentViewChanged(...);
   *** onDependentViewRemoved(...);
   *** onDetachedFromLayoutParams(...);
   *** onInterceptTouchEvent(...);
   *** onLayoutChild(...);
   *** onMeasureChild(...);
   *** onNestedFling(...);
   *** onNestedPreFling(...);
   *** onNestedPreScroll(...);
   *** onNestedPreScroll(...);
   *** onNestedScroll(...);
   *** onNestedScroll(...);
   *** onNestedScroll(...);
   *** onNestedScrollAccepted(...);
   *** onNestedScrollAccepted(...);
   *** onRequestChildRectangleOnScreen(...);
   *** onRestoreInstanceState(...);
   *** onSaveInstanceState(...);
   *** onStartNestedScroll(...);
   *** onStartNestedScroll(...);
   *** onStopNestedScroll(...);
   *** onStopNestedScroll(...);
   *** onTouchEvent(...);
   *** setTag(...);
}

-keep class androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior
-keepclassmembers class androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior {
}

-keep class androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams
-keepclassmembers class androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getAnchorId(...);
   *** setAnchorId(...);
   *** getBehavior(...);
   *** setBehavior(...);
}

-keep class androidx.coordinatorlayout.widget.CoordinatorLayout
-keepclassmembers class androidx.coordinatorlayout.widget.CoordinatorLayout {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getLastWindowInsets(...);
   *** getStatusBarBackground(...);
   *** setStatusBarBackground(...);
   *** dispatchDependentViewsChanged(...);
   *** doViewsOverlap(...);
   *** getDependencies(...);
   *** getDependents(...);
   *** isPointInChildBounds(...);
   *** onAttachedToWindow(...);
   *** onDetachedFromWindow(...);
   *** onDraw(...);
   *** onLayout(...);
   *** onLayoutChild(...);
   *** onMeasureChild(...);
   *** onNestedPreScroll(...);
   *** onNestedScroll(...);
   *** onNestedScroll(...);
   *** onNestedScrollAccepted(...);
   *** onStartNestedScroll(...);
   *** onStopNestedScroll(...);
   *** setStatusBarBackgroundColor(...);
   *** setStatusBarBackgroundResource(...);
}

# ACW for Xamarin.AndroidX.Core
-keep class androidx.core.widget.CompoundButtonCompat
-keepclassmembers class androidx.core.widget.CompoundButtonCompat {
   *** getButtonDrawable(...);
   *** getButtonTintList(...);
   *** getButtonTintMode(...);
   *** setButtonTintList(...);
   *** setButtonTintMode(...);
}

-keep class androidx.core.widget.AutoSizeableTextView
-keepclassmembers class androidx.core.widget.AutoSizeableTextView {
}

-keep class androidx.core.widget.TintableCompoundButton
-keepclassmembers class androidx.core.widget.TintableCompoundButton {
}

-keep class androidx.core.widget.TintableCompoundDrawablesView
-keepclassmembers class androidx.core.widget.TintableCompoundDrawablesView {
}

-keep class androidx.core.widget.TintableImageSourceView
-keepclassmembers class androidx.core.widget.TintableImageSourceView {
}

-keep class androidx.core.widget.NestedScrollView$OnScrollChangeListener
-keepclassmembers class androidx.core.widget.NestedScrollView$OnScrollChangeListener {
}

-keep class mono.androidx.core.widget.NestedScrollView_OnScrollChangeListenerImplementor
-keepclassmembers class mono.androidx.core.widget.NestedScrollView_OnScrollChangeListenerImplementor {
}

-keep class androidx.core.widget.NestedScrollView
-keepclassmembers class androidx.core.widget.NestedScrollView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isFillViewport(...);
   *** setFillViewport(...);
   *** getMaxScrollAmount(...);
   *** isSmoothScrollingEnabled(...);
   *** setSmoothScrollingEnabled(...);
   *** arrowScroll(...);
   *** computeHorizontalScrollExtent(...);
   *** computeHorizontalScrollOffset(...);
   *** computeHorizontalScrollRange(...);
   *** computeScrollDeltaToGetChildRectOnScreen(...);
   *** computeVerticalScrollExtent(...);
   *** computeVerticalScrollOffset(...);
   *** computeVerticalScrollRange(...);
   *** dispatchNestedPreScroll(...);
   *** dispatchNestedScroll(...);
   *** dispatchNestedScroll(...);
   *** executeKeyEvent(...);
   *** fling(...);
   *** fullScroll(...);
   *** hasNestedScrollingParent(...);
   *** onAttachedToWindow(...);
   *** onNestedPreScroll(...);
   *** onNestedScroll(...);
   *** onNestedScroll(...);
   *** onNestedScrollAccepted(...);
   *** onStartNestedScroll(...);
   *** onStopNestedScroll(...);
   *** pageScroll(...);
   *** setOnScrollChangeListener(...);
   *** smoothScrollBy(...);
   *** smoothScrollBy(...);
   *** smoothScrollTo(...);
   *** smoothScrollTo(...);
   *** startNestedScroll(...);
   *** stopNestedScroll(...);
   *** onNestedScrollAccepted(...);
}

-keep class androidx.core.widget.TextViewCompat
-keepclassmembers class androidx.core.widget.TextViewCompat {
   *** getAutoSizeMaxTextSize(...);
   *** getAutoSizeMinTextSize(...);
   *** getAutoSizeStepGranularity(...);
   *** getAutoSizeTextAvailableSizes(...);
   *** getAutoSizeTextType(...);
   *** getCompoundDrawableTintList(...);
   *** getCompoundDrawableTintMode(...);
   *** getCompoundDrawablesRelative(...);
   *** getFirstBaselineToTopHeight(...);
   *** getLastBaselineToBottomHeight(...);
   *** getMaxLines(...);
   *** getMinLines(...);
   *** getTextMetricsParams(...);
   *** setAutoSizeTextTypeUniformWithConfiguration(...);
   *** setAutoSizeTextTypeUniformWithPresetSizes(...);
   *** setAutoSizeTextTypeWithDefaults(...);
   *** setCompoundDrawableTintList(...);
   *** setCompoundDrawableTintMode(...);
   *** setCompoundDrawablesRelative(...);
   *** setCompoundDrawablesRelativeWithIntrinsicBounds(...);
   *** setCompoundDrawablesRelativeWithIntrinsicBounds(...);
   *** setCustomSelectionActionModeCallback(...);
   *** setFirstBaselineToTopHeight(...);
   *** setLastBaselineToBottomHeight(...);
   *** setLineHeight(...);
   *** setPrecomputedText(...);
   *** setTextAppearance(...);
   *** setTextMetricsParams(...);
   *** wrapCustomSelectionActionModeCallback(...);
}

-keep class androidx.core.view.AccessibilityDelegateCompat
-keepclassmembers class androidx.core.view.AccessibilityDelegateCompat {
   <init>(...);
   <init>(...);
   *** dispatchPopulateAccessibilityEvent(...);
   *** getAccessibilityNodeProvider(...);
   *** onInitializeAccessibilityEvent(...);
   *** onInitializeAccessibilityNodeInfo(...);
   *** onPopulateAccessibilityEvent(...);
   *** onRequestSendAccessibilityEvent(...);
   *** performAccessibilityAction(...);
   *** sendAccessibilityEvent(...);
   *** sendAccessibilityEventUnchecked(...);
}

-keep class androidx.core.view.ActionProvider$SubUiVisibilityListener
-keepclassmembers class androidx.core.view.ActionProvider$SubUiVisibilityListener {
}

-keep class mono.androidx.core.view.ActionProvider_SubUiVisibilityListenerImplementor
-keepclassmembers class mono.androidx.core.view.ActionProvider_SubUiVisibilityListenerImplementor {
}

-keep class androidx.core.view.ActionProvider$VisibilityListener
-keepclassmembers class androidx.core.view.ActionProvider$VisibilityListener {
}

-keep class mono.androidx.core.view.ActionProvider_VisibilityListenerImplementor
-keepclassmembers class mono.androidx.core.view.ActionProvider_VisibilityListenerImplementor {
}

-keep class androidx.core.view.ActionProvider
-keepclassmembers class androidx.core.view.ActionProvider {
   <init>(...);
   *** getContext(...);
   *** hasSubMenu(...);
   *** isVisible(...);
   *** onCreateActionView(...);
   *** onCreateActionView(...);
   *** onPerformDefaultAction(...);
   *** onPrepareSubMenu(...);
   *** overridesItemVisibility(...);
   *** refreshVisibility(...);
   *** reset(...);
   *** setSubUiVisibilityListener(...);
   *** setVisibilityListener(...);
   *** subUiVisibilityChanged(...);
}

-keep class androidx.core.view.ActionProvider
-keepclassmembers class androidx.core.view.ActionProvider {
   *** onCreateActionView(...);
}

-keep class androidx.core.view.DisplayCutoutCompat
-keepclassmembers class androidx.core.view.DisplayCutoutCompat {
   <init>(...);
   *** getBoundingRects(...);
   *** getSafeInsetBottom(...);
   *** getSafeInsetLeft(...);
   *** getSafeInsetRight(...);
   *** getSafeInsetTop(...);
}

-keep class androidx.core.view.DragAndDropPermissionsCompat
-keepclassmembers class androidx.core.view.DragAndDropPermissionsCompat {
   *** release(...);
   *** request(...);
}

-keep class androidx.core.view.NestedScrollingChild
-keepclassmembers class androidx.core.view.NestedScrollingChild {
}

-keep class androidx.core.view.NestedScrollingChild2
-keepclassmembers class androidx.core.view.NestedScrollingChild2 {
}

-keep class androidx.core.view.NestedScrollingChild3
-keepclassmembers class androidx.core.view.NestedScrollingChild3 {
}

-keep class androidx.core.view.NestedScrollingParent
-keepclassmembers class androidx.core.view.NestedScrollingParent {
}

-keep class androidx.core.view.NestedScrollingParent2
-keepclassmembers class androidx.core.view.NestedScrollingParent2 {
}

-keep class androidx.core.view.NestedScrollingParent3
-keepclassmembers class androidx.core.view.NestedScrollingParent3 {
}

-keep class androidx.core.view.OnApplyWindowInsetsListener
-keepclassmembers class androidx.core.view.OnApplyWindowInsetsListener {
}

-keep class androidx.core.view.ScrollingView
-keepclassmembers class androidx.core.view.ScrollingView {
}

-keep class androidx.core.view.TintableBackgroundView
-keepclassmembers class androidx.core.view.TintableBackgroundView {
}

-keep class androidx.core.view.ViewPropertyAnimatorListener
-keepclassmembers class androidx.core.view.ViewPropertyAnimatorListener {
}

-keep class androidx.core.view.ViewPropertyAnimatorUpdateListener
-keepclassmembers class androidx.core.view.ViewPropertyAnimatorUpdateListener {
}

-keep class androidx.core.view.KeyEventDispatcher$Component
-keepclassmembers class androidx.core.view.KeyEventDispatcher$Component {
}

-keep class androidx.core.view.KeyEventDispatcher
-keepclassmembers class androidx.core.view.KeyEventDispatcher {
   *** dispatchBeforeHierarchy(...);
   *** dispatchKeyEvent(...);
}

-keep class androidx.core.view.MenuItemCompat$OnActionExpandListener
-keepclassmembers class androidx.core.view.MenuItemCompat$OnActionExpandListener {
}

-keep class androidx.core.view.MenuItemCompat
-keepclassmembers class androidx.core.view.MenuItemCompat {
   *** collapseActionView(...);
   *** expandActionView(...);
   *** getActionProvider(...);
   *** getActionView(...);
   *** getAlphabeticModifiers(...);
   *** getContentDescription(...);
   *** getIconTintList(...);
   *** getIconTintMode(...);
   *** getNumericModifiers(...);
   *** getTooltipText(...);
   *** isActionViewExpanded(...);
   *** setActionProvider(...);
   *** setActionView(...);
   *** setActionView(...);
   *** setAlphabeticShortcut(...);
   *** setContentDescription(...);
   *** setIconTintList(...);
   *** setIconTintMode(...);
   *** setNumericShortcut(...);
   *** setOnActionExpandListener(...);
   *** setShortcut(...);
   *** setShowAsAction(...);
   *** setTooltipText(...);
}

-keep class androidx.core.view.PointerIconCompat
-keepclassmembers class androidx.core.view.PointerIconCompat {
   *** getPointerIcon(...);
   *** create(...);
   *** getSystemIcon(...);
   *** load(...);
}

-keep class androidx.core.view.ScaleGestureDetectorCompat
-keepclassmembers class androidx.core.view.ScaleGestureDetectorCompat {
   *** isQuickScaleEnabled(...);
   *** isQuickScaleEnabled(...);
   *** setQuickScaleEnabled(...);
   *** setQuickScaleEnabled(...);
}

-keep class androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat
-keepclassmembers class androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat {
}

-keep class androidx.core.view.ViewCompat
-keepclassmembers class androidx.core.view.ViewCompat {
   <init>(...);
   *** addAccessibilityAction(...);
   *** addKeyboardNavigationClusters(...);
   *** addOnUnhandledKeyEventListener(...);
   *** animate(...);
   *** canScrollHorizontally(...);
   *** canScrollVertically(...);
   *** cancelDragAndDrop(...);
   *** combineMeasuredStates(...);
   *** computeSystemWindowInsets(...);
   *** dispatchApplyWindowInsets(...);
   *** dispatchFinishTemporaryDetach(...);
   *** dispatchNestedFling(...);
   *** dispatchNestedPreFling(...);
   *** dispatchNestedPreScroll(...);
   *** dispatchNestedPreScroll(...);
   *** dispatchNestedScroll(...);
   *** dispatchNestedScroll(...);
   *** dispatchNestedScroll(...);
   *** dispatchStartTemporaryDetach(...);
   *** enableAccessibleClickableSpanSupport(...);
   *** generateViewId(...);
   *** getAccessibilityDelegate(...);
   *** getAccessibilityLiveRegion(...);
   *** getAccessibilityNodeProvider(...);
   *** getAccessibilityPaneTitle(...);
   *** getAlpha(...);
   *** getBackgroundTintList(...);
   *** getBackgroundTintMode(...);
   *** getClipBounds(...);
   *** getDisplay(...);
   *** getElevation(...);
   *** getFitsSystemWindows(...);
   *** getImportantForAccessibility(...);
   *** getImportantForAutofill(...);
   *** getLabelFor(...);
   *** getLayerType(...);
   *** getLayoutDirection(...);
   *** getMatrix(...);
   *** getMeasuredHeightAndState(...);
   *** getMeasuredState(...);
   *** getMeasuredWidthAndState(...);
   *** getMinimumHeight(...);
   *** getMinimumWidth(...);
   *** getNextClusterForwardId(...);
   *** getOverScrollMode(...);
   *** getPaddingEnd(...);
   *** getPaddingStart(...);
   *** getParentForAccessibility(...);
   *** getPivotX(...);
   *** getPivotY(...);
   *** getRootWindowInsets(...);
   *** getRotation(...);
   *** getRotationX(...);
   *** getRotationY(...);
   *** getScaleX(...);
   *** getScaleY(...);
   *** getScrollIndicators(...);
   *** getSystemGestureExclusionRects(...);
   *** getTransitionName(...);
   *** getTranslationX(...);
   *** getTranslationY(...);
   *** getTranslationZ(...);
   *** getWindowSystemUiVisibility(...);
   *** getX(...);
   *** getY(...);
   *** getZ(...);
   *** hasAccessibilityDelegate(...);
   *** hasExplicitFocusable(...);
   *** hasNestedScrollingParent(...);
   *** hasNestedScrollingParent(...);
   *** hasOnClickListeners(...);
   *** hasOverlappingRendering(...);
   *** hasTransientState(...);
   *** isAccessibilityHeading(...);
   *** isAttachedToWindow(...);
   *** isFocusedByDefault(...);
   *** isImportantForAccessibility(...);
   *** isImportantForAutofill(...);
   *** isInLayout(...);
   *** isKeyboardNavigationCluster(...);
   *** isLaidOut(...);
   *** isLayoutDirectionResolved(...);
   *** isNestedScrollingEnabled(...);
   *** isOpaque(...);
   *** isPaddingRelative(...);
   *** isScreenReaderFocusable(...);
   *** jumpDrawablesToCurrentState(...);
   *** keyboardNavigationClusterSearch(...);
   *** offsetLeftAndRight(...);
   *** offsetTopAndBottom(...);
   *** onApplyWindowInsets(...);
   *** onInitializeAccessibilityEvent(...);
   *** onInitializeAccessibilityNodeInfo(...);
   *** onPopulateAccessibilityEvent(...);
   *** performAccessibilityAction(...);
   *** postInvalidateOnAnimation(...);
   *** postInvalidateOnAnimation(...);
   *** postOnAnimation(...);
   *** postOnAnimationDelayed(...);
   *** removeAccessibilityAction(...);
   *** removeOnUnhandledKeyEventListener(...);
   *** replaceAccessibilityAction(...);
   *** requestApplyInsets(...);
   *** requireViewById(...);
   *** resolveSizeAndState(...);
   *** restoreDefaultFocus(...);
   *** saveAttributeDataForStyleable(...);
   *** setAccessibilityDelegate(...);
   *** setAccessibilityHeading(...);
   *** setAccessibilityLiveRegion(...);
   *** setAccessibilityPaneTitle(...);
   *** setActivated(...);
   *** setAlpha(...);
   *** setAutofillHints(...);
   *** setBackground(...);
   *** setBackgroundTintList(...);
   *** setBackgroundTintMode(...);
   *** setChildrenDrawingOrderEnabled(...);
   *** setClipBounds(...);
   *** setElevation(...);
   *** setFitsSystemWindows(...);
   *** setFocusedByDefault(...);
   *** setHasTransientState(...);
   *** setImportantForAccessibility(...);
   *** setImportantForAutofill(...);
   *** setKeyboardNavigationCluster(...);
   *** setLabelFor(...);
   *** setLayerPaint(...);
   *** setLayerType(...);
   *** setLayoutDirection(...);
   *** setNestedScrollingEnabled(...);
   *** setNextClusterForwardId(...);
   *** setOnApplyWindowInsetsListener(...);
   *** setOverScrollMode(...);
   *** setPaddingRelative(...);
   *** setPivotX(...);
   *** setPivotY(...);
   *** setPointerIcon(...);
   *** setRotation(...);
   *** setRotationX(...);
   *** setRotationY(...);
   *** setSaveFromParentEnabled(...);
   *** setScaleX(...);
   *** setScaleY(...);
   *** setScreenReaderFocusable(...);
   *** setScrollIndicators(...);
   *** setScrollIndicators(...);
   *** setSystemGestureExclusionRects(...);
   *** setTooltipText(...);
   *** setTransitionName(...);
   *** setTranslationX(...);
   *** setTranslationY(...);
   *** setTranslationZ(...);
   *** setX(...);
   *** setY(...);
   *** setZ(...);
   *** startDragAndDrop(...);
   *** startNestedScroll(...);
   *** startNestedScroll(...);
   *** stopNestedScroll(...);
   *** stopNestedScroll(...);
   *** updateDragShadow(...);
}

-keep class androidx.core.view.ViewPropertyAnimatorCompat
-keepclassmembers class androidx.core.view.ViewPropertyAnimatorCompat {
   *** getDuration(...);
   *** getInterpolator(...);
   *** getStartDelay(...);
   *** alpha(...);
   *** alphaBy(...);
   *** cancel(...);
   *** rotation(...);
   *** rotationBy(...);
   *** rotationX(...);
   *** rotationXBy(...);
   *** rotationY(...);
   *** rotationYBy(...);
   *** scaleX(...);
   *** scaleXBy(...);
   *** scaleY(...);
   *** scaleYBy(...);
   *** setDuration(...);
   *** setInterpolator(...);
   *** setListener(...);
   *** setStartDelay(...);
   *** setUpdateListener(...);
   *** start(...);
   *** translationX(...);
   *** translationXBy(...);
   *** translationY(...);
   *** translationYBy(...);
   *** translationZ(...);
   *** translationZBy(...);
   *** withEndAction(...);
   *** withLayer(...);
   *** withStartAction(...);
   *** x(...);
   *** xBy(...);
   *** y(...);
   *** yBy(...);
   *** z(...);
   *** zBy(...);
}

-keep class androidx.core.view.WindowInsetsCompat
-keepclassmembers class androidx.core.view.WindowInsetsCompat {
   <init>(...);
   *** getDisplayCutout(...);
   *** hasInsets(...);
   *** hasStableInsets(...);
   *** hasSystemWindowInsets(...);
   *** isConsumed(...);
   *** isRound(...);
   *** getMandatorySystemGestureInsets(...);
   *** getStableInsetBottom(...);
   *** getStableInsetLeft(...);
   *** getStableInsetRight(...);
   *** getStableInsetTop(...);
   *** getStableInsets(...);
   *** getSystemGestureInsets(...);
   *** getSystemWindowInsetBottom(...);
   *** getSystemWindowInsetLeft(...);
   *** getSystemWindowInsetRight(...);
   *** getSystemWindowInsetTop(...);
   *** getSystemWindowInsets(...);
   *** getTappableElementInsets(...);
   *** consumeDisplayCutout(...);
   *** consumeStableInsets(...);
   *** consumeSystemWindowInsets(...);
   *** inset(...);
   *** inset(...);
   *** replaceSystemWindowInsets(...);
   *** replaceSystemWindowInsets(...);
   *** toWindowInsets(...);
   *** toWindowInsetsCompat(...);
}

-keep class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat
-keepclassmembers class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getId(...);
   *** getLabel(...);
   *** createReplacementAction(...);
   *** perform(...);
}

-keep class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat
-keepclassmembers class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat {
   *** getColumnCount(...);
   *** isHierarchical(...);
   *** getRowCount(...);
   *** getSelectionMode(...);
   *** obtain(...);
   *** obtain(...);
}

-keep class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat
-keepclassmembers class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat {
   *** getColumnIndex(...);
   *** getColumnSpan(...);
   *** isHeading(...);
   *** isSelected(...);
   *** getRowIndex(...);
   *** getRowSpan(...);
   *** obtain(...);
   *** obtain(...);
}

-keep class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat
-keepclassmembers class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat {
   *** getCurrent(...);
   *** getMax(...);
   *** getMin(...);
   *** getType(...);
   *** obtain(...);
}

-keep class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$TouchDelegateInfoCompat
-keepclassmembers class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$TouchDelegateInfoCompat {
   <init>(...);
   *** getRegionCount(...);
   *** getRegionAt(...);
   *** getTargetForRegion(...);
}

-keep class androidx.core.view.accessibility.AccessibilityNodeInfoCompat
-keepclassmembers class androidx.core.view.accessibility.AccessibilityNodeInfoCompat {
   <init>(...);
   *** isAccessibilityFocused(...);
   *** setAccessibilityFocused(...);
   *** getActionList(...);
   *** getActions(...);
   *** isCheckable(...);
   *** setCheckable(...);
   *** isChecked(...);
   *** setChecked(...);
   *** getChildCount(...);
   *** getClassName(...);
   *** setClassName(...);
   *** isClickable(...);
   *** setClickable(...);
   *** getCollectionInfo(...);
   *** getCollectionItemInfo(...);
   *** getContentDescription(...);
   *** setContentDescription(...);
   *** isContentInvalid(...);
   *** setContentInvalid(...);
   *** isContextClickable(...);
   *** setContextClickable(...);
   *** isDismissable(...);
   *** setDismissable(...);
   *** getDrawingOrder(...);
   *** setDrawingOrder(...);
   *** isEditable(...);
   *** setEditable(...);
   *** isEnabled(...);
   *** setEnabled(...);
   *** getError(...);
   *** setError(...);
   *** getExtras(...);
   *** isFocusable(...);
   *** setFocusable(...);
   *** isFocused(...);
   *** setFocused(...);
   *** isHeading(...);
   *** setHeading(...);
   *** getHintText(...);
   *** setHintText(...);
   *** isImportantForAccessibility(...);
   *** setImportantForAccessibility(...);
   *** getInfo(...);
   *** getInputType(...);
   *** setInputType(...);
   *** getLabelFor(...);
   *** getLabeledBy(...);
   *** getLiveRegion(...);
   *** setLiveRegion(...);
   *** isLongClickable(...);
   *** setLongClickable(...);
   *** getMaxTextLength(...);
   *** setMaxTextLength(...);
   *** getMovementGranularities(...);
   *** setMovementGranularities(...);
   *** isMultiLine(...);
   *** setMultiLine(...);
   *** getPackageName(...);
   *** setPackageName(...);
   *** getPaneTitle(...);
   *** setPaneTitle(...);
   *** getParent(...);
   *** isPassword(...);
   *** setPassword(...);
   *** getRangeInfo(...);
   *** setRangeInfo(...);
   *** getRoleDescription(...);
   *** setRoleDescription(...);
   *** isScreenReaderFocusable(...);
   *** setScreenReaderFocusable(...);
   *** isScrollable(...);
   *** setScrollable(...);
   *** isSelected(...);
   *** setSelected(...);
   *** isShowingHintText(...);
   *** setShowingHintText(...);
   *** getText(...);
   *** setText(...);
   *** isTextEntryKey(...);
   *** setTextEntryKey(...);
   *** getTextSelectionEnd(...);
   *** getTextSelectionStart(...);
   *** getTooltipText(...);
   *** setTooltipText(...);
   *** getTouchDelegateInfo(...);
   *** setTouchDelegateInfo(...);
   *** getTraversalAfter(...);
   *** getTraversalBefore(...);
   *** getViewIdResourceName(...);
   *** setViewIdResourceName(...);
   *** isVisibleToUser(...);
   *** setVisibleToUser(...);
   *** getWindow(...);
   *** getWindowId(...);
   *** addAction(...);
   *** addAction(...);
   *** addChild(...);
   *** addChild(...);
   *** addSpansToExtras(...);
   *** canOpenPopup(...);
   *** findAccessibilityNodeInfosByText(...);
   *** findAccessibilityNodeInfosByViewId(...);
   *** findFocus(...);
   *** focusSearch(...);
   *** getBoundsInParent(...);
   *** getBoundsInScreen(...);
   *** getChild(...);
   *** getClickableSpans(...);
   *** obtain(...);
   *** obtain(...);
   *** obtain(...);
   *** obtain(...);
   *** performAction(...);
   *** performAction(...);
   *** recycle(...);
   *** refresh(...);
   *** removeAction(...);
   *** removeChild(...);
   *** removeChild(...);
   *** setBoundsInParent(...);
   *** setBoundsInScreen(...);
   *** setCanOpenPopup(...);
   *** setCollectionInfo(...);
   *** setCollectionItemInfo(...);
   *** setLabelFor(...);
   *** setLabelFor(...);
   *** setLabeledBy(...);
   *** setLabeledBy(...);
   *** setParent(...);
   *** setParent(...);
   *** setSource(...);
   *** setSource(...);
   *** setTextSelection(...);
   *** setTraversalAfter(...);
   *** setTraversalAfter(...);
   *** setTraversalBefore(...);
   *** setTraversalBefore(...);
   *** unwrap(...);
   *** wrap(...);
}

-keep class androidx.core.view.accessibility.AccessibilityNodeProviderCompat
-keepclassmembers class androidx.core.view.accessibility.AccessibilityNodeProviderCompat {
   <init>(...);
   <init>(...);
   *** getProvider(...);
   *** createAccessibilityNodeInfo(...);
   *** findAccessibilityNodeInfosByText(...);
   *** findFocus(...);
   *** performAction(...);
}

-keep class androidx.core.view.accessibility.AccessibilityWindowInfoCompat
-keepclassmembers class androidx.core.view.accessibility.AccessibilityWindowInfoCompat {
   *** getAnchor(...);
   *** getChildCount(...);
   *** getId(...);
   *** isAccessibilityFocused(...);
   *** isActive(...);
   *** isFocused(...);
   *** getLayer(...);
   *** getParent(...);
   *** getRoot(...);
   *** getTitle(...);
   *** getType(...);
   *** getBoundsInScreen(...);
   *** getChild(...);
   *** obtain(...);
   *** obtain(...);
   *** recycle(...);
}

-keep class androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments
-keepclassmembers class androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments {
   <init>(...);
   *** setBundle(...);
}

-keep class androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments
-keepclassmembers class androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments {
}

-keep class androidx.core.view.accessibility.AccessibilityViewCommand
-keepclassmembers class androidx.core.view.accessibility.AccessibilityViewCommand {
}

-keep class androidx.core.internal.view.SupportMenu
-keepclassmembers class androidx.core.internal.view.SupportMenu {
}

-keep class androidx.core.internal.view.SupportMenuItem
-keepclassmembers class androidx.core.internal.view.SupportMenuItem {
}

-keep class androidx.core.graphics.Insets
-keepclassmembers class androidx.core.graphics.Insets {
   *** of(...);
   *** of(...);
}

-keep class androidx.core.graphics.drawable.DrawableCompat
-keepclassmembers class androidx.core.graphics.drawable.DrawableCompat {
   *** applyTheme(...);
   *** canApplyTheme(...);
   *** clearColorFilter(...);
   *** getAlpha(...);
   *** getColorFilter(...);
   *** getLayoutDirection(...);
   *** inflate(...);
   *** isAutoMirrored(...);
   *** jumpToCurrentState(...);
   *** setAutoMirrored(...);
   *** setHotspot(...);
   *** setHotspotBounds(...);
   *** setLayoutDirection(...);
   *** setTint(...);
   *** setTintList(...);
   *** setTintMode(...);
   *** unwrap(...);
   *** wrap(...);
}

-keep class androidx.core.content.ContextCompat
-keepclassmembers class androidx.core.content.ContextCompat {
   <init>(...);
   *** checkSelfPermission(...);
   *** createDeviceProtectedStorageContext(...);
   *** getCodeCacheDir(...);
   *** getColor(...);
   *** getColorStateList(...);
   *** getDataDir(...);
   *** getDrawable(...);
   *** getExternalCacheDirs(...);
   *** getExternalFilesDirs(...);
   *** getMainExecutor(...);
   *** getNoBackupFilesDir(...);
   *** getObbDirs(...);
   *** getSystemService(...);
   *** getSystemServiceName(...);
   *** isDeviceProtectedStorage(...);
   *** startActivities(...);
   *** startActivities(...);
   *** startActivity(...);
   *** startForegroundService(...);
}

-keep class androidx.core.content.PermissionChecker
-keepclassmembers class androidx.core.content.PermissionChecker {
   *** checkCallingOrSelfPermission(...);
   *** checkCallingPermission(...);
   *** checkPermission(...);
   *** checkSelfPermission(...);
}

-keep class androidx.core.content.pm.PackageInfoCompat
-keepclassmembers class androidx.core.content.pm.PackageInfoCompat {
   *** getLongVersionCode(...);
}

-keep class androidx.core.app.ActivityCompat$OnRequestPermissionsResultCallback
-keepclassmembers class androidx.core.app.ActivityCompat$OnRequestPermissionsResultCallback {
}

-keep class androidx.core.app.ActivityCompat$PermissionCompatDelegate
-keepclassmembers class androidx.core.app.ActivityCompat$PermissionCompatDelegate {
}

-keep class androidx.core.app.ActivityCompat$RequestPermissionsRequestCodeValidator
-keepclassmembers class androidx.core.app.ActivityCompat$RequestPermissionsRequestCodeValidator {
}

-keep class androidx.core.app.ActivityCompat
-keepclassmembers class androidx.core.app.ActivityCompat {
   <init>(...);
   *** getPermissionCompatDelegate(...);
   *** setPermissionCompatDelegate(...);
   *** finishAffinity(...);
   *** finishAfterTransition(...);
   *** getReferrer(...);
   *** invalidateOptionsMenu(...);
   *** postponeEnterTransition(...);
   *** recreate(...);
   *** requestDragAndDropPermissions(...);
   *** requestPermissions(...);
   *** requireViewById(...);
   *** setEnterSharedElementCallback(...);
   *** setExitSharedElementCallback(...);
   *** shouldShowRequestPermissionRationale(...);
   *** startActivityForResult(...);
   *** startIntentSenderForResult(...);
   *** startPostponedEnterTransition(...);
}

-keep class androidx.core.app.ComponentActivity$ExtraData
-keepclassmembers class androidx.core.app.ComponentActivity$ExtraData {
   <init>(...);
}

-keep class androidx.core.app.ComponentActivity
-keepclassmembers class androidx.core.app.ComponentActivity {
   <init>(...);
   *** getLifecycle(...);
   *** getExtraData(...);
   *** putExtraData(...);
   *** superDispatchKeyEvent(...);
}

-keep class androidx.core.app.NotificationManagerCompat
-keepclassmembers class androidx.core.app.NotificationManagerCompat {
   *** getImportance(...);
   *** getNotificationChannelGroups(...);
   *** getNotificationChannels(...);
   *** areNotificationsEnabled(...);
   *** cancel(...);
   *** cancel(...);
   *** cancelAll(...);
   *** createNotificationChannel(...);
   *** createNotificationChannelGroup(...);
   *** createNotificationChannelGroups(...);
   *** createNotificationChannels(...);
   *** deleteNotificationChannel(...);
   *** deleteNotificationChannelGroup(...);
   *** from(...);
   *** getEnabledListenerPackages(...);
   *** getNotificationChannel(...);
   *** getNotificationChannelGroup(...);
   *** notify(...);
   *** notify(...);
}

-keep class androidx.core.app.SharedElementCallback$OnSharedElementsReadyListener
-keepclassmembers class androidx.core.app.SharedElementCallback$OnSharedElementsReadyListener {
}

-keep class androidx.core.app.SharedElementCallback
-keepclassmembers class androidx.core.app.SharedElementCallback {
   <init>(...);
   *** onCaptureSharedElementSnapshot(...);
   *** onCreateSnapshotView(...);
   *** onMapSharedElements(...);
   *** onRejectSharedElements(...);
   *** onSharedElementEnd(...);
   *** onSharedElementStart(...);
   *** onSharedElementsArrived(...);
}

-keep class androidx.core.app.SharedElementCallback
-keepclassmembers class androidx.core.app.SharedElementCallback {
}

-keep class androidx.core.app.TaskStackBuilder$SupportParentable
-keepclassmembers class androidx.core.app.TaskStackBuilder$SupportParentable {
}

-keep class androidx.core.app.TaskStackBuilder
-keepclassmembers class androidx.core.app.TaskStackBuilder {
   *** getIntentCount(...);
   *** addNextIntent(...);
   *** addNextIntentWithParentStack(...);
   *** addParentStack(...);
   *** addParentStack(...);
   *** addParentStack(...);
   *** create(...);
   *** editIntentAt(...);
   *** from(...);
   *** getIntent(...);
   *** getIntents(...);
   *** getPendingIntent(...);
   *** getPendingIntent(...);
   *** iterator(...);
   *** startActivities(...);
   *** startActivities(...);
}

-keep class androidx.core.text.PrecomputedTextCompat$Params
-keepclassmembers class androidx.core.text.PrecomputedTextCompat$Params {
   *** getBreakStrategy(...);
   *** getHyphenationFrequency(...);
   *** getTextDirection(...);
   *** getTextPaint(...);
   *** equalsWithoutTextDirection(...);
}

-keep class androidx.core.text.PrecomputedTextCompat
-keepclassmembers class androidx.core.text.PrecomputedTextCompat {
   *** getParagraphCount(...);
   *** charAt(...);
   *** create(...);
   *** getParagraphEnd(...);
   *** getParagraphStart(...);
   *** getParams(...);
   *** getSpanEnd(...);
   *** getSpanFlags(...);
   *** getSpanStart(...);
   *** getSpans(...);
   *** getTextFuture(...);
   *** length(...);
   *** nextSpanTransition(...);
   *** removeSpan(...);
   *** setSpan(...);
   *** subSequence(...);
}

# ACW for Xamarin.AndroidX.CursorAdapter
# ACW for Xamarin.AndroidX.CustomView
-keep class androidx.customview.widget.Openable
-keepclassmembers class androidx.customview.widget.Openable {
}

# ACW for Xamarin.AndroidX.DocumentFile
# ACW for Xamarin.AndroidX.DrawerLayout
-keep class androidx.drawerlayout.widget.DrawerLayout$DrawerListener
-keepclassmembers class androidx.drawerlayout.widget.DrawerLayout$DrawerListener {
}

-keep class mono.androidx.drawerlayout.widget.DrawerLayout_DrawerListenerImplementor
-keepclassmembers class mono.androidx.drawerlayout.widget.DrawerLayout_DrawerListenerImplementor {
}

-keep class androidx.drawerlayout.widget.DrawerLayout$LayoutParams
-keepclassmembers class androidx.drawerlayout.widget.DrawerLayout$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class androidx.drawerlayout.widget.DrawerLayout
-keepclassmembers class androidx.drawerlayout.widget.DrawerLayout {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getDrawerElevation(...);
   *** setDrawerElevation(...);
   *** isOpen(...);
   *** getStatusBarBackgroundDrawable(...);
   *** addDrawerListener(...);
   *** addFocusables(...);
   *** close(...);
   *** closeDrawer(...);
   *** closeDrawer(...);
   *** closeDrawer(...);
   *** closeDrawer(...);
   *** closeDrawers(...);
   *** getDrawerLockMode(...);
   *** getDrawerLockMode(...);
   *** getDrawerTitle(...);
   *** isDrawerOpen(...);
   *** isDrawerOpen(...);
   *** isDrawerVisible(...);
   *** isDrawerVisible(...);
   *** onDraw(...);
   *** onLayout(...);
   *** open(...);
   *** openDrawer(...);
   *** openDrawer(...);
   *** openDrawer(...);
   *** openDrawer(...);
   *** removeDrawerListener(...);
   *** setChildInsets(...);
   *** setDrawerListener(...);
   *** setDrawerLockMode(...);
   *** setDrawerLockMode(...);
   *** setDrawerLockMode(...);
   *** setDrawerShadow(...);
   *** setDrawerShadow(...);
   *** setDrawerTitle(...);
   *** setScrimColor(...);
   *** setStatusBarBackground(...);
   *** setStatusBarBackground(...);
   *** setStatusBarBackgroundColor(...);
}

# ACW for Xamarin.AndroidX.Fragment
-keep class androidx.fragment.app.FragmentActivity
-keepclassmembers class androidx.fragment.app.FragmentActivity {
   <init>(...);
   <init>(...);
   *** getSupportFragmentManager(...);
   *** getSupportLoaderManager(...);
   *** onAttachFragment(...);
   *** onPrepareOptionsPanel(...);
   *** onResumeFragments(...);
   *** setEnterSharedElementCallback(...);
   *** setExitSharedElementCallback(...);
   *** startActivityFromFragment(...);
   *** startActivityFromFragment(...);
   *** startIntentSenderFromFragment(...);
   *** supportFinishAfterTransition(...);
   *** supportInvalidateOptionsMenu(...);
   *** supportPostponeEnterTransition(...);
   *** supportStartPostponedEnterTransition(...);
   *** validateRequestPermissionsRequestCode(...);
}

-keep class androidx.fragment.app.DialogFragment
-keepclassmembers class androidx.fragment.app.DialogFragment {
   <init>(...);
   *** isCancelable(...);
   *** setCancelable(...);
   *** getDialog(...);
   *** getShowsDialog(...);
   *** setShowsDialog(...);
   *** getTheme(...);
   *** dismiss(...);
   *** dismissAllowingStateLoss(...);
   *** onCancel(...);
   *** onCreateDialog(...);
   *** onDismiss(...);
   *** requireDialog(...);
   *** setStyle(...);
   *** setupDialog(...);
   *** show(...);
   *** show(...);
   *** showNow(...);
}

-keep class androidx.fragment.app.Fragment$SavedState
-keepclassmembers class androidx.fragment.app.Fragment$SavedState {
   *** describeContents(...);
   *** writeToParcel(...);
}

-keep class androidx.fragment.app.Fragment
-keepclassmembers class androidx.fragment.app.Fragment {
   <init>(...);
   <init>(...);
   *** getActivity(...);
   *** getAllowEnterTransitionOverlap(...);
   *** setAllowEnterTransitionOverlap(...);
   *** getAllowReturnTransitionOverlap(...);
   *** setAllowReturnTransitionOverlap(...);
   *** getArguments(...);
   *** setArguments(...);
   *** getChildFragmentManager(...);
   *** getContext(...);
   *** getDefaultViewModelProviderFactory(...);
   *** getEnterTransition(...);
   *** setEnterTransition(...);
   *** getExitTransition(...);
   *** setExitTransition(...);
   *** getFragmentManager(...);
   *** hasOptionsMenu(...);
   *** setHasOptionsMenu(...);
   *** getHost(...);
   *** getId(...);
   *** isAdded(...);
   *** isDetached(...);
   *** isHidden(...);
   *** isInLayout(...);
   *** isMenuVisible(...);
   *** isRemoving(...);
   *** isResumed(...);
   *** isStateSaved(...);
   *** isVisible(...);
   *** getLayoutInflater(...);
   *** getLifecycle(...);
   *** getLoaderManager(...);
   *** getParentFragment(...);
   *** getParentFragmentManager(...);
   *** getReenterTransition(...);
   *** setReenterTransition(...);
   *** getResources(...);
   *** getRetainInstance(...);
   *** setRetainInstance(...);
   *** getReturnTransition(...);
   *** setReturnTransition(...);
   *** getSavedStateRegistry(...);
   *** getSharedElementEnterTransition(...);
   *** setSharedElementEnterTransition(...);
   *** getSharedElementReturnTransition(...);
   *** setSharedElementReturnTransition(...);
   *** getTag(...);
   *** getTargetFragment(...);
   *** getTargetRequestCode(...);
   *** getUserVisibleHint(...);
   *** setUserVisibleHint(...);
   *** getView(...);
   *** getViewLifecycleOwner(...);
   *** getViewLifecycleOwnerLiveData(...);
   *** getViewModelStore(...);
   *** dump(...);
   *** equals(...);
   *** getLayoutInflater(...);
   *** getString(...);
   *** getString(...);
   *** getText(...);
   *** hashCode(...);
   *** instantiate(...);
   *** instantiate(...);
   *** onActivityCreated(...);
   *** onActivityResult(...);
   *** onAttach(...);
   *** onAttach(...);
   *** onAttachFragment(...);
   *** onConfigurationChanged(...);
   *** onContextItemSelected(...);
   *** onCreate(...);
   *** onCreateAnimation(...);
   *** onCreateAnimator(...);
   *** onCreateContextMenu(...);
   *** onCreateOptionsMenu(...);
   *** onCreateView(...);
   *** onDestroy(...);
   *** onDestroyOptionsMenu(...);
   *** onDestroyView(...);
   *** onDetach(...);
   *** onGetLayoutInflater(...);
   *** onHiddenChanged(...);
   *** onInflate(...);
   *** onInflate(...);
   *** onLowMemory(...);
   *** onMultiWindowModeChanged(...);
   *** onOptionsItemSelected(...);
   *** onOptionsMenuClosed(...);
   *** onPause(...);
   *** onPictureInPictureModeChanged(...);
   *** onPrepareOptionsMenu(...);
   *** onPrimaryNavigationFragmentChanged(...);
   *** onRequestPermissionsResult(...);
   *** onResume(...);
   *** onSaveInstanceState(...);
   *** onStart(...);
   *** onStop(...);
   *** onViewCreated(...);
   *** onViewStateRestored(...);
   *** postponeEnterTransition(...);
   *** postponeEnterTransition(...);
   *** registerForContextMenu(...);
   *** requestPermissions(...);
   *** requireActivity(...);
   *** requireArguments(...);
   *** requireContext(...);
   *** requireFragmentManager(...);
   *** requireHost(...);
   *** requireParentFragment(...);
   *** requireView(...);
   *** setEnterSharedElementCallback(...);
   *** setExitSharedElementCallback(...);
   *** setInitialSavedState(...);
   *** setMenuVisibility(...);
   *** setTargetFragment(...);
   *** shouldShowRequestPermissionRationale(...);
   *** startActivity(...);
   *** startActivity(...);
   *** startActivityForResult(...);
   *** startActivityForResult(...);
   *** startIntentSenderForResult(...);
   *** startPostponedEnterTransition(...);
   *** unregisterForContextMenu(...);
}

-keep class androidx.fragment.app.FragmentFactory
-keepclassmembers class androidx.fragment.app.FragmentFactory {
   <init>(...);
   *** instantiate(...);
   *** loadFragmentClass(...);
}

-keep class androidx.fragment.app.FragmentManager$BackStackEntry
-keepclassmembers class androidx.fragment.app.FragmentManager$BackStackEntry {
}

-keep class androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks
-keepclassmembers class androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks {
   <init>(...);
   *** onFragmentActivityCreated(...);
   *** onFragmentAttached(...);
   *** onFragmentCreated(...);
   *** onFragmentDestroyed(...);
   *** onFragmentDetached(...);
   *** onFragmentPaused(...);
   *** onFragmentPreAttached(...);
   *** onFragmentPreCreated(...);
   *** onFragmentResumed(...);
   *** onFragmentSaveInstanceState(...);
   *** onFragmentStarted(...);
   *** onFragmentStopped(...);
   *** onFragmentViewCreated(...);
   *** onFragmentViewDestroyed(...);
}

-keep class androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks
-keepclassmembers class androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks {
}

-keep class androidx.fragment.app.FragmentManager$OnBackStackChangedListener
-keepclassmembers class androidx.fragment.app.FragmentManager$OnBackStackChangedListener {
}

-keep class mono.androidx.fragment.app.FragmentManager_OnBackStackChangedListenerImplementor
-keepclassmembers class mono.androidx.fragment.app.FragmentManager_OnBackStackChangedListenerImplementor {
}

-keep class androidx.fragment.app.FragmentManager
-keepclassmembers class androidx.fragment.app.FragmentManager {
   <init>(...);
   *** getBackStackEntryCount(...);
   *** getFragmentFactory(...);
   *** setFragmentFactory(...);
   *** getFragments(...);
   *** isDestroyed(...);
   *** isStateSaved(...);
   *** getPrimaryNavigationFragment(...);
   *** addOnBackStackChangedListener(...);
   *** beginTransaction(...);
   *** dump(...);
   *** enableDebugLogging(...);
   *** executePendingTransactions(...);
   *** findFragment(...);
   *** findFragmentById(...);
   *** findFragmentByTag(...);
   *** getBackStackEntryAt(...);
   *** getFragment(...);
   *** openTransaction(...);
   *** popBackStack(...);
   *** popBackStack(...);
   *** popBackStack(...);
   *** popBackStackImmediate(...);
   *** popBackStackImmediate(...);
   *** popBackStackImmediate(...);
   *** putFragment(...);
   *** registerFragmentLifecycleCallbacks(...);
   *** removeOnBackStackChangedListener(...);
   *** saveFragmentInstanceState(...);
   *** unregisterFragmentLifecycleCallbacks(...);
}

-keep class androidx.fragment.app.FragmentManager
-keepclassmembers class androidx.fragment.app.FragmentManager {
}

-keep class androidx.fragment.app.FragmentPagerAdapter
-keepclassmembers class androidx.fragment.app.FragmentPagerAdapter {
   <init>(...);
   <init>(...);
   *** getItem(...);
   *** getItemId(...);
   *** isViewFromObject(...);
}

-keep class androidx.fragment.app.FragmentPagerAdapter
-keepclassmembers class androidx.fragment.app.FragmentPagerAdapter {
   *** getItem(...);
   *** getCount(...);
}

-keep class androidx.fragment.app.FragmentTransaction
-keepclassmembers class androidx.fragment.app.FragmentTransaction {
   <init>(...);
   *** isAddToBackStackAllowed(...);
   *** isEmpty(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** addSharedElement(...);
   *** addToBackStack(...);
   *** attach(...);
   *** commit(...);
   *** commitAllowingStateLoss(...);
   *** commitNow(...);
   *** commitNowAllowingStateLoss(...);
   *** detach(...);
   *** disallowAddToBackStack(...);
   *** hide(...);
   *** remove(...);
   *** replace(...);
   *** replace(...);
   *** replace(...);
   *** replace(...);
   *** runOnCommit(...);
   *** setAllowOptimization(...);
   *** setBreadCrumbShortTitle(...);
   *** setBreadCrumbShortTitle(...);
   *** setBreadCrumbTitle(...);
   *** setBreadCrumbTitle(...);
   *** setCustomAnimations(...);
   *** setCustomAnimations(...);
   *** setMaxLifecycle(...);
   *** setPrimaryNavigationFragment(...);
   *** setReorderingAllowed(...);
   *** setTransition(...);
   *** setTransitionStyle(...);
   *** show(...);
}

-keep class androidx.fragment.app.FragmentTransaction
-keepclassmembers class androidx.fragment.app.FragmentTransaction {
   *** commit(...);
   *** commitAllowingStateLoss(...);
   *** commitNow(...);
   *** commitNowAllowingStateLoss(...);
}

# ACW for Xamarin.AndroidX.Interpolator
# ACW for Xamarin.AndroidX.Legacy.Support.Core.UI
-keep class androidx.legacy.app.ActionBarDrawerToggle
-keepclassmembers class androidx.legacy.app.ActionBarDrawerToggle {
   <init>(...);
   <init>(...);
   *** isDrawerIndicatorEnabled(...);
   *** setDrawerIndicatorEnabled(...);
   *** onConfigurationChanged(...);
   *** onDrawerClosed(...);
   *** onDrawerOpened(...);
   *** onDrawerSlide(...);
   *** onDrawerStateChanged(...);
   *** onOptionsItemSelected(...);
   *** setHomeAsUpIndicator(...);
   *** setHomeAsUpIndicator(...);
   *** syncState(...);
}

# ACW for Xamarin.AndroidX.Legacy.Support.Core.Utils
# ACW for Xamarin.AndroidX.Legacy.Support.V4
# ACW for Xamarin.AndroidX.Lifecycle.Common
-keep class androidx.lifecycle.Lifecycle$State
-keepclassmembers class androidx.lifecycle.Lifecycle$State {
   *** isAtLeast(...);
   *** valueOf(...);
   *** values(...);
}

-keep class androidx.lifecycle.Lifecycle
-keepclassmembers class androidx.lifecycle.Lifecycle {
   <init>(...);
   *** getCurrentState(...);
   *** addObserver(...);
   *** removeObserver(...);
}

-keep class androidx.lifecycle.LifecycleObserver
-keepclassmembers class androidx.lifecycle.LifecycleObserver {
}

-keep class androidx.lifecycle.LifecycleOwner
-keepclassmembers class androidx.lifecycle.LifecycleOwner {
}

-keep class androidx.lifecycle.Lifecycle
-keepclassmembers class androidx.lifecycle.Lifecycle {
   *** getCurrentState(...);
   *** addObserver(...);
   *** removeObserver(...);
}

# ACW for Xamarin.AndroidX.Lifecycle.LiveData.Core
-keep class androidx.lifecycle.Observer
-keepclassmembers class androidx.lifecycle.Observer {
}

-keep class androidx.lifecycle.LiveData
-keepclassmembers class androidx.lifecycle.LiveData {
   <init>(...);
   <init>(...);
   *** hasActiveObservers(...);
   *** hasObservers(...);
   *** getValue(...);
   *** observe(...);
   *** observeForever(...);
   *** onActive(...);
   *** onInactive(...);
   *** postValue(...);
   *** removeObserver(...);
   *** removeObservers(...);
   *** setValue(...);
}

-keep class androidx.lifecycle.LiveData
-keepclassmembers class androidx.lifecycle.LiveData {
}

# ACW for Xamarin.AndroidX.Lifecycle.LiveData
# ACW for Xamarin.AndroidX.Lifecycle.Runtime
# ACW for Xamarin.AndroidX.Lifecycle.ViewModel
-keep class androidx.lifecycle.HasDefaultViewModelProviderFactory
-keepclassmembers class androidx.lifecycle.HasDefaultViewModelProviderFactory {
}

-keep class androidx.lifecycle.ViewModelStoreOwner
-keepclassmembers class androidx.lifecycle.ViewModelStoreOwner {
}

-keep class androidx.lifecycle.ViewModelProvider$Factory
-keepclassmembers class androidx.lifecycle.ViewModelProvider$Factory {
}

-keep class androidx.lifecycle.ViewModelProvider
-keepclassmembers class androidx.lifecycle.ViewModelProvider {
   <init>(...);
   <init>(...);
   <init>(...);
   *** get(...);
   *** get(...);
}

-keep class androidx.lifecycle.ViewModelStore
-keepclassmembers class androidx.lifecycle.ViewModelStore {
   <init>(...);
   *** clear(...);
}

# ACW for Xamarin.AndroidX.Loader
-keep class androidx.loader.content.Loader$OnLoadCanceledListener
-keepclassmembers class androidx.loader.content.Loader$OnLoadCanceledListener {
}

-keep class androidx.loader.content.Loader$OnLoadCompleteListener
-keepclassmembers class androidx.loader.content.Loader$OnLoadCompleteListener {
}

-keep class androidx.loader.content.Loader
-keepclassmembers class androidx.loader.content.Loader {
   <init>(...);
   *** getContext(...);
   *** getId(...);
   *** isAbandoned(...);
   *** isReset(...);
   *** isStarted(...);
   *** abandon(...);
   *** cancelLoad(...);
   *** commitContentChanged(...);
   *** dataToString(...);
   *** deliverCancellation(...);
   *** deliverResult(...);
   *** dump(...);
   *** forceLoad(...);
   *** onAbandon(...);
   *** onCancelLoad(...);
   *** onContentChanged(...);
   *** onForceLoad(...);
   *** onReset(...);
   *** onStartLoading(...);
   *** onStopLoading(...);
   *** registerListener(...);
   *** registerOnLoadCanceledListener(...);
   *** reset(...);
   *** rollbackContentChanged(...);
   *** startLoading(...);
   *** stopLoading(...);
   *** takeContentChanged(...);
   *** unregisterListener(...);
   *** unregisterOnLoadCanceledListener(...);
}

-keep class androidx.loader.app.LoaderManager$LoaderCallbacks
-keepclassmembers class androidx.loader.app.LoaderManager$LoaderCallbacks {
}

-keep class androidx.loader.app.LoaderManager
-keepclassmembers class androidx.loader.app.LoaderManager {
   <init>(...);
   *** hasRunningLoaders(...);
   *** destroyLoader(...);
   *** dump(...);
   *** enableDebugLogging(...);
   *** getInstance(...);
   *** getLoader(...);
   *** initLoader(...);
   *** markForRedelivery(...);
   *** restartLoader(...);
}

-keep class androidx.loader.app.LoaderManager
-keepclassmembers class androidx.loader.app.LoaderManager {
   *** destroyLoader(...);
   *** dump(...);
   *** getLoader(...);
   *** initLoader(...);
   *** markForRedelivery(...);
   *** restartLoader(...);
}

# ACW for Xamarin.AndroidX.LocalBroadcastManager
# ACW for Xamarin.AndroidX.Media
# ACW for Xamarin.AndroidX.MultiDex
# ACW for Xamarin.AndroidX.Print
# ACW for Xamarin.AndroidX.RecyclerView
-keep class androidx.recyclerview.widget.GridLayoutManager$LayoutParams
-keepclassmembers class androidx.recyclerview.widget.GridLayoutManager$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getSpanIndex(...);
   *** getSpanSize(...);
}

-keep class androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup
-keepclassmembers class androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup {
   <init>(...);
   *** isSpanGroupIndexCacheEnabled(...);
   *** setSpanGroupIndexCacheEnabled(...);
   *** isSpanIndexCacheEnabled(...);
   *** setSpanIndexCacheEnabled(...);
   *** getSpanGroupIndex(...);
   *** getSpanIndex(...);
   *** getSpanSize(...);
   *** invalidateSpanGroupIndexCache(...);
   *** invalidateSpanIndexCache(...);
}

-keep class androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup
-keepclassmembers class androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup {
   *** getSpanSize(...);
}

-keep class androidx.recyclerview.widget.GridLayoutManager
-keepclassmembers class androidx.recyclerview.widget.GridLayoutManager {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getSpanCount(...);
   *** setSpanCount(...);
   *** isUsingSpansToEstimateScrollbarDimensions(...);
   *** setUsingSpansToEstimateScrollbarDimensions(...);
   *** getSpanSizeLookup(...);
   *** setSpanSizeLookup(...);
}

-keep class androidx.recyclerview.widget.ItemTouchUIUtil
-keepclassmembers class androidx.recyclerview.widget.ItemTouchUIUtil {
}

-keep class androidx.recyclerview.widget.ItemTouchHelper$Callback
-keepclassmembers class androidx.recyclerview.widget.ItemTouchHelper$Callback {
   <init>(...);
   *** getBoundingBoxMargin(...);
   *** getDefaultUIUtil(...);
   *** isItemViewSwipeEnabled(...);
   *** isLongPressDragEnabled(...);
   *** canDropOver(...);
   *** chooseDropTarget(...);
   *** clearView(...);
   *** convertToAbsoluteDirection(...);
   *** convertToRelativeDirection(...);
   *** getAnimationDuration(...);
   *** getMoveThreshold(...);
   *** getMovementFlags(...);
   *** getSwipeEscapeVelocity(...);
   *** getSwipeThreshold(...);
   *** getSwipeVelocityThreshold(...);
   *** interpolateOutOfBoundsScroll(...);
   *** makeFlag(...);
   *** makeMovementFlags(...);
   *** onChildDraw(...);
   *** onChildDrawOver(...);
   *** onMove(...);
   *** onMoved(...);
   *** onSelectedChanged(...);
   *** onSwiped(...);
}

-keep class androidx.recyclerview.widget.ItemTouchHelper$Callback
-keepclassmembers class androidx.recyclerview.widget.ItemTouchHelper$Callback {
   *** getMovementFlags(...);
   *** onMove(...);
   *** onSwiped(...);
}

-keep class androidx.recyclerview.widget.ItemTouchHelper$ViewDropHandler
-keepclassmembers class androidx.recyclerview.widget.ItemTouchHelper$ViewDropHandler {
}

-keep class androidx.recyclerview.widget.ItemTouchHelper
-keepclassmembers class androidx.recyclerview.widget.ItemTouchHelper {
   <init>(...);
   *** attachToRecyclerView(...);
   *** onChildViewAttachedToWindow(...);
   *** onChildViewDetachedFromWindow(...);
   *** startDrag(...);
   *** startSwipe(...);
}

-keep class androidx.recyclerview.widget.LinearLayoutManager
-keepclassmembers class androidx.recyclerview.widget.LinearLayoutManager {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getInitialPrefetchItemCount(...);
   *** setInitialPrefetchItemCount(...);
   *** isLayoutRTL(...);
   *** getOrientation(...);
   *** setOrientation(...);
   *** getRecycleChildrenOnDetach(...);
   *** setRecycleChildrenOnDetach(...);
   *** getReverseLayout(...);
   *** setReverseLayout(...);
   *** isSmoothScrollbarEnabled(...);
   *** setSmoothScrollbarEnabled(...);
   *** getStackFromEnd(...);
   *** setStackFromEnd(...);
   *** calculateExtraLayoutSpace(...);
   *** computeScrollVectorForPosition(...);
   *** findFirstCompletelyVisibleItemPosition(...);
   *** findFirstVisibleItemPosition(...);
   *** findLastCompletelyVisibleItemPosition(...);
   *** findLastVisibleItemPosition(...);
   *** generateDefaultLayoutParams(...);
   *** getExtraLayoutSpace(...);
   *** prepareForDrop(...);
   *** scrollToPositionWithOffset(...);
}

-keep class androidx.recyclerview.widget.LinearSmoothScroller
-keepclassmembers class androidx.recyclerview.widget.LinearSmoothScroller {
   <init>(...);
   *** getHorizontalSnapPreference(...);
   *** getVerticalSnapPreference(...);
   *** calculateDtToFit(...);
   *** calculateDxToMakeVisible(...);
   *** calculateDyToMakeVisible(...);
   *** calculateSpeedPerPixel(...);
   *** calculateTimeForDeceleration(...);
   *** calculateTimeForScrolling(...);
   *** onSeekTargetStep(...);
   *** onStart(...);
   *** onStop(...);
   *** onTargetFound(...);
   *** updateActionForInterimTarget(...);
}

-keep class androidx.recyclerview.widget.LinearSnapHelper
-keepclassmembers class androidx.recyclerview.widget.LinearSnapHelper {
   <init>(...);
   *** calculateDistanceToFinalSnap(...);
   *** findSnapView(...);
   *** findTargetSnapPosition(...);
}

-keep class androidx.recyclerview.widget.OrientationHelper
-keepclassmembers class androidx.recyclerview.widget.OrientationHelper {
   *** getEnd(...);
   *** getEndAfterPadding(...);
   *** getEndPadding(...);
   *** getLayoutManager(...);
   *** getMode(...);
   *** getModeInOther(...);
   *** getStartAfterPadding(...);
   *** getTotalSpace(...);
   *** getTotalSpaceChange(...);
   *** createHorizontalHelper(...);
   *** createOrientationHelper(...);
   *** createVerticalHelper(...);
   *** getDecoratedEnd(...);
   *** getDecoratedMeasurement(...);
   *** getDecoratedMeasurementInOther(...);
   *** getDecoratedStart(...);
   *** getTransformedEndWithDecoration(...);
   *** getTransformedStartWithDecoration(...);
   *** offsetChild(...);
   *** offsetChildren(...);
   *** onLayoutComplete(...);
}

-keep class androidx.recyclerview.widget.OrientationHelper
-keepclassmembers class androidx.recyclerview.widget.OrientationHelper {
   *** getEnd(...);
   *** getEndAfterPadding(...);
   *** getEndPadding(...);
   *** getMode(...);
   *** getModeInOther(...);
   *** getStartAfterPadding(...);
   *** getTotalSpace(...);
   *** getDecoratedEnd(...);
   *** getDecoratedMeasurement(...);
   *** getDecoratedMeasurementInOther(...);
   *** getDecoratedStart(...);
   *** getTransformedEndWithDecoration(...);
   *** getTransformedStartWithDecoration(...);
   *** offsetChild(...);
   *** offsetChildren(...);
}

-keep class androidx.recyclerview.widget.PagerSnapHelper
-keepclassmembers class androidx.recyclerview.widget.PagerSnapHelper {
   <init>(...);
   *** calculateDistanceToFinalSnap(...);
   *** findSnapView(...);
   *** findTargetSnapPosition(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$Adapter
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$Adapter {
   <init>(...);
   *** hasObservers(...);
   *** hasStableIds(...);
   *** setHasStableIds(...);
   *** getItemCount(...);
   *** bindViewHolder(...);
   *** createViewHolder(...);
   *** getItemId(...);
   *** getItemViewType(...);
   *** notifyDataSetChanged(...);
   *** notifyItemChanged(...);
   *** notifyItemChanged(...);
   *** notifyItemInserted(...);
   *** notifyItemMoved(...);
   *** notifyItemRangeChanged(...);
   *** notifyItemRangeChanged(...);
   *** notifyItemRangeInserted(...);
   *** notifyItemRangeRemoved(...);
   *** notifyItemRemoved(...);
   *** onAttachedToRecyclerView(...);
   *** onBindViewHolder(...);
   *** onBindViewHolder(...);
   *** onCreateViewHolder(...);
   *** onDetachedFromRecyclerView(...);
   *** onFailedToRecycleView(...);
   *** onViewAttachedToWindow(...);
   *** onViewDetachedFromWindow(...);
   *** onViewRecycled(...);
   *** registerAdapterDataObserver(...);
   *** unregisterAdapterDataObserver(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$Adapter
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$Adapter {
   *** getItemCount(...);
   *** onBindViewHolder(...);
   *** onCreateViewHolder(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$AdapterDataObserver
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$AdapterDataObserver {
   <init>(...);
   *** onChanged(...);
   *** onItemRangeChanged(...);
   *** onItemRangeChanged(...);
   *** onItemRangeInserted(...);
   *** onItemRangeMoved(...);
   *** onItemRangeRemoved(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$AdapterDataObserver
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$AdapterDataObserver {
}

-keep class androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback {
}

-keep class androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory {
   <init>(...);
   *** createEdgeEffect(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener {
}

-keep class androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo {
   <init>(...);
   *** setFrom(...);
   *** setFrom(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ItemAnimator
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ItemAnimator {
   <init>(...);
   *** getAddDuration(...);
   *** setAddDuration(...);
   *** getChangeDuration(...);
   *** setChangeDuration(...);
   *** isRunning(...);
   *** getMoveDuration(...);
   *** setMoveDuration(...);
   *** getRemoveDuration(...);
   *** setRemoveDuration(...);
   *** animateAppearance(...);
   *** animateChange(...);
   *** animateDisappearance(...);
   *** animatePersistence(...);
   *** canReuseUpdatedViewHolder(...);
   *** canReuseUpdatedViewHolder(...);
   *** dispatchAnimationFinished(...);
   *** dispatchAnimationStarted(...);
   *** dispatchAnimationsFinished(...);
   *** endAnimation(...);
   *** endAnimations(...);
   *** isRunning(...);
   *** obtainHolderInfo(...);
   *** onAnimationFinished(...);
   *** onAnimationStarted(...);
   *** recordPostLayoutInformation(...);
   *** recordPreLayoutInformation(...);
   *** runPendingAnimations(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ItemAnimator
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ItemAnimator {
   *** isRunning(...);
   *** animateAppearance(...);
   *** animateChange(...);
   *** animateDisappearance(...);
   *** animatePersistence(...);
   *** endAnimation(...);
   *** endAnimations(...);
   *** runPendingAnimations(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ItemDecoration
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ItemDecoration {
   <init>(...);
   *** getItemOffsets(...);
   *** getItemOffsets(...);
   *** onDraw(...);
   *** onDraw(...);
   *** onDrawOver(...);
   *** onDrawOver(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ItemDecoration
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ItemDecoration {
}

-keep class androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry {
}

-keep class androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties {
   <init>(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$LayoutManager
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$LayoutManager {
   <init>(...);
   *** isAutoMeasureEnabled(...);
   *** setAutoMeasureEnabled(...);
   *** getBaseline(...);
   *** getChildCount(...);
   *** getClipToPadding(...);
   *** getFocusedChild(...);
   *** hasFocus(...);
   *** getHeight(...);
   *** getHeightMode(...);
   *** isAttachedToWindow(...);
   *** isFocused(...);
   *** isSmoothScrolling(...);
   *** getItemCount(...);
   *** isItemPrefetchEnabled(...);
   *** setItemPrefetchEnabled(...);
   *** getLayoutDirection(...);
   *** isMeasurementCacheEnabled(...);
   *** setMeasurementCacheEnabled(...);
   *** getMinimumHeight(...);
   *** getMinimumWidth(...);
   *** getPaddingBottom(...);
   *** getPaddingEnd(...);
   *** getPaddingLeft(...);
   *** getPaddingRight(...);
   *** getPaddingStart(...);
   *** getPaddingTop(...);
   *** getWidth(...);
   *** getWidthMode(...);
   *** addDisappearingView(...);
   *** addDisappearingView(...);
   *** addView(...);
   *** addView(...);
   *** assertInLayoutOrScroll(...);
   *** assertNotInLayoutOrScroll(...);
   *** attachView(...);
   *** attachView(...);
   *** attachView(...);
   *** calculateItemDecorationsForChild(...);
   *** canScrollHorizontally(...);
   *** canScrollVertically(...);
   *** checkLayoutParams(...);
   *** chooseSize(...);
   *** collectAdjacentPrefetchPositions(...);
   *** collectInitialPrefetchPositions(...);
   *** computeHorizontalScrollExtent(...);
   *** computeHorizontalScrollOffset(...);
   *** computeHorizontalScrollRange(...);
   *** computeVerticalScrollExtent(...);
   *** computeVerticalScrollOffset(...);
   *** computeVerticalScrollRange(...);
   *** detachAndScrapAttachedViews(...);
   *** detachAndScrapView(...);
   *** detachAndScrapViewAt(...);
   *** detachView(...);
   *** detachViewAt(...);
   *** endAnimation(...);
   *** findContainingItemView(...);
   *** findViewByPosition(...);
   *** generateDefaultLayoutParams(...);
   *** generateLayoutParams(...);
   *** generateLayoutParams(...);
   *** getBottomDecorationHeight(...);
   *** getChildAt(...);
   *** getChildMeasureSpec(...);
   *** getChildMeasureSpec(...);
   *** getColumnCountForAccessibility(...);
   *** getDecoratedBottom(...);
   *** getDecoratedBoundsWithMargins(...);
   *** getDecoratedLeft(...);
   *** getDecoratedMeasuredHeight(...);
   *** getDecoratedMeasuredWidth(...);
   *** getDecoratedRight(...);
   *** getDecoratedTop(...);
   *** getItemViewType(...);
   *** getLeftDecorationWidth(...);
   *** getPosition(...);
   *** getProperties(...);
   *** getRightDecorationWidth(...);
   *** getRowCountForAccessibility(...);
   *** getSelectionModeForAccessibility(...);
   *** getTopDecorationHeight(...);
   *** getTransformedBoundingBox(...);
   *** ignoreView(...);
   *** isLayoutHierarchical(...);
   *** isViewPartiallyVisible(...);
   *** layoutDecorated(...);
   *** layoutDecoratedWithMargins(...);
   *** measureChild(...);
   *** measureChildWithMargins(...);
   *** moveView(...);
   *** offsetChildrenHorizontal(...);
   *** offsetChildrenVertical(...);
   *** onAdapterChanged(...);
   *** onAddFocusables(...);
   *** onAttachedToWindow(...);
   *** onDetachedFromWindow(...);
   *** onDetachedFromWindow(...);
   *** onFocusSearchFailed(...);
   *** onInitializeAccessibilityEvent(...);
   *** onInitializeAccessibilityEvent(...);
   *** onInitializeAccessibilityNodeInfo(...);
   *** onInitializeAccessibilityNodeInfoForItem(...);
   *** onInterceptFocusSearch(...);
   *** onItemsAdded(...);
   *** onItemsChanged(...);
   *** onItemsMoved(...);
   *** onItemsRemoved(...);
   *** onItemsUpdated(...);
   *** onItemsUpdated(...);
   *** onLayoutChildren(...);
   *** onLayoutCompleted(...);
   *** onMeasure(...);
   *** onRequestChildFocus(...);
   *** onRequestChildFocus(...);
   *** onRestoreInstanceState(...);
   *** onSaveInstanceState(...);
   *** onScrollStateChanged(...);
   *** performAccessibilityAction(...);
   *** performAccessibilityActionForItem(...);
   *** postOnAnimation(...);
   *** removeAllViews(...);
   *** removeAndRecycleAllViews(...);
   *** removeAndRecycleView(...);
   *** removeAndRecycleViewAt(...);
   *** removeCallbacks(...);
   *** removeDetachedView(...);
   *** removeView(...);
   *** removeViewAt(...);
   *** requestChildRectangleOnScreen(...);
   *** requestChildRectangleOnScreen(...);
   *** requestLayout(...);
   *** requestSimpleAnimationsInNextLayout(...);
   *** scrollHorizontallyBy(...);
   *** scrollToPosition(...);
   *** scrollVerticallyBy(...);
   *** setMeasuredDimension(...);
   *** setMeasuredDimension(...);
   *** smoothScrollToPosition(...);
   *** startSmoothScroll(...);
   *** stopIgnoringView(...);
   *** supportsPredictiveItemAnimations(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$LayoutManager
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$LayoutManager {
   *** generateDefaultLayoutParams(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$LayoutParams
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** isItemChanged(...);
   *** isItemRemoved(...);
   *** isViewInvalid(...);
   *** getViewAdapterPosition(...);
   *** getViewLayoutPosition(...);
   *** getViewPosition(...);
   *** viewNeedsUpdate(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener {
}

-keep class mono.androidx.recyclerview.widget.RecyclerView_OnChildAttachStateChangeListenerImplementor
-keepclassmembers class mono.androidx.recyclerview.widget.RecyclerView_OnChildAttachStateChangeListenerImplementor {
}

-keep class androidx.recyclerview.widget.RecyclerView$OnFlingListener
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$OnFlingListener {
   <init>(...);
   *** onFling(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$OnFlingListener
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$OnFlingListener {
   *** onFling(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$OnItemTouchListener
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$OnItemTouchListener {
}

-keep class mono.androidx.recyclerview.widget.RecyclerView_OnItemTouchListenerImplementor
-keepclassmembers class mono.androidx.recyclerview.widget.RecyclerView_OnItemTouchListenerImplementor {
}

-keep class androidx.recyclerview.widget.RecyclerView$OnScrollListener
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$OnScrollListener {
   <init>(...);
   *** onScrollStateChanged(...);
   *** onScrolled(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$OnScrollListener
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$OnScrollListener {
}

-keep class androidx.recyclerview.widget.RecyclerView$RecycledViewPool
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$RecycledViewPool {
   <init>(...);
   *** clear(...);
   *** getRecycledView(...);
   *** getRecycledViewCount(...);
   *** putRecycledView(...);
   *** setMaxRecycledViews(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$Recycler
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$Recycler {
   <init>(...);
   *** getScrapList(...);
   *** bindViewToPosition(...);
   *** clear(...);
   *** convertPreLayoutPositionToPostLayout(...);
   *** getViewForPosition(...);
   *** recycleView(...);
   *** setViewCacheSize(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$RecyclerListener
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$RecyclerListener {
}

-keep class mono.androidx.recyclerview.widget.RecyclerView_RecyclerListenerImplementor
-keepclassmembers class mono.androidx.recyclerview.widget.RecyclerView_RecyclerListenerImplementor {
}

-keep class androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getDuration(...);
   *** setDuration(...);
   *** getDx(...);
   *** setDx(...);
   *** getDy(...);
   *** setDy(...);
   *** getInterpolator(...);
   *** setInterpolator(...);
   *** jumpTo(...);
   *** update(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$SmoothScroller$ScrollVectorProvider
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$SmoothScroller$ScrollVectorProvider {
}

-keep class androidx.recyclerview.widget.RecyclerView$SmoothScroller
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$SmoothScroller {
   <init>(...);
   *** getChildCount(...);
   *** isPendingInitialRun(...);
   *** isRunning(...);
   *** getLayoutManager(...);
   *** getTargetPosition(...);
   *** setTargetPosition(...);
   *** computeScrollVectorForPosition(...);
   *** findViewByPosition(...);
   *** getChildPosition(...);
   *** instantScrollToPosition(...);
   *** normalize(...);
   *** onChildAttachedToWindow(...);
   *** onSeekTargetStep(...);
   *** onStart(...);
   *** onStop(...);
   *** onTargetFound(...);
   *** stop(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$SmoothScroller
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$SmoothScroller {
   *** onSeekTargetStep(...);
   *** onStart(...);
   *** onStop(...);
   *** onTargetFound(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$State
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$State {
   <init>(...);
   *** hasTargetScrollPosition(...);
   *** isMeasuring(...);
   *** isPreLayout(...);
   *** getItemCount(...);
   *** getRemainingScrollHorizontal(...);
   *** getRemainingScrollVertical(...);
   *** getTargetScrollPosition(...);
   *** didStructureChange(...);
   *** get(...);
   *** put(...);
   *** remove(...);
   *** willRunPredictiveAnimations(...);
   *** willRunSimpleAnimations(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ViewCacheExtension
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ViewCacheExtension {
   <init>(...);
   *** getViewForPositionAndType(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ViewCacheExtension
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ViewCacheExtension {
   *** getViewForPositionAndType(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ViewHolder
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ViewHolder {
   <init>(...);
   *** getAdapterPosition(...);
   *** isRecyclable(...);
   *** setIsRecyclable(...);
   *** getItemId(...);
   *** getItemViewType(...);
   *** getLayoutPosition(...);
   *** getOldPosition(...);
   *** getPosition(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ViewHolder
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ViewHolder {
}

-keep class androidx.recyclerview.widget.RecyclerView
-keepclassmembers class androidx.recyclerview.widget.RecyclerView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCompatAccessibilityDelegate(...);
   *** hasFixedSize(...);
   *** setHasFixedSize(...);
   *** hasPendingAdapterUpdates(...);
   *** isAnimating(...);
   *** isComputingLayout(...);
   *** isLayoutSuppressed(...);
   *** getItemDecorationCount(...);
   *** isLayoutFrozen(...);
   *** setLayoutFrozen(...);
   *** getMaxFlingVelocity(...);
   *** getMinFlingVelocity(...);
   *** getPreserveFocusAfterLayout(...);
   *** setPreserveFocusAfterLayout(...);
   *** getScrollState(...);
   *** addFocusables(...);
   *** addItemDecoration(...);
   *** addItemDecoration(...);
   *** addOnChildAttachStateChangeListener(...);
   *** addOnItemTouchListener(...);
   *** addOnScrollListener(...);
   *** clearOnChildAttachStateChangeListeners(...);
   *** clearOnScrollListeners(...);
   *** computeHorizontalScrollExtent(...);
   *** computeHorizontalScrollOffset(...);
   *** computeHorizontalScrollRange(...);
   *** computeVerticalScrollExtent(...);
   *** computeVerticalScrollOffset(...);
   *** computeVerticalScrollRange(...);
   *** dispatchNestedPreScroll(...);
   *** dispatchNestedScroll(...);
   *** dispatchNestedScroll(...);
   *** dispatchRestoreInstanceState(...);
   *** dispatchSaveInstanceState(...);
   *** drawChild(...);
   *** findChildViewUnder(...);
   *** findContainingItemView(...);
   *** findContainingViewHolder(...);
   *** findViewHolderForAdapterPosition(...);
   *** findViewHolderForItemId(...);
   *** findViewHolderForLayoutPosition(...);
   *** findViewHolderForPosition(...);
   *** fling(...);
   *** getAdapter(...);
   *** getChildAdapterPosition(...);
   *** getChildItemId(...);
   *** getChildLayoutPosition(...);
   *** getChildPosition(...);
   *** getChildViewHolder(...);
   *** getDecoratedBoundsWithMargins(...);
   *** getEdgeEffectFactory(...);
   *** getItemAnimator(...);
   *** getItemDecorationAt(...);
   *** getLayoutManager(...);
   *** getOnFlingListener(...);
   *** getRecycledViewPool(...);
   *** hasNestedScrollingParent(...);
   *** invalidateItemDecorations(...);
   *** offsetChildrenHorizontal(...);
   *** offsetChildrenVertical(...);
   *** onChildAttachedToWindow(...);
   *** onChildDetachedFromWindow(...);
   *** onDraw(...);
   *** onLayout(...);
   *** onScrollStateChanged(...);
   *** onScrolled(...);
   *** removeItemDecoration(...);
   *** removeItemDecorationAt(...);
   *** removeOnChildAttachStateChangeListener(...);
   *** removeOnItemTouchListener(...);
   *** removeOnScrollListener(...);
   *** scrollToPosition(...);
   *** setAccessibilityDelegateCompat(...);
   *** setAdapter(...);
   *** setChildDrawingOrderCallback(...);
   *** setEdgeEffectFactory(...);
   *** setItemAnimator(...);
   *** setItemViewCacheSize(...);
   *** setLayoutManager(...);
   *** setOnFlingListener(...);
   *** setOnScrollListener(...);
   *** setRecycledViewPool(...);
   *** setRecyclerListener(...);
   *** setScrollingTouchSlop(...);
   *** setViewCacheExtension(...);
   *** smoothScrollBy(...);
   *** smoothScrollBy(...);
   *** smoothScrollBy(...);
   *** smoothScrollToPosition(...);
   *** startNestedScroll(...);
   *** stopNestedScroll(...);
   *** stopScroll(...);
   *** suppressLayout(...);
   *** swapAdapter(...);
}

-keep class androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate
-keepclassmembers class androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate {
   <init>(...);
   *** getItemDelegate(...);
}

-keep class androidx.recyclerview.widget.SnapHelper
-keepclassmembers class androidx.recyclerview.widget.SnapHelper {
   <init>(...);
   *** attachToRecyclerView(...);
   *** calculateDistanceToFinalSnap(...);
   *** calculateScrollDistance(...);
   *** createScroller(...);
   *** createSnapScroller(...);
   *** findSnapView(...);
   *** findTargetSnapPosition(...);
   *** onFling(...);
}

-keep class androidx.recyclerview.widget.SnapHelper
-keepclassmembers class androidx.recyclerview.widget.SnapHelper {
   *** calculateDistanceToFinalSnap(...);
   *** findSnapView(...);
   *** findTargetSnapPosition(...);
}

# ACW for Xamarin.AndroidX.SlidingPaneLayout
# ACW for Xamarin.AndroidX.SwipeRefreshLayout
-keep class androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnChildScrollUpCallback
-keepclassmembers class androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnChildScrollUpCallback {
}

-keep class androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnRefreshListener
-keepclassmembers class androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnRefreshListener {
}

-keep class mono.androidx.swiperefreshlayout.widget.SwipeRefreshLayout_OnRefreshListenerImplementor
-keepclassmembers class mono.androidx.swiperefreshlayout.widget.SwipeRefreshLayout_OnRefreshListenerImplementor {
}

-keep class androidx.swiperefreshlayout.widget.SwipeRefreshLayout
-keepclassmembers class androidx.swiperefreshlayout.widget.SwipeRefreshLayout {
   <init>(...);
   <init>(...);
   *** getProgressCircleDiameter(...);
   *** getProgressViewEndOffset(...);
   *** getProgressViewStartOffset(...);
   *** isRefreshing(...);
   *** setRefreshing(...);
   *** canChildScrollUp(...);
   *** dispatchNestedPreScroll(...);
   *** dispatchNestedScroll(...);
   *** dispatchNestedScroll(...);
   *** hasNestedScrollingParent(...);
   *** onLayout(...);
   *** onMeasure(...);
   *** onNestedPreScroll(...);
   *** onNestedScroll(...);
   *** onNestedScroll(...);
   *** onNestedScrollAccepted(...);
   *** onStartNestedScroll(...);
   *** onStopNestedScroll(...);
   *** setColorScheme(...);
   *** setColorSchemeColors(...);
   *** setColorSchemeResources(...);
   *** setDistanceToTriggerSync(...);
   *** setLegacyRequestDisallowInterceptTouchEventEnabled(...);
   *** setOnChildScrollUpCallback(...);
   *** setOnRefreshListener(...);
   *** setProgressBackgroundColor(...);
   *** setProgressBackgroundColorSchemeColor(...);
   *** setProgressBackgroundColorSchemeResource(...);
   *** setProgressViewEndTarget(...);
   *** setProgressViewOffset(...);
   *** setSize(...);
   *** setSlingshotDistance(...);
   *** startNestedScroll(...);
   *** stopNestedScroll(...);
}

# ACW for Xamarin.AndroidX.Transition
# ACW for Xamarin.AndroidX.VectorDrawable.Animated
# ACW for Xamarin.AndroidX.VectorDrawable
# ACW for Xamarin.AndroidX.VersionedParcelable
# ACW for Xamarin.AndroidX.ViewPager
-keep class androidx.viewpager.widget.PagerAdapter
-keepclassmembers class androidx.viewpager.widget.PagerAdapter {
   <init>(...);
   *** getCount(...);
   *** destroyItem(...);
   *** destroyItem(...);
   *** finishUpdate(...);
   *** finishUpdate(...);
   *** getItemPosition(...);
   *** getPageTitle(...);
   *** getPageWidth(...);
   *** instantiateItem(...);
   *** instantiateItem(...);
   *** isViewFromObject(...);
   *** notifyDataSetChanged(...);
   *** registerDataSetObserver(...);
   *** restoreState(...);
   *** saveState(...);
   *** setPrimaryItem(...);
   *** setPrimaryItem(...);
   *** startUpdate(...);
   *** startUpdate(...);
   *** unregisterDataSetObserver(...);
}

-keep class androidx.viewpager.widget.PagerAdapter
-keepclassmembers class androidx.viewpager.widget.PagerAdapter {
   *** getCount(...);
   *** isViewFromObject(...);
}

-keep class androidx.viewpager.widget.ViewPager$OnAdapterChangeListener
-keepclassmembers class androidx.viewpager.widget.ViewPager$OnAdapterChangeListener {
}

-keep class mono.androidx.viewpager.widget.ViewPager_OnAdapterChangeListenerImplementor
-keepclassmembers class mono.androidx.viewpager.widget.ViewPager_OnAdapterChangeListenerImplementor {
}

-keep class androidx.viewpager.widget.ViewPager$OnPageChangeListener
-keepclassmembers class androidx.viewpager.widget.ViewPager$OnPageChangeListener {
}

-keep class mono.androidx.viewpager.widget.ViewPager_OnPageChangeListenerImplementor
-keepclassmembers class mono.androidx.viewpager.widget.ViewPager_OnPageChangeListenerImplementor {
}

-keep class androidx.viewpager.widget.ViewPager$PageTransformer
-keepclassmembers class androidx.viewpager.widget.ViewPager$PageTransformer {
}

-keep class androidx.viewpager.widget.ViewPager
-keepclassmembers class androidx.viewpager.widget.ViewPager {
   <init>(...);
   <init>(...);
   *** getAdapter(...);
   *** setAdapter(...);
   *** getCurrentItem(...);
   *** setCurrentItem(...);
   *** isFakeDragging(...);
   *** getOffscreenPageLimit(...);
   *** setOffscreenPageLimit(...);
   *** getPageMargin(...);
   *** setPageMargin(...);
   *** addFocusables(...);
   *** addOnAdapterChangeListener(...);
   *** addOnPageChangeListener(...);
   *** addTouchables(...);
   *** arrowScroll(...);
   *** beginFakeDrag(...);
   *** canScroll(...);
   *** clearOnPageChangeListeners(...);
   *** endFakeDrag(...);
   *** executeKeyEvent(...);
   *** fakeDragBy(...);
   *** onLayout(...);
   *** onPageScrolled(...);
   *** onRestoreInstanceState(...);
   *** onSaveInstanceState(...);
   *** removeOnAdapterChangeListener(...);
   *** removeOnPageChangeListener(...);
   *** setCurrentItem(...);
   *** setOnPageChangeListener(...);
   *** setPageMarginDrawable(...);
   *** setPageMarginDrawable(...);
   *** setPageTransformer(...);
   *** setPageTransformer(...);
}

# ACW for Xamarin.Google.Android.Material
-keep class com.google.android.material.resources.TextAppearance
-keepclassmembers class com.google.android.material.resources.TextAppearance {
   <init>(...);
   *** getFallbackFont(...);
   *** getFont(...);
   *** getFontAsync(...);
   *** getFontAsync(...);
   *** updateDrawState(...);
   *** updateMeasureState(...);
   *** updateTextPaintMeasureState(...);
}

-keep class com.google.android.material.resources.TextAppearanceFontCallback
-keepclassmembers class com.google.android.material.resources.TextAppearanceFontCallback {
   <init>(...);
   *** onFontRetrievalFailed(...);
   *** onFontRetrieved(...);
}

-keep class com.google.android.material.resources.TextAppearanceFontCallback
-keepclassmembers class com.google.android.material.resources.TextAppearanceFontCallback {
   *** onFontRetrievalFailed(...);
   *** onFontRetrieved(...);
}

-keep class com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback
-keepclassmembers class com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback {
   <init>(...);
   *** onSlide(...);
   *** onStateChanged(...);
}

-keep class com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback
-keepclassmembers class com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback {
   *** onSlide(...);
   *** onStateChanged(...);
}

-keep class com.google.android.material.bottomsheet.BottomSheetBehavior
-keepclassmembers class com.google.android.material.bottomsheet.BottomSheetBehavior {
   <init>(...);
   <init>(...);
   *** isDraggable(...);
   *** setDraggable(...);
   *** getExpandedOffset(...);
   *** setExpandedOffset(...);
   *** isFitToContents(...);
   *** setFitToContents(...);
   *** isGestureInsetBottomIgnored(...);
   *** setGestureInsetBottomIgnored(...);
   *** getHalfExpandedRatio(...);
   *** setHalfExpandedRatio(...);
   *** isHideable(...);
   *** setHideable(...);
   *** getPeekHeight(...);
   *** setPeekHeight(...);
   *** getSaveFlags(...);
   *** setSaveFlags(...);
   *** getSkipCollapsed(...);
   *** setSkipCollapsed(...);
   *** getState(...);
   *** setState(...);
   *** addBottomSheetCallback(...);
   *** disableShapeAnimations(...);
   *** from(...);
   *** onInterceptTouchEvent(...);
   *** onLayoutChild(...);
   *** onNestedPreFling(...);
   *** onNestedPreScroll(...);
   *** onNestedScroll(...);
   *** onRestoreInstanceState(...);
   *** onSaveInstanceState(...);
   *** onStartNestedScroll(...);
   *** onStopNestedScroll(...);
   *** onTouchEvent(...);
   *** removeBottomSheetCallback(...);
   *** setBottomSheetCallback(...);
   *** setPeekHeight(...);
   *** setUpdateImportantForAccessibilityOnSiblings(...);
}

-keep class com.google.android.material.bottomsheet.BottomSheetDialog
-keepclassmembers class com.google.android.material.bottomsheet.BottomSheetDialog {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getBehavior(...);
   *** getDismissWithAnimation(...);
   *** setDismissWithAnimation(...);
}

-keep class com.google.android.material.badge.BadgeDrawable$SavedState
-keepclassmembers class com.google.android.material.badge.BadgeDrawable$SavedState {
   <init>(...);
   *** describeContents(...);
   *** writeToParcel(...);
}

-keep class com.google.android.material.badge.BadgeDrawable
-keepclassmembers class com.google.android.material.badge.BadgeDrawable {
   *** getBackgroundColor(...);
   *** setBackgroundColor(...);
   *** getBadgeGravity(...);
   *** setBadgeGravity(...);
   *** getBadgeTextColor(...);
   *** setBadgeTextColor(...);
   *** getContentDescription(...);
   *** hasNumber(...);
   *** getHorizontalOffset(...);
   *** setHorizontalOffset(...);
   *** getMaxCharacterCount(...);
   *** setMaxCharacterCount(...);
   *** getNumber(...);
   *** setNumber(...);
   *** getOpacity(...);
   *** getVerticalOffset(...);
   *** setVerticalOffset(...);
   *** clearNumber(...);
   *** create(...);
   *** createFromResource(...);
   *** draw(...);
   *** getSavedState(...);
   *** onStateChange(...);
   *** onTextSizeChange(...);
   *** setAlpha(...);
   *** setColorFilter(...);
   *** setContentDescriptionExceedsMaxBadgeNumberStringResource(...);
   *** setContentDescriptionNumberless(...);
   *** setContentDescriptionQuantityStringsResource(...);
   *** setVisible(...);
   *** updateBadgeCoordinates(...);
}

-keep class com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate
-keepclassmembers class com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate {
   <init>(...);
}

-keep class com.google.android.material.textfield.TextInputLayout$OnEditTextAttachedListener
-keepclassmembers class com.google.android.material.textfield.TextInputLayout$OnEditTextAttachedListener {
}

-keep class mono.com.google.android.material.textfield.TextInputLayout_OnEditTextAttachedListenerImplementor
-keepclassmembers class mono.com.google.android.material.textfield.TextInputLayout_OnEditTextAttachedListenerImplementor {
}

-keep class com.google.android.material.textfield.TextInputLayout$OnEndIconChangedListener
-keepclassmembers class com.google.android.material.textfield.TextInputLayout$OnEndIconChangedListener {
}

-keep class mono.com.google.android.material.textfield.TextInputLayout_OnEndIconChangedListenerImplementor
-keepclassmembers class mono.com.google.android.material.textfield.TextInputLayout_OnEndIconChangedListenerImplementor {
}

-keep class com.google.android.material.textfield.TextInputLayout
-keepclassmembers class com.google.android.material.textfield.TextInputLayout {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getBoxBackgroundColor(...);
   *** setBoxBackgroundColor(...);
   *** getBoxBackgroundMode(...);
   *** setBoxBackgroundMode(...);
   *** getBoxCornerRadiusBottomEnd(...);
   *** getBoxCornerRadiusBottomStart(...);
   *** getBoxCornerRadiusTopEnd(...);
   *** getBoxCornerRadiusTopStart(...);
   *** getBoxStrokeColor(...);
   *** setBoxStrokeColor(...);
   *** getBoxStrokeErrorColor(...);
   *** setBoxStrokeErrorColor(...);
   *** getBoxStrokeWidth(...);
   *** setBoxStrokeWidth(...);
   *** getBoxStrokeWidthFocused(...);
   *** setBoxStrokeWidthFocused(...);
   *** isCounterEnabled(...);
   *** setCounterEnabled(...);
   *** getCounterMaxLength(...);
   *** setCounterMaxLength(...);
   *** getCounterOverflowTextColor(...);
   *** setCounterOverflowTextColor(...);
   *** getCounterTextColor(...);
   *** setCounterTextColor(...);
   *** getDefaultHintTextColor(...);
   *** setDefaultHintTextColor(...);
   *** getEditText(...);
   *** isEndIconCheckable(...);
   *** setEndIconCheckable(...);
   *** getEndIconContentDescription(...);
   *** setEndIconContentDescription(...);
   *** getEndIconDrawable(...);
   *** setEndIconDrawable(...);
   *** getEndIconMode(...);
   *** setEndIconMode(...);
   *** isEndIconVisible(...);
   *** setEndIconVisible(...);
   *** getError(...);
   *** setError(...);
   *** getErrorContentDescription(...);
   *** setErrorContentDescription(...);
   *** getErrorCurrentTextColors(...);
   *** isErrorEnabled(...);
   *** setErrorEnabled(...);
   *** getErrorIconDrawable(...);
   *** setErrorIconDrawable(...);
   *** getHelperText(...);
   *** setHelperText(...);
   *** getHelperTextCurrentTextColor(...);
   *** isHelperTextEnabled(...);
   *** setHelperTextEnabled(...);
   *** getHint(...);
   *** setHint(...);
   *** isHintAnimationEnabled(...);
   *** setHintAnimationEnabled(...);
   *** isHintEnabled(...);
   *** setHintEnabled(...);
   *** getHintTextColor(...);
   *** setHintTextColor(...);
   *** isProvidingHint(...);
   *** getPasswordVisibilityToggleContentDescription(...);
   *** setPasswordVisibilityToggleContentDescription(...);
   *** getPasswordVisibilityToggleDrawable(...);
   *** setPasswordVisibilityToggleDrawable(...);
   *** isPasswordVisibilityToggleEnabled(...);
   *** setPasswordVisibilityToggleEnabled(...);
   *** getPlaceholderText(...);
   *** setPlaceholderText(...);
   *** getPlaceholderTextAppearance(...);
   *** setPlaceholderTextAppearance(...);
   *** getPlaceholderTextColor(...);
   *** setPlaceholderTextColor(...);
   *** getPrefixText(...);
   *** setPrefixText(...);
   *** getPrefixTextColor(...);
   *** setPrefixTextColor(...);
   *** getPrefixTextView(...);
   *** isStartIconCheckable(...);
   *** setStartIconCheckable(...);
   *** getStartIconContentDescription(...);
   *** setStartIconContentDescription(...);
   *** getStartIconDrawable(...);
   *** setStartIconDrawable(...);
   *** isStartIconVisible(...);
   *** setStartIconVisible(...);
   *** getSuffixText(...);
   *** setSuffixText(...);
   *** getSuffixTextColor(...);
   *** setSuffixTextColor(...);
   *** getSuffixTextView(...);
   *** getTypeface(...);
   *** setTypeface(...);
   *** addOnEditTextAttachedListener(...);
   *** addOnEndIconChangedListener(...);
   *** clearOnEditTextAttachedListeners(...);
   *** clearOnEndIconChangedListeners(...);
   *** dispatchRestoreInstanceState(...);
   *** onSaveInstanceState(...);
   *** passwordVisibilityToggleRequested(...);
   *** removeOnEditTextAttachedListener(...);
   *** removeOnEndIconChangedListener(...);
   *** setBoxBackgroundColorResource(...);
   *** setBoxBackgroundColorStateList(...);
   *** setBoxCornerRadii(...);
   *** setBoxCornerRadiiResources(...);
   *** setBoxStrokeColorStateList(...);
   *** setBoxStrokeWidthFocusedResource(...);
   *** setBoxStrokeWidthResource(...);
   *** setCounterOverflowTextAppearance(...);
   *** setCounterTextAppearance(...);
   *** setEndIconActivated(...);
   *** setEndIconContentDescription(...);
   *** setEndIconDrawable(...);
   *** setEndIconOnClickListener(...);
   *** setEndIconOnLongClickListener(...);
   *** setEndIconTintList(...);
   *** setEndIconTintMode(...);
   *** setErrorIconDrawable(...);
   *** setErrorIconOnClickListener(...);
   *** setErrorIconOnLongClickListener(...);
   *** setErrorIconTintList(...);
   *** setErrorIconTintMode(...);
   *** setErrorTextAppearance(...);
   *** setErrorTextColor(...);
   *** setHelperTextColor(...);
   *** setHelperTextTextAppearance(...);
   *** setHintTextAppearance(...);
   *** setPasswordVisibilityToggleContentDescription(...);
   *** setPasswordVisibilityToggleDrawable(...);
   *** setPasswordVisibilityToggleTintList(...);
   *** setPasswordVisibilityToggleTintMode(...);
   *** setPrefixTextAppearance(...);
   *** setStartIconContentDescription(...);
   *** setStartIconDrawable(...);
   *** setStartIconOnClickListener(...);
   *** setStartIconOnLongClickListener(...);
   *** setStartIconTintList(...);
   *** setStartIconTintMode(...);
   *** setSuffixTextAppearance(...);
   *** setTextInputAccessibilityDelegate(...);
}

-keep class com.google.android.material.tabs.TabLayout$TabView
-keepclassmembers class com.google.android.material.tabs.TabLayout$TabView {
   <init>(...);
   *** getTab(...);
   *** onMeasure(...);
}

-keep class com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener
-keepclassmembers class com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener {
}

-keep class mono.com.google.android.material.tabs.TabLayout_BaseOnTabSelectedListenerImplementor
-keepclassmembers class mono.com.google.android.material.tabs.TabLayout_BaseOnTabSelectedListenerImplementor {
}

-keep class com.google.android.material.tabs.TabLayout$OnTabSelectedListener
-keepclassmembers class com.google.android.material.tabs.TabLayout$OnTabSelectedListener {
}

-keep class com.google.android.material.tabs.TabLayout$Tab
-keepclassmembers class com.google.android.material.tabs.TabLayout$Tab {
   <init>(...);
   *** getBadge(...);
   *** getContentDescription(...);
   *** getCustomView(...);
   *** getIcon(...);
   *** isSelected(...);
   *** getOrCreateBadge(...);
   *** getPosition(...);
   *** getTabLabelVisibility(...);
   *** getTag(...);
   *** getText(...);
   *** removeBadge(...);
   *** select(...);
   *** setContentDescription(...);
   *** setContentDescription(...);
   *** setCustomView(...);
   *** setCustomView(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setTabLabelVisibility(...);
   *** setTag(...);
   *** setText(...);
   *** setText(...);
}

-keep class com.google.android.material.tabs.TabLayout
-keepclassmembers class com.google.android.material.tabs.TabLayout {
   <init>(...);
   <init>(...);
   <init>(...);
   *** hasUnboundedRipple(...);
   *** isInlineLabel(...);
   *** setInlineLabel(...);
   *** getSelectedTabPosition(...);
   *** getTabCount(...);
   *** getTabGravity(...);
   *** setTabGravity(...);
   *** getTabIconTint(...);
   *** setTabIconTint(...);
   *** isTabIndicatorFullWidth(...);
   *** setTabIndicatorFullWidth(...);
   *** getTabIndicatorGravity(...);
   *** getTabMode(...);
   *** setTabMode(...);
   *** getTabRippleColor(...);
   *** setTabRippleColor(...);
   *** getTabSelectedIndicator(...);
   *** getTabTextColors(...);
   *** setTabTextColors(...);
   *** addOnTabSelectedListener(...);
   *** addOnTabSelectedListener(...);
   *** addTab(...);
   *** addTab(...);
   *** addTab(...);
   *** addTab(...);
   *** clearOnTabSelectedListeners(...);
   *** createTabFromPool(...);
   *** getTabAt(...);
   *** newTab(...);
   *** releaseFromTabPool(...);
   *** removeAllTabs(...);
   *** removeOnTabSelectedListener(...);
   *** removeOnTabSelectedListener(...);
   *** removeTab(...);
   *** removeTabAt(...);
   *** selectTab(...);
   *** selectTab(...);
   *** setInlineLabelResource(...);
   *** setOnTabSelectedListener(...);
   *** setOnTabSelectedListener(...);
   *** setScrollPosition(...);
   *** setScrollPosition(...);
   *** setSelectedTabIndicator(...);
   *** setSelectedTabIndicator(...);
   *** setSelectedTabIndicatorColor(...);
   *** setSelectedTabIndicatorGravity(...);
   *** setSelectedTabIndicatorHeight(...);
   *** setTabIconTintResource(...);
   *** setTabRippleColorResource(...);
   *** setTabTextColors(...);
   *** setTabsFromPagerAdapter(...);
   *** setUnboundedRipple(...);
   *** setUnboundedRippleResource(...);
   *** setupWithViewPager(...);
   *** setupWithViewPager(...);
}

-keep class com.google.android.material.internal.TextDrawableHelper$TextDrawableDelegate
-keepclassmembers class com.google.android.material.internal.TextDrawableHelper$TextDrawableDelegate {
}

-keep class com.google.android.material.internal.TextDrawableHelper
-keepclassmembers class com.google.android.material.internal.TextDrawableHelper {
   <init>(...);
   *** getTextAppearance(...);
   *** getTextPaint(...);
   *** isTextWidthDirty(...);
   *** setTextWidthDirty(...);
   *** getTextWidth(...);
   *** setDelegate(...);
   *** setTextAppearance(...);
   *** updateTextPaintDrawState(...);
}

-keep class com.google.android.material.bottomnavigation.BottomNavigationItemView
-keepclassmembers class com.google.android.material.bottomnavigation.BottomNavigationItemView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getItemData(...);
   *** getItemPosition(...);
   *** setItemPosition(...);
   *** initialize(...);
   *** onCreateDrawableState(...);
   *** prefersCondensedTitle(...);
   *** setCheckable(...);
   *** setChecked(...);
   *** setIcon(...);
   *** setIconSize(...);
   *** setIconTintList(...);
   *** setItemBackground(...);
   *** setItemBackground(...);
   *** setLabelVisibilityMode(...);
   *** setShifting(...);
   *** setShortcut(...);
   *** setTextAppearanceActive(...);
   *** setTextAppearanceInactive(...);
   *** setTextColor(...);
   *** setTitle(...);
   *** showsIcon(...);
}

-keep class com.google.android.material.bottomnavigation.BottomNavigationMenuView
-keepclassmembers class com.google.android.material.bottomnavigation.BottomNavigationMenuView {
   <init>(...);
   <init>(...);
   *** getIconTintList(...);
   *** setIconTintList(...);
   *** getItemBackground(...);
   *** setItemBackground(...);
   *** getItemBackgroundRes(...);
   *** setItemBackgroundRes(...);
   *** isItemHorizontalTranslationEnabled(...);
   *** setItemHorizontalTranslationEnabled(...);
   *** getItemIconSize(...);
   *** setItemIconSize(...);
   *** getItemTextAppearanceActive(...);
   *** setItemTextAppearanceActive(...);
   *** getItemTextAppearanceInactive(...);
   *** setItemTextAppearanceInactive(...);
   *** getItemTextColor(...);
   *** setItemTextColor(...);
   *** getLabelVisibilityMode(...);
   *** setLabelVisibilityMode(...);
   *** getSelectedItemId(...);
   *** getWindowAnimations(...);
   *** buildMenuView(...);
   *** createDefaultColorStateList(...);
   *** initialize(...);
   *** onLayout(...);
   *** setPresenter(...);
   *** updateMenuView(...);
}

-keep class com.google.android.material.bottomnavigation.BottomNavigationPresenter
-keepclassmembers class com.google.android.material.bottomnavigation.BottomNavigationPresenter {
   <init>(...);
   *** getId(...);
   *** setId(...);
   *** collapseItemActionView(...);
   *** expandItemActionView(...);
   *** flagActionItems(...);
   *** getMenuView(...);
   *** initForMenu(...);
   *** onCloseMenu(...);
   *** onRestoreInstanceState(...);
   *** onSaveInstanceState(...);
   *** onSubMenuSelected(...);
   *** setBottomNavigationMenuView(...);
   *** setCallback(...);
   *** setUpdateSuspended(...);
   *** updateMenuView(...);
}

-keep class com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemReselectedListener
-keepclassmembers class com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemReselectedListener {
}

-keep class mono.com.google.android.material.bottomnavigation.BottomNavigationView_OnNavigationItemReselectedListenerImplementor
-keepclassmembers class mono.com.google.android.material.bottomnavigation.BottomNavigationView_OnNavigationItemReselectedListenerImplementor {
}

-keep class com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemSelectedListener
-keepclassmembers class com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemSelectedListener {
}

-keep class mono.com.google.android.material.bottomnavigation.BottomNavigationView_OnNavigationItemSelectedListenerImplementor
-keepclassmembers class mono.com.google.android.material.bottomnavigation.BottomNavigationView_OnNavigationItemSelectedListenerImplementor {
}

-keep class com.google.android.material.bottomnavigation.BottomNavigationView
-keepclassmembers class com.google.android.material.bottomnavigation.BottomNavigationView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getItemBackground(...);
   *** setItemBackground(...);
   *** getItemBackgroundResource(...);
   *** setItemBackgroundResource(...);
   *** isItemHorizontalTranslationEnabled(...);
   *** setItemHorizontalTranslationEnabled(...);
   *** getItemIconSize(...);
   *** setItemIconSize(...);
   *** getItemIconTintList(...);
   *** setItemIconTintList(...);
   *** getItemRippleColor(...);
   *** setItemRippleColor(...);
   *** getItemTextAppearanceActive(...);
   *** setItemTextAppearanceActive(...);
   *** getItemTextAppearanceInactive(...);
   *** setItemTextAppearanceInactive(...);
   *** getItemTextColor(...);
   *** setItemTextColor(...);
   *** getLabelVisibilityMode(...);
   *** setLabelVisibilityMode(...);
   *** getMaxItemCount(...);
   *** getMenu(...);
   *** getSelectedItemId(...);
   *** setSelectedItemId(...);
   *** getBadge(...);
   *** getOrCreateBadge(...);
   *** inflateMenu(...);
   *** removeBadge(...);
   *** setItemIconSizeRes(...);
   *** setOnNavigationItemReselectedListener(...);
   *** setOnNavigationItemSelectedListener(...);
}

-keep class com.google.android.material.appbar.AppBarLayout$LayoutParams
-keepclassmembers class com.google.android.material.appbar.AppBarLayout$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getScrollFlags(...);
   *** setScrollFlags(...);
   *** getScrollInterpolator(...);
   *** setScrollInterpolator(...);
}

-keep class com.google.android.material.appbar.AppBarLayout$OnOffsetChangedListener
-keepclassmembers class com.google.android.material.appbar.AppBarLayout$OnOffsetChangedListener {
}

-keep class mono.com.google.android.material.appbar.AppBarLayout_OnOffsetChangedListenerImplementor
-keepclassmembers class mono.com.google.android.material.appbar.AppBarLayout_OnOffsetChangedListenerImplementor {
}

-keep class com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior
-keepclassmembers class com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior {
   <init>(...);
   <init>(...);
   *** isHorizontalOffsetEnabled(...);
   *** setHorizontalOffsetEnabled(...);
   *** getLeftAndRightOffset(...);
   *** getTopAndBottomOffset(...);
   *** isVerticalOffsetEnabled(...);
   *** setVerticalOffsetEnabled(...);
   *** onMeasureChild(...);
   *** setLeftAndRightOffset(...);
   *** setTopAndBottomOffset(...);
}

-keep class com.google.android.material.appbar.AppBarLayout
-keepclassmembers class com.google.android.material.appbar.AppBarLayout {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isLiftOnScroll(...);
   *** setLiftOnScroll(...);
   *** getLiftOnScrollTargetViewId(...);
   *** setLiftOnScrollTargetViewId(...);
   *** getMinimumHeightForVisibleOverlappingContent(...);
   *** getStatusBarForeground(...);
   *** setStatusBarForeground(...);
   *** getTargetElevation(...);
   *** setTargetElevation(...);
   *** getTotalScrollRange(...);
   *** addOnOffsetChangedListener(...);
   *** getBehavior(...);
   *** removeOnOffsetChangedListener(...);
   *** setExpanded(...);
   *** setExpanded(...);
   *** setLiftable(...);
   *** setLifted(...);
   *** setStatusBarForegroundColor(...);
   *** setStatusBarForegroundResource(...);
}

-keep class com.google.android.material.appbar.HeaderScrollingViewBehavior
-keepclassmembers class com.google.android.material.appbar.HeaderScrollingViewBehavior {
   <init>(...);
   <init>(...);
   *** getOverlayTop(...);
   *** setOverlayTop(...);
   *** layoutChild(...);
   *** shouldHeaderOverlapScrollingChild(...);
}

-keep class com.google.android.material.appbar.HeaderScrollingViewBehavior
-keepclassmembers class com.google.android.material.appbar.HeaderScrollingViewBehavior {
}

-keep class com.google.android.material.appbar.ViewOffsetBehavior
-keepclassmembers class com.google.android.material.appbar.ViewOffsetBehavior {
   <init>(...);
   <init>(...);
   *** isHorizontalOffsetEnabled(...);
   *** setHorizontalOffsetEnabled(...);
   *** getLeftAndRightOffset(...);
   *** getTopAndBottomOffset(...);
   *** isVerticalOffsetEnabled(...);
   *** setVerticalOffsetEnabled(...);
   *** layoutChild(...);
   *** onLayoutChild(...);
   *** setLeftAndRightOffset(...);
   *** setTopAndBottomOffset(...);
   *** onMeasureChild(...);
}

# ACW for CarouselView.FormsPlugin.Droid
# ACW for Com.Android.DeskClock
# ACW for Com.ViewPagerIndicator
# ACW for FormsViewGroup
-keep class com.xamarin.forms.platform.android.FormsViewGroup
-keepclassmembers class com.xamarin.forms.platform.android.FormsViewGroup {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getInputTransparent(...);
   *** setInputTransparent(...);
   *** measureAndLayout(...);
   *** onLayout(...);
   *** sendBatchUpdate(...);
   *** sendViewBatchUpdate(...);
}

-keep class com.xamarin.formsviewgroup.BuildConfig
-keepclassmembers class com.xamarin.formsviewgroup.BuildConfig {
   <init>(...);
}

# ACW for Microcharts.Droid
# ACW for Plugin.Fingerprint
# ACW for Plugin.InputKit
# ACW for Plugin.LocalNotifications
# ACW for ReactiveUI
# ACW for Rg.Plugins.Popup
# ACW for SkiaSharp
# ACW for SkiaSharp.Views.Android
# ACW for SkiaSharp.Views.Forms
# ACW for SQLitePCLRaw.lib.e_sqlite3.android
# ACW for Xamarin.AndroidX.Activity
-keep class androidx.activity.ComponentActivity
-keepclassmembers class androidx.activity.ComponentActivity {
   <init>(...);
   <init>(...);
   *** getDefaultViewModelProviderFactory(...);
   *** getLastCustomNonConfigurationInstance(...);
   *** getOnBackPressedDispatcher(...);
   *** getSavedStateRegistry(...);
   *** getViewModelStore(...);
   *** onRetainCustomNonConfigurationInstance(...);
   *** onRetainNonConfigurationInstance(...);
}

-keep class androidx.activity.OnBackPressedDispatcherOwner
-keepclassmembers class androidx.activity.OnBackPressedDispatcherOwner {
}

-keep class androidx.activity.OnBackPressedCallback
-keepclassmembers class androidx.activity.OnBackPressedCallback {
   <init>(...);
   *** isEnabled(...);
   *** setEnabled(...);
   *** handleOnBackPressed(...);
   *** remove(...);
}

-keep class androidx.activity.OnBackPressedCallback
-keepclassmembers class androidx.activity.OnBackPressedCallback {
   *** handleOnBackPressed(...);
}

-keep class androidx.activity.OnBackPressedDispatcher
-keepclassmembers class androidx.activity.OnBackPressedDispatcher {
   <init>(...);
   <init>(...);
   *** hasEnabledCallbacks(...);
   *** addCallback(...);
   *** addCallback(...);
   *** onBackPressed(...);
}

# ACW for Xamarin.AndroidX.Biometric
-keep class androidx.biometric.BiometricManager
-keepclassmembers class androidx.biometric.BiometricManager {
   *** canAuthenticate(...);
   *** canAuthenticate(...);
   *** from(...);
}

-keep class androidx.biometric.BiometricPrompt$AuthenticationCallback
-keepclassmembers class androidx.biometric.BiometricPrompt$AuthenticationCallback {
   <init>(...);
   *** onAuthenticationError(...);
   *** onAuthenticationFailed(...);
   *** onAuthenticationSucceeded(...);
}

-keep class androidx.biometric.BiometricPrompt$AuthenticationCallback
-keepclassmembers class androidx.biometric.BiometricPrompt$AuthenticationCallback {
}

-keep class androidx.biometric.BiometricPrompt$AuthenticationResult
-keepclassmembers class androidx.biometric.BiometricPrompt$AuthenticationResult {
   *** getAuthenticationType(...);
   *** getCryptoObject(...);
}

-keep class androidx.biometric.BiometricPrompt$CryptoObject
-keepclassmembers class androidx.biometric.BiometricPrompt$CryptoObject {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCipher(...);
   *** getMac(...);
   *** getSignature(...);
}

-keep class androidx.biometric.BiometricPrompt$PromptInfo$Builder
-keepclassmembers class androidx.biometric.BiometricPrompt$PromptInfo$Builder {
   <init>(...);
   *** build(...);
   *** setAllowedAuthenticators(...);
   *** setConfirmationRequired(...);
   *** setDescription(...);
   *** setDeviceCredentialAllowed(...);
   *** setNegativeButtonText(...);
   *** setSubtitle(...);
   *** setTitle(...);
}

-keep class androidx.biometric.BiometricPrompt$PromptInfo
-keepclassmembers class androidx.biometric.BiometricPrompt$PromptInfo {
   *** getAllowedAuthenticators(...);
   *** getDescription(...);
   *** isConfirmationRequired(...);
   *** isDeviceCredentialAllowed(...);
   *** getNegativeButtonText(...);
   *** getSubtitle(...);
   *** getTitle(...);
}

-keep class androidx.biometric.BiometricPrompt
-keepclassmembers class androidx.biometric.BiometricPrompt {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** authenticate(...);
   *** authenticate(...);
   *** cancelAuthentication(...);
}

# ACW for Xamarin.AndroidX.Lifecycle.ViewModelSavedState
# ACW for Xamarin.AndroidX.SavedState
-keep class androidx.savedstate.SavedStateRegistryOwner
-keepclassmembers class androidx.savedstate.SavedStateRegistryOwner {
}

-keep class androidx.savedstate.SavedStateRegistry$SavedStateProvider
-keepclassmembers class androidx.savedstate.SavedStateRegistry$SavedStateProvider {
}

-keep class androidx.savedstate.SavedStateRegistry
-keepclassmembers class androidx.savedstate.SavedStateRegistry {
   *** isRestored(...);
   *** consumeRestoredStateForKey(...);
   *** registerSavedStateProvider(...);
   *** runOnNextRecreation(...);
   *** unregisterSavedStateProvider(...);
}

# ACW for Xamarin.AndroidX.ViewPager2
# ACW for Xamarin.CommunityToolkit
# ACW for Xamarin.Essentials
# ACW for Xamarin.Forms.Maps.Android
# ACW for Xamarin.Forms.Platform.Android
# ACW for Xamarin.Forms.Platform
# ACW for Xamarin.Google.Guava.ListenableFuture
-keep class com.google.common.util.concurrent.ListenableFuture
-keepclassmembers class com.google.common.util.concurrent.ListenableFuture {
}

# ACW for Xamarin.GooglePlayServices.Base
-keep class com.google.android.gms.common.GooglePlayServicesUtil
-keepclassmembers class com.google.android.gms.common.GooglePlayServicesUtil {
   *** getErrorDialog(...);
   *** getErrorDialog(...);
   *** getErrorPendingIntent(...);
   *** getErrorString(...);
   *** getRemoteContext(...);
   *** getRemoteResource(...);
   *** isGooglePlayServicesAvailable(...);
   *** isGooglePlayServicesAvailable(...);
   *** isUserRecoverableError(...);
   *** showErrorDialogFragment(...);
   *** showErrorDialogFragment(...);
   *** showErrorDialogFragment(...);
   *** showErrorNotification(...);
}

# ACW for Xamarin.GooglePlayServices.Basement
-keep class com.google.android.gms.common.GooglePlayServicesUtilLight
-keepclassmembers class com.google.android.gms.common.GooglePlayServicesUtilLight {
   *** cancelAvailabilityErrorNotifications(...);
   *** enableUsingApkIndependentContext(...);
   *** ensurePlayServicesAvailable(...);
   *** getApkVersion(...);
   *** getClientVersion(...);
   *** getErrorPendingIntent(...);
   *** getErrorString(...);
   *** getGooglePlayServicesAvailabilityRecoveryIntent(...);
   *** getRemoteContext(...);
   *** getRemoteResource(...);
   *** honorsDebugCertificates(...);
   *** isGooglePlayServicesAvailable(...);
   *** isGooglePlayServicesAvailable(...);
   *** isGooglePlayServicesUid(...);
   *** isPlayServicesPossiblyUpdating(...);
   *** isPlayStorePossiblyUpdating(...);
   *** isRestrictedUserProfile(...);
   *** isSidewinderDevice(...);
   *** isUserRecoverableError(...);
   *** uidHasPackageName(...);
}

-keep class com.google.android.gms.common.internal.safeparcel.AbstractSafeParcelable
-keepclassmembers class com.google.android.gms.common.internal.safeparcel.AbstractSafeParcelable {
   <init>(...);
   *** describeContents(...);
   *** writeToParcel(...);
}

-keep class com.google.android.gms.common.internal.safeparcel.AbstractSafeParcelable
-keepclassmembers class com.google.android.gms.common.internal.safeparcel.AbstractSafeParcelable {
   *** writeToParcel(...);
}

-keep class com.google.android.gms.common.internal.safeparcel.SafeParcelable
-keepclassmembers class com.google.android.gms.common.internal.safeparcel.SafeParcelable {
}

# ACW for Xamarin.GooglePlayServices.Maps
-keep class com.google.android.gms.maps.CameraUpdate
-keepclassmembers class com.google.android.gms.maps.CameraUpdate {
}

-keep class com.google.android.gms.maps.CameraUpdateFactory
-keepclassmembers class com.google.android.gms.maps.CameraUpdateFactory {
   *** newCameraPosition(...);
   *** newLatLng(...);
   *** newLatLngBounds(...);
   *** newLatLngBounds(...);
   *** newLatLngZoom(...);
   *** scrollBy(...);
   *** zoomBy(...);
   *** zoomBy(...);
   *** zoomIn(...);
   *** zoomOut(...);
   *** zoomTo(...);
}

-keep class com.google.android.gms.maps.GoogleMap$CancelableCallback
-keepclassmembers class com.google.android.gms.maps.GoogleMap$CancelableCallback {
}

-keep class com.google.android.gms.maps.GoogleMap$InfoWindowAdapter
-keepclassmembers class com.google.android.gms.maps.GoogleMap$InfoWindowAdapter {
}

-keep class com.google.android.gms.maps.GoogleMap$OnCameraChangeListener
-keepclassmembers class com.google.android.gms.maps.GoogleMap$OnCameraChangeListener {
}

-keep class mono.com.google.android.gms.maps.GoogleMap_OnCameraChangeListenerImplementor
-keepclassmembers class mono.com.google.android.gms.maps.GoogleMap_OnCameraChangeListenerImplementor {
}

-keep class com.google.android.gms.maps.GoogleMap$OnCameraIdleListener
-keepclassmembers class com.google.android.gms.maps.GoogleMap$OnCameraIdleListener {
}

-keep class mono.com.google.android.gms.maps.GoogleMap_OnCameraIdleListenerImplementor
-keepclassmembers class mono.com.google.android.gms.maps.GoogleMap_OnCameraIdleListenerImplementor {
}

-keep class com.google.android.gms.maps.GoogleMap$OnCameraMoveCanceledListener
-keepclassmembers class com.google.android.gms.maps.GoogleMap$OnCameraMoveCanceledListener {
}

-keep class mono.com.google.android.gms.maps.GoogleMap_OnCameraMoveCanceledListenerImplementor
-keepclassmembers class mono.com.google.android.gms.maps.GoogleMap_OnCameraMoveCanceledListenerImplementor {
}

-keep class com.google.android.gms.maps.GoogleMap$OnCameraMoveListener
-keepclassmembers class com.google.android.gms.maps.GoogleMap$OnCameraMoveListener {
}

-keep class mono.com.google.android.gms.maps.GoogleMap_OnCameraMoveListenerImplementor
-keepclassmembers class mono.com.google.android.gms.maps.GoogleMap_OnCameraMoveListenerImplementor {
}

-keep class com.google.android.gms.maps.GoogleMap$OnCameraMoveStartedListener
-keepclassmembers class com.google.android.gms.maps.GoogleMap$OnCameraMoveStartedListener {
}

-keep class mono.com.google.android.gms.maps.GoogleMap_OnCameraMoveStartedListenerImplementor
-keepclassmembers class mono.com.google.android.gms.maps.GoogleMap_OnCameraMoveStartedListenerImplementor {
}

-keep class com.google.android.gms.maps.GoogleMap$OnCircleClickListener
-keepclassmembers class com.google.android.gms.maps.GoogleMap$OnCircleClickListener {
}

-keep class mono.com.google.android.gms.maps.GoogleMap_OnCircleClickListenerImplementor
-keepclassmembers class mono.com.google.android.gms.maps.GoogleMap_OnCircleClickListenerImplementor {
}

-keep class com.google.android.gms.maps.GoogleMap$OnGroundOverlayClickListener
-keepclassmembers class com.google.android.gms.maps.GoogleMap$OnGroundOverlayClickListener {
}

-keep class mono.com.google.android.gms.maps.GoogleMap_OnGroundOverlayClickListenerImplementor
-keepclassmembers class mono.com.google.android.gms.maps.GoogleMap_OnGroundOverlayClickListenerImplementor {
}

-keep class com.google.android.gms.maps.GoogleMap$OnIndoorStateChangeListener
-keepclassmembers class com.google.android.gms.maps.GoogleMap$OnIndoorStateChangeListener {
}

-keep class mono.com.google.android.gms.maps.GoogleMap_OnIndoorStateChangeListenerImplementor
-keepclassmembers class mono.com.google.android.gms.maps.GoogleMap_OnIndoorStateChangeListenerImplementor {
}

-keep class com.google.android.gms.maps.GoogleMap$OnInfoWindowClickListener
-keepclassmembers class com.google.android.gms.maps.GoogleMap$OnInfoWindowClickListener {
}

-keep class mono.com.google.android.gms.maps.GoogleMap_OnInfoWindowClickListenerImplementor
-keepclassmembers class mono.com.google.android.gms.maps.GoogleMap_OnInfoWindowClickListenerImplementor {
}

-keep class com.google.android.gms.maps.GoogleMap$OnInfoWindowCloseListener
-keepclassmembers class com.google.android.gms.maps.GoogleMap$OnInfoWindowCloseListener {
}

-keep class mono.com.google.android.gms.maps.GoogleMap_OnInfoWindowCloseListenerImplementor
-keepclassmembers class mono.com.google.android.gms.maps.GoogleMap_OnInfoWindowCloseListenerImplementor {
}

-keep class com.google.android.gms.maps.GoogleMap$OnInfoWindowLongClickListener
-keepclassmembers class com.google.android.gms.maps.GoogleMap$OnInfoWindowLongClickListener {
}

-keep class mono.com.google.android.gms.maps.GoogleMap_OnInfoWindowLongClickListenerImplementor
-keepclassmembers class mono.com.google.android.gms.maps.GoogleMap_OnInfoWindowLongClickListenerImplementor {
}

-keep class com.google.android.gms.maps.GoogleMap$OnMapClickListener
-keepclassmembers class com.google.android.gms.maps.GoogleMap$OnMapClickListener {
}

-keep class mono.com.google.android.gms.maps.GoogleMap_OnMapClickListenerImplementor
-keepclassmembers class mono.com.google.android.gms.maps.GoogleMap_OnMapClickListenerImplementor {
}

-keep class com.google.android.gms.maps.GoogleMap$OnMapLoadedCallback
-keepclassmembers class com.google.android.gms.maps.GoogleMap$OnMapLoadedCallback {
}

-keep class com.google.android.gms.maps.GoogleMap$OnMapLongClickListener
-keepclassmembers class com.google.android.gms.maps.GoogleMap$OnMapLongClickListener {
}

-keep class mono.com.google.android.gms.maps.GoogleMap_OnMapLongClickListenerImplementor
-keepclassmembers class mono.com.google.android.gms.maps.GoogleMap_OnMapLongClickListenerImplementor {
}

-keep class com.google.android.gms.maps.GoogleMap$OnMarkerClickListener
-keepclassmembers class com.google.android.gms.maps.GoogleMap$OnMarkerClickListener {
}

-keep class mono.com.google.android.gms.maps.GoogleMap_OnMarkerClickListenerImplementor
-keepclassmembers class mono.com.google.android.gms.maps.GoogleMap_OnMarkerClickListenerImplementor {
}

-keep class com.google.android.gms.maps.GoogleMap$OnMarkerDragListener
-keepclassmembers class com.google.android.gms.maps.GoogleMap$OnMarkerDragListener {
}

-keep class mono.com.google.android.gms.maps.GoogleMap_OnMarkerDragListenerImplementor
-keepclassmembers class mono.com.google.android.gms.maps.GoogleMap_OnMarkerDragListenerImplementor {
}

-keep class com.google.android.gms.maps.GoogleMap$OnMyLocationButtonClickListener
-keepclassmembers class com.google.android.gms.maps.GoogleMap$OnMyLocationButtonClickListener {
}

-keep class mono.com.google.android.gms.maps.GoogleMap_OnMyLocationButtonClickListenerImplementor
-keepclassmembers class mono.com.google.android.gms.maps.GoogleMap_OnMyLocationButtonClickListenerImplementor {
}

-keep class com.google.android.gms.maps.GoogleMap$OnMyLocationChangeListener
-keepclassmembers class com.google.android.gms.maps.GoogleMap$OnMyLocationChangeListener {
}

-keep class mono.com.google.android.gms.maps.GoogleMap_OnMyLocationChangeListenerImplementor
-keepclassmembers class mono.com.google.android.gms.maps.GoogleMap_OnMyLocationChangeListenerImplementor {
}

-keep class com.google.android.gms.maps.GoogleMap$OnMyLocationClickListener
-keepclassmembers class com.google.android.gms.maps.GoogleMap$OnMyLocationClickListener {
}

-keep class mono.com.google.android.gms.maps.GoogleMap_OnMyLocationClickListenerImplementor
-keepclassmembers class mono.com.google.android.gms.maps.GoogleMap_OnMyLocationClickListenerImplementor {
}

-keep class com.google.android.gms.maps.GoogleMap$OnPoiClickListener
-keepclassmembers class com.google.android.gms.maps.GoogleMap$OnPoiClickListener {
}

-keep class mono.com.google.android.gms.maps.GoogleMap_OnPoiClickListenerImplementor
-keepclassmembers class mono.com.google.android.gms.maps.GoogleMap_OnPoiClickListenerImplementor {
}

-keep class com.google.android.gms.maps.GoogleMap$OnPolygonClickListener
-keepclassmembers class com.google.android.gms.maps.GoogleMap$OnPolygonClickListener {
}

-keep class mono.com.google.android.gms.maps.GoogleMap_OnPolygonClickListenerImplementor
-keepclassmembers class mono.com.google.android.gms.maps.GoogleMap_OnPolygonClickListenerImplementor {
}

-keep class com.google.android.gms.maps.GoogleMap$OnPolylineClickListener
-keepclassmembers class com.google.android.gms.maps.GoogleMap$OnPolylineClickListener {
}

-keep class mono.com.google.android.gms.maps.GoogleMap_OnPolylineClickListenerImplementor
-keepclassmembers class mono.com.google.android.gms.maps.GoogleMap_OnPolylineClickListenerImplementor {
}

-keep class com.google.android.gms.maps.GoogleMap$SnapshotReadyCallback
-keepclassmembers class com.google.android.gms.maps.GoogleMap$SnapshotReadyCallback {
}

-keep class com.google.android.gms.maps.GoogleMap
-keepclassmembers class com.google.android.gms.maps.GoogleMap {
   *** isBuildingsEnabled(...);
   *** setBuildingsEnabled(...);
   *** getCameraPosition(...);
   *** getFocusedBuilding(...);
   *** isIndoorEnabled(...);
   *** getMapType(...);
   *** setMapType(...);
   *** getMaxZoomLevel(...);
   *** getMinZoomLevel(...);
   *** getMyLocation(...);
   *** isMyLocationEnabled(...);
   *** setMyLocationEnabled(...);
   *** getProjection(...);
   *** isTrafficEnabled(...);
   *** setTrafficEnabled(...);
   *** getUiSettings(...);
   *** addCircle(...);
   *** addGroundOverlay(...);
   *** addMarker(...);
   *** addPolygon(...);
   *** addPolyline(...);
   *** addTileOverlay(...);
   *** animateCamera(...);
   *** animateCamera(...);
   *** animateCamera(...);
   *** clear(...);
   *** moveCamera(...);
   *** resetMinMaxZoomPreference(...);
   *** setContentDescription(...);
   *** setIndoorEnabled(...);
   *** setInfoWindowAdapter(...);
   *** setLatLngBoundsForCameraTarget(...);
   *** setLocationSource(...);
   *** setMapStyle(...);
   *** setMaxZoomPreference(...);
   *** setMinZoomPreference(...);
   *** setOnCameraChangeListener(...);
   *** setOnCameraIdleListener(...);
   *** setOnCameraMoveCanceledListener(...);
   *** setOnCameraMoveListener(...);
   *** setOnCameraMoveStartedListener(...);
   *** setOnCircleClickListener(...);
   *** setOnGroundOverlayClickListener(...);
   *** setOnIndoorStateChangeListener(...);
   *** setOnInfoWindowClickListener(...);
   *** setOnInfoWindowCloseListener(...);
   *** setOnInfoWindowLongClickListener(...);
   *** setOnMapClickListener(...);
   *** setOnMapLoadedCallback(...);
   *** setOnMapLongClickListener(...);
   *** setOnMarkerClickListener(...);
   *** setOnMarkerDragListener(...);
   *** setOnMyLocationButtonClickListener(...);
   *** setOnMyLocationChangeListener(...);
   *** setOnMyLocationClickListener(...);
   *** setOnPoiClickListener(...);
   *** setOnPolygonClickListener(...);
   *** setOnPolylineClickListener(...);
   *** setPadding(...);
   *** snapshot(...);
   *** snapshot(...);
   *** stopAnimation(...);
}

-keep class com.google.android.gms.maps.GoogleMapOptions
-keepclassmembers class com.google.android.gms.maps.GoogleMapOptions {
   <init>(...);
   *** getAmbientEnabled(...);
   *** getCamera(...);
   *** getCompassEnabled(...);
   *** getLatLngBoundsForCameraTarget(...);
   *** getLiteMode(...);
   *** getMapToolbarEnabled(...);
   *** getMapType(...);
   *** getMaxZoomPreference(...);
   *** getMinZoomPreference(...);
   *** getRotateGesturesEnabled(...);
   *** getScrollGesturesEnabled(...);
   *** getScrollGesturesEnabledDuringRotateOrZoom(...);
   *** getTiltGesturesEnabled(...);
   *** getUseViewLifecycleInFragment(...);
   *** getZOrderOnTop(...);
   *** getZoomControlsEnabled(...);
   *** getZoomGesturesEnabled(...);
   *** ambientEnabled(...);
   *** camera(...);
   *** compassEnabled(...);
   *** createFromAttributes(...);
   *** latLngBoundsForCameraTarget(...);
   *** liteMode(...);
   *** mapToolbarEnabled(...);
   *** mapType(...);
   *** maxZoomPreference(...);
   *** minZoomPreference(...);
   *** rotateGesturesEnabled(...);
   *** scrollGesturesEnabled(...);
   *** scrollGesturesEnabledDuringRotateOrZoom(...);
   *** tiltGesturesEnabled(...);
   *** toString(...);
   *** useViewLifecycleInFragment(...);
   *** writeToParcel(...);
   *** zOrderOnTop(...);
   *** zoomControlsEnabled(...);
   *** zoomGesturesEnabled(...);
}

-keep class com.google.android.gms.maps.LocationSource$OnLocationChangedListener
-keepclassmembers class com.google.android.gms.maps.LocationSource$OnLocationChangedListener {
}

-keep class com.google.android.gms.maps.LocationSource
-keepclassmembers class com.google.android.gms.maps.LocationSource {
}

-keep class com.google.android.gms.maps.OnMapReadyCallback
-keepclassmembers class com.google.android.gms.maps.OnMapReadyCallback {
}

-keep class com.google.android.gms.maps.MapsInitializer
-keepclassmembers class com.google.android.gms.maps.MapsInitializer {
   *** initialize(...);
}

-keep class com.google.android.gms.maps.MapView
-keepclassmembers class com.google.android.gms.maps.MapView {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getMapAsync(...);
   *** onCreate(...);
   *** onDestroy(...);
   *** onEnterAmbient(...);
   *** onExitAmbient(...);
   *** onLowMemory(...);
   *** onPause(...);
   *** onResume(...);
   *** onSaveInstanceState(...);
   *** onStart(...);
   *** onStop(...);
}

-keep class com.google.android.gms.maps.Projection
-keepclassmembers class com.google.android.gms.maps.Projection {
   *** getVisibleRegion(...);
   *** fromScreenLocation(...);
   *** toScreenLocation(...);
}

-keep class com.google.android.gms.maps.UiSettings
-keepclassmembers class com.google.android.gms.maps.UiSettings {
   *** isCompassEnabled(...);
   *** setCompassEnabled(...);
   *** isIndoorLevelPickerEnabled(...);
   *** setIndoorLevelPickerEnabled(...);
   *** isMapToolbarEnabled(...);
   *** setMapToolbarEnabled(...);
   *** isMyLocationButtonEnabled(...);
   *** setMyLocationButtonEnabled(...);
   *** isRotateGesturesEnabled(...);
   *** setRotateGesturesEnabled(...);
   *** isScrollGesturesEnabled(...);
   *** setScrollGesturesEnabled(...);
   *** isScrollGesturesEnabledDuringRotateOrZoom(...);
   *** setScrollGesturesEnabledDuringRotateOrZoom(...);
   *** isTiltGesturesEnabled(...);
   *** setTiltGesturesEnabled(...);
   *** isZoomControlsEnabled(...);
   *** setZoomControlsEnabled(...);
   *** isZoomGesturesEnabled(...);
   *** setZoomGesturesEnabled(...);
   *** setAllGesturesEnabled(...);
}

-keep class com.google.android.gms.maps.model.Polygon
-keepclassmembers class com.google.android.gms.maps.model.Polygon {
   *** setHoles(...);
   *** isClickable(...);
   *** setClickable(...);
   *** getFillColor(...);
   *** setFillColor(...);
   *** isGeodesic(...);
   *** setGeodesic(...);
   *** getHoles(...);
   *** getId(...);
   *** getPoints(...);
   *** setPoints(...);
   *** getStrokeColor(...);
   *** setStrokeColor(...);
   *** getStrokeJointType(...);
   *** setStrokeJointType(...);
   *** getStrokePattern(...);
   *** setStrokePattern(...);
   *** getStrokeWidth(...);
   *** setStrokeWidth(...);
   *** getTag(...);
   *** setTag(...);
   *** isVisible(...);
   *** setVisible(...);
   *** getZIndex(...);
   *** setZIndex(...);
   *** equals(...);
   *** hashCode(...);
   *** remove(...);
}

-keep class com.google.android.gms.maps.model.MarkerOptions
-keepclassmembers class com.google.android.gms.maps.model.MarkerOptions {
   <init>(...);
   *** getAlpha(...);
   *** getAnchorU(...);
   *** getAnchorV(...);
   *** getIcon(...);
   *** getInfoWindowAnchorU(...);
   *** getInfoWindowAnchorV(...);
   *** isDraggable(...);
   *** isFlat(...);
   *** isVisible(...);
   *** getPosition(...);
   *** getRotation(...);
   *** getSnippet(...);
   *** getTitle(...);
   *** getZIndex(...);
   *** alpha(...);
   *** anchor(...);
   *** draggable(...);
   *** flat(...);
   *** icon(...);
   *** infoWindowAnchor(...);
   *** position(...);
   *** rotation(...);
   *** snippet(...);
   *** title(...);
   *** visible(...);
   *** writeToParcel(...);
   *** zIndex(...);
}

-keep class com.google.android.gms.maps.model.BitmapDescriptor
-keepclassmembers class com.google.android.gms.maps.model.BitmapDescriptor {
}

-keep class com.google.android.gms.maps.model.CameraPosition$Builder
-keepclassmembers class com.google.android.gms.maps.model.CameraPosition$Builder {
   <init>(...);
   <init>(...);
   *** bearing(...);
   *** build(...);
   *** target(...);
   *** tilt(...);
   *** zoom(...);
}

-keep class com.google.android.gms.maps.model.CameraPosition
-keepclassmembers class com.google.android.gms.maps.model.CameraPosition {
   <init>(...);
   *** builder(...);
   *** builder(...);
   *** createFromAttributes(...);
   *** equals(...);
   *** fromLatLngZoom(...);
   *** hashCode(...);
   *** toString(...);
   *** writeToParcel(...);
}

-keep class com.google.android.gms.maps.model.Cap
-keepclassmembers class com.google.android.gms.maps.model.Cap {
   <init>(...);
   <init>(...);
   *** writeToParcel(...);
}

-keep class com.google.android.gms.maps.model.Circle
-keepclassmembers class com.google.android.gms.maps.model.Circle {
   *** getCenter(...);
   *** setCenter(...);
   *** isClickable(...);
   *** setClickable(...);
   *** getFillColor(...);
   *** setFillColor(...);
   *** getId(...);
   *** getRadius(...);
   *** setRadius(...);
   *** getStrokeColor(...);
   *** setStrokeColor(...);
   *** getStrokePattern(...);
   *** setStrokePattern(...);
   *** getStrokeWidth(...);
   *** setStrokeWidth(...);
   *** getTag(...);
   *** setTag(...);
   *** isVisible(...);
   *** setVisible(...);
   *** getZIndex(...);
   *** setZIndex(...);
   *** equals(...);
   *** hashCode(...);
   *** remove(...);
}

-keep class com.google.android.gms.maps.model.CircleOptions
-keepclassmembers class com.google.android.gms.maps.model.CircleOptions {
   <init>(...);
   *** getCenter(...);
   *** getFillColor(...);
   *** isClickable(...);
   *** isVisible(...);
   *** getRadius(...);
   *** getStrokeColor(...);
   *** getStrokePattern(...);
   *** getStrokeWidth(...);
   *** getZIndex(...);
   *** center(...);
   *** clickable(...);
   *** fillColor(...);
   *** radius(...);
   *** strokeColor(...);
   *** strokePattern(...);
   *** strokeWidth(...);
   *** visible(...);
   *** writeToParcel(...);
   *** zIndex(...);
}

-keep class com.google.android.gms.maps.model.GroundOverlay
-keepclassmembers class com.google.android.gms.maps.model.GroundOverlay {
   *** getBearing(...);
   *** setBearing(...);
   *** getBounds(...);
   *** isClickable(...);
   *** setClickable(...);
   *** getHeight(...);
   *** getId(...);
   *** getPosition(...);
   *** setPosition(...);
   *** getTag(...);
   *** setTag(...);
   *** getTransparency(...);
   *** setTransparency(...);
   *** isVisible(...);
   *** setVisible(...);
   *** getWidth(...);
   *** getZIndex(...);
   *** setZIndex(...);
   *** equals(...);
   *** hashCode(...);
   *** remove(...);
   *** setDimensions(...);
   *** setDimensions(...);
   *** setImage(...);
   *** setPositionFromBounds(...);
}

-keep class com.google.android.gms.maps.model.GroundOverlayOptions
-keepclassmembers class com.google.android.gms.maps.model.GroundOverlayOptions {
   <init>(...);
   *** getAnchorU(...);
   *** getAnchorV(...);
   *** getBearing(...);
   *** getBounds(...);
   *** getHeight(...);
   *** getImage(...);
   *** isClickable(...);
   *** isVisible(...);
   *** getLocation(...);
   *** getTransparency(...);
   *** getWidth(...);
   *** getZIndex(...);
   *** anchor(...);
   *** bearing(...);
   *** clickable(...);
   *** image(...);
   *** position(...);
   *** position(...);
   *** positionFromBounds(...);
   *** transparency(...);
   *** visible(...);
   *** writeToParcel(...);
   *** zIndex(...);
}

-keep class com.google.android.gms.maps.model.IndoorBuilding
-keepclassmembers class com.google.android.gms.maps.model.IndoorBuilding {
   *** getActiveLevelIndex(...);
   *** getDefaultLevelIndex(...);
   *** isUnderground(...);
   *** getLevels(...);
   *** equals(...);
   *** hashCode(...);
}

-keep class com.google.android.gms.maps.model.IndoorLevel
-keepclassmembers class com.google.android.gms.maps.model.IndoorLevel {
   *** getName(...);
   *** getShortName(...);
   *** activate(...);
   *** equals(...);
   *** hashCode(...);
}

-keep class com.google.android.gms.maps.model.TileProvider
-keepclassmembers class com.google.android.gms.maps.model.TileProvider {
}

-keep class com.google.android.gms.maps.model.LatLng
-keepclassmembers class com.google.android.gms.maps.model.LatLng {
   <init>(...);
   *** equals(...);
   *** hashCode(...);
   *** toString(...);
   *** writeToParcel(...);
}

-keep class com.google.android.gms.maps.model.LatLngBounds$Builder
-keepclassmembers class com.google.android.gms.maps.model.LatLngBounds$Builder {
   <init>(...);
   *** build(...);
   *** include(...);
}

-keep class com.google.android.gms.maps.model.LatLngBounds
-keepclassmembers class com.google.android.gms.maps.model.LatLngBounds {
   <init>(...);
   *** getCenter(...);
   *** builder(...);
   *** contains(...);
   *** createFromAttributes(...);
   *** equals(...);
   *** hashCode(...);
   *** including(...);
   *** toString(...);
   *** writeToParcel(...);
}

-keep class com.google.android.gms.maps.model.MapStyleOptions
-keepclassmembers class com.google.android.gms.maps.model.MapStyleOptions {
   <init>(...);
   *** loadRawResourceStyle(...);
   *** writeToParcel(...);
}

-keep class com.google.android.gms.maps.model.Marker
-keepclassmembers class com.google.android.gms.maps.model.Marker {
   *** getAlpha(...);
   *** setAlpha(...);
   *** isDraggable(...);
   *** setDraggable(...);
   *** isFlat(...);
   *** setFlat(...);
   *** getId(...);
   *** isInfoWindowShown(...);
   *** getPosition(...);
   *** setPosition(...);
   *** getRotation(...);
   *** setRotation(...);
   *** getSnippet(...);
   *** setSnippet(...);
   *** getTag(...);
   *** setTag(...);
   *** getTitle(...);
   *** setTitle(...);
   *** isVisible(...);
   *** setVisible(...);
   *** getZIndex(...);
   *** setZIndex(...);
   *** equals(...);
   *** hashCode(...);
   *** hideInfoWindow(...);
   *** remove(...);
   *** setAnchor(...);
   *** setIcon(...);
   *** setInfoWindowAnchor(...);
   *** showInfoWindow(...);
}

-keep class com.google.android.gms.maps.model.PatternItem
-keepclassmembers class com.google.android.gms.maps.model.PatternItem {
   <init>(...);
   *** writeToParcel(...);
}

-keep class com.google.android.gms.maps.model.PointOfInterest
-keepclassmembers class com.google.android.gms.maps.model.PointOfInterest {
   <init>(...);
   *** writeToParcel(...);
}

-keep class com.google.android.gms.maps.model.PolygonOptions
-keepclassmembers class com.google.android.gms.maps.model.PolygonOptions {
   <init>(...);
   *** getFillColor(...);
   *** getHoles(...);
   *** isClickable(...);
   *** isGeodesic(...);
   *** isVisible(...);
   *** getPoints(...);
   *** getStrokeColor(...);
   *** getStrokeJointType(...);
   *** getStrokePattern(...);
   *** getStrokeWidth(...);
   *** getZIndex(...);
   *** add(...);
   *** add(...);
   *** addAll(...);
   *** addHole(...);
   *** clickable(...);
   *** fillColor(...);
   *** geodesic(...);
   *** strokeColor(...);
   *** strokeJointType(...);
   *** strokePattern(...);
   *** strokeWidth(...);
   *** visible(...);
   *** writeToParcel(...);
   *** zIndex(...);
}

-keep class com.google.android.gms.maps.model.Polyline
-keepclassmembers class com.google.android.gms.maps.model.Polyline {
   *** isClickable(...);
   *** setClickable(...);
   *** getColor(...);
   *** setColor(...);
   *** getEndCap(...);
   *** setEndCap(...);
   *** isGeodesic(...);
   *** setGeodesic(...);
   *** getId(...);
   *** getJointType(...);
   *** setJointType(...);
   *** getPattern(...);
   *** setPattern(...);
   *** getPoints(...);
   *** setPoints(...);
   *** getStartCap(...);
   *** setStartCap(...);
   *** getTag(...);
   *** setTag(...);
   *** isVisible(...);
   *** setVisible(...);
   *** getWidth(...);
   *** setWidth(...);
   *** getZIndex(...);
   *** setZIndex(...);
   *** equals(...);
   *** hashCode(...);
   *** remove(...);
}

-keep class com.google.android.gms.maps.model.PolylineOptions
-keepclassmembers class com.google.android.gms.maps.model.PolylineOptions {
   <init>(...);
   *** getColor(...);
   *** getEndCap(...);
   *** isClickable(...);
   *** isGeodesic(...);
   *** isVisible(...);
   *** getJointType(...);
   *** getPattern(...);
   *** getPoints(...);
   *** getStartCap(...);
   *** getWidth(...);
   *** getZIndex(...);
   *** add(...);
   *** add(...);
   *** addAll(...);
   *** clickable(...);
   *** color(...);
   *** endCap(...);
   *** geodesic(...);
   *** jointType(...);
   *** pattern(...);
   *** startCap(...);
   *** visible(...);
   *** width(...);
   *** writeToParcel(...);
   *** zIndex(...);
}

-keep class com.google.android.gms.maps.model.Tile
-keepclassmembers class com.google.android.gms.maps.model.Tile {
   <init>(...);
   *** writeToParcel(...);
}

-keep class com.google.android.gms.maps.model.TileOverlay
-keepclassmembers class com.google.android.gms.maps.model.TileOverlay {
   *** getFadeIn(...);
   *** setFadeIn(...);
   *** getId(...);
   *** getTransparency(...);
   *** setTransparency(...);
   *** isVisible(...);
   *** setVisible(...);
   *** getZIndex(...);
   *** setZIndex(...);
   *** clearTileCache(...);
   *** equals(...);
   *** hashCode(...);
   *** remove(...);
}

-keep class com.google.android.gms.maps.model.TileOverlayOptions
-keepclassmembers class com.google.android.gms.maps.model.TileOverlayOptions {
   <init>(...);
   *** getFadeIn(...);
   *** isVisible(...);
   *** getTileProvider(...);
   *** getTransparency(...);
   *** getZIndex(...);
   *** fadeIn(...);
   *** tileProvider(...);
   *** transparency(...);
   *** visible(...);
   *** writeToParcel(...);
   *** zIndex(...);
}

-keep class com.google.android.gms.maps.model.VisibleRegion
-keepclassmembers class com.google.android.gms.maps.model.VisibleRegion {
   <init>(...);
   *** equals(...);
   *** hashCode(...);
   *** toString(...);
   *** writeToParcel(...);
}

# ACW for Xamarin.GooglePlayServices.Tasks
-keep class com.google.android.gms.tasks.Task
-keepclassmembers class com.google.android.gms.tasks.Task {
   <init>(...);
   *** getException(...);
   *** isCanceled(...);
   *** isComplete(...);
   *** isSuccessful(...);
   *** getResult(...);
   *** addOnCanceledListener(...);
   *** addOnCanceledListener(...);
   *** addOnCanceledListener(...);
   *** addOnCompleteListener(...);
   *** addOnCompleteListener(...);
   *** addOnCompleteListener(...);
   *** addOnFailureListener(...);
   *** addOnFailureListener(...);
   *** addOnFailureListener(...);
   *** addOnSuccessListener(...);
   *** addOnSuccessListener(...);
   *** addOnSuccessListener(...);
   *** continueWith(...);
   *** continueWith(...);
   *** continueWithTask(...);
   *** continueWithTask(...);
   *** getResult(...);
   *** onSuccessTask(...);
   *** onSuccessTask(...);
}

-keep class com.google.android.gms.tasks.TaskCompletionSource
-keepclassmembers class com.google.android.gms.tasks.TaskCompletionSource {
   <init>(...);
   <init>(...);
   *** getTask(...);
   *** setException(...);
   *** setResult(...);
   *** trySetException(...);
   *** trySetResult(...);
}

-keep class com.google.android.gms.tasks.CancellationToken
-keepclassmembers class com.google.android.gms.tasks.CancellationToken {
   <init>(...);
   *** isCancellationRequested(...);
   *** onCanceledRequested(...);
}

-keep class com.google.android.gms.tasks.CancellationToken
-keepclassmembers class com.google.android.gms.tasks.CancellationToken {
   *** isCancellationRequested(...);
   *** onCanceledRequested(...);
}

-keep class com.google.android.gms.tasks.Continuation
-keepclassmembers class com.google.android.gms.tasks.Continuation {
}

-keep class com.google.android.gms.tasks.OnCanceledListener
-keepclassmembers class com.google.android.gms.tasks.OnCanceledListener {
}

-keep class com.google.android.gms.tasks.OnCompleteListener
-keepclassmembers class com.google.android.gms.tasks.OnCompleteListener {
}

-keep class com.google.android.gms.tasks.OnFailureListener
-keepclassmembers class com.google.android.gms.tasks.OnFailureListener {
}

-keep class com.google.android.gms.tasks.OnSuccessListener
-keepclassmembers class com.google.android.gms.tasks.OnSuccessListener {
}

-keep class com.google.android.gms.tasks.OnTokenCanceledListener
-keepclassmembers class com.google.android.gms.tasks.OnTokenCanceledListener {
}

-keep class com.google.android.gms.tasks.SuccessContinuation
-keepclassmembers class com.google.android.gms.tasks.SuccessContinuation {
}

-keep class com.google.android.gms.tasks.Task
-keepclassmembers class com.google.android.gms.tasks.Task {
   *** getException(...);
   *** isCanceled(...);
   *** isComplete(...);
   *** isSuccessful(...);
   *** getResult(...);
   *** addOnFailureListener(...);
   *** addOnFailureListener(...);
   *** addOnFailureListener(...);
   *** addOnSuccessListener(...);
   *** addOnSuccessListener(...);
   *** addOnSuccessListener(...);
   *** getResult(...);
}

# ACW for Restart.Android
# ACW for Bolts.AppLinks
-keep class bolts.AppLink$Target
-keepclassmembers class bolts.AppLink$Target {
   <init>(...);
   *** getAppName(...);
   *** getClassName(...);
   *** getPackageName(...);
   *** getUrl(...);
}

-keep class bolts.AppLink
-keepclassmembers class bolts.AppLink {
   <init>(...);
   *** getSourceUrl(...);
   *** getTargets(...);
   *** getWebUrl(...);
}

-keep class bolts.AppLinkNavigation$NavigationResult
-keepclassmembers class bolts.AppLinkNavigation$NavigationResult {
   *** getCode(...);
   *** isSucceeded(...);
   *** valueOf(...);
   *** values(...);
}

-keep class bolts.AppLinkNavigation
-keepclassmembers class bolts.AppLinkNavigation {
   <init>(...);
   *** getAppLink(...);
   *** getAppLinkData(...);
   *** getDefaultResolver(...);
   *** setDefaultResolver(...);
   *** getExtras(...);
   *** navigate(...);
   *** navigate(...);
   *** navigateInBackground(...);
   *** navigateInBackground(...);
   *** navigateInBackground(...);
   *** navigateInBackground(...);
   *** navigateInBackground(...);
   *** navigateInBackground(...);
}

-keep class bolts.AppLinks
-keepclassmembers class bolts.AppLinks {
   <init>(...);
   *** getAppLinkData(...);
   *** getAppLinkExtras(...);
   *** getTargetUrl(...);
   *** getTargetUrlFromInboundIntent(...);
}

-keep class bolts.Bolts
-keepclassmembers class bolts.Bolts {
   <init>(...);
}

-keep class bolts.applinks.BuildConfig
-keepclassmembers class bolts.applinks.BuildConfig {
   <init>(...);
}

-keep class bolts.AppLinkResolver
-keepclassmembers class bolts.AppLinkResolver {
}

-keep class bolts.MeasurementEvent
-keepclassmembers class bolts.MeasurementEvent {
}

-keep class bolts.WebViewAppLinkResolver
-keepclassmembers class bolts.WebViewAppLinkResolver {
   <init>(...);
   *** getAppLinkFromUrlInBackground(...);
}

# ACW for Bolts.Tasks
-keep class bolts.AggregateException
-keepclassmembers class bolts.AggregateException {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getErrors(...);
   *** getInnerThrowables(...);
   *** getCauses(...);
}

-keep class bolts.CancellationToken
-keepclassmembers class bolts.CancellationToken {
   *** isCancellationRequested(...);
   *** register(...);
   *** throwIfCancellationRequested(...);
}

-keep class bolts.CancellationTokenRegistration
-keepclassmembers class bolts.CancellationTokenRegistration {
   *** close(...);
}

-keep class bolts.CancellationTokenSource
-keepclassmembers class bolts.CancellationTokenSource {
   <init>(...);
   *** isCancellationRequested(...);
   *** getToken(...);
   *** cancel(...);
   *** cancelAfter(...);
   *** close(...);
}

-keep class bolts.Capture
-keepclassmembers class bolts.Capture {
   <init>(...);
   <init>(...);
   *** get(...);
   *** set(...);
}

-keep class bolts.ExecutorException
-keepclassmembers class bolts.ExecutorException {
   <init>(...);
}

-keep class bolts.Continuation
-keepclassmembers class bolts.Continuation {
}

-keep class bolts.Task$TaskCompletionSource
-keepclassmembers class bolts.Task$TaskCompletionSource {
}

-keep class bolts.Task$UnobservedExceptionHandler
-keepclassmembers class bolts.Task$UnobservedExceptionHandler {
}

-keep class bolts.Task
-keepclassmembers class bolts.Task {
   *** getError(...);
   *** isCancelled(...);
   *** isCompleted(...);
   *** isFaulted(...);
   *** getResult(...);
   *** getUnobservedExceptionHandler(...);
   *** setUnobservedExceptionHandler(...);
   *** call(...);
   *** call(...);
   *** call(...);
   *** call(...);
   *** callInBackground(...);
   *** callInBackground(...);
   *** cancelled(...);
   *** cast(...);
   *** continueWhile(...);
   *** continueWhile(...);
   *** continueWhile(...);
   *** continueWhile(...);
   *** continueWith(...);
   *** continueWith(...);
   *** continueWith(...);
   *** continueWith(...);
   *** continueWithTask(...);
   *** continueWithTask(...);
   *** continueWithTask(...);
   *** continueWithTask(...);
   *** create(...);
   *** delay(...);
   *** delay(...);
   *** forError(...);
   *** forResult(...);
   *** makeVoid(...);
   *** onSuccess(...);
   *** onSuccess(...);
   *** onSuccess(...);
   *** onSuccess(...);
   *** onSuccessTask(...);
   *** onSuccessTask(...);
   *** onSuccessTask(...);
   *** onSuccessTask(...);
   *** waitForCompletion(...);
   *** waitForCompletion(...);
   *** whenAll(...);
   *** whenAllResult(...);
   *** whenAny(...);
   *** whenAnyResult(...);
}

-keep class bolts.TaskCompletionSource
-keepclassmembers class bolts.TaskCompletionSource {
   <init>(...);
   *** getTask(...);
   *** setCancelled(...);
   *** setError(...);
   *** setResult(...);
   *** trySetCancelled(...);
   *** trySetError(...);
   *** trySetResult(...);
}

-keep class bolts.UnobservedTaskException
-keepclassmembers class bolts.UnobservedTaskException {
   <init>(...);
}

# ACW for Google.ZXing.Core
-keep class com.google.zxing.BarcodeFormat
-keepclassmembers class com.google.zxing.BarcodeFormat {
   *** valueOf(...);
   *** values(...);
}

-keep class com.google.zxing.Binarizer
-keepclassmembers class com.google.zxing.Binarizer {
   <init>(...);
   *** getBlackMatrix(...);
   *** getHeight(...);
   *** getLuminanceSource(...);
   *** getWidth(...);
   *** createBinarizer(...);
   *** getBlackRow(...);
}

-keep class com.google.zxing.Binarizer
-keepclassmembers class com.google.zxing.Binarizer {
   *** getBlackMatrix(...);
   *** createBinarizer(...);
   *** getBlackRow(...);
}

-keep class com.google.zxing.BinaryBitmap
-keepclassmembers class com.google.zxing.BinaryBitmap {
   <init>(...);
   *** getBlackMatrix(...);
   *** getHeight(...);
   *** isCropSupported(...);
   *** isRotateSupported(...);
   *** getWidth(...);
   *** crop(...);
   *** getBlackRow(...);
   *** rotateCounterClockwise(...);
   *** rotateCounterClockwise45(...);
}

-keep class com.google.zxing.ChecksumException
-keepclassmembers class com.google.zxing.ChecksumException {
   *** getChecksumInstance(...);
   *** getChecksumInstance(...);
}

-keep class com.google.zxing.DecodeHintType
-keepclassmembers class com.google.zxing.DecodeHintType {
   *** getValueType(...);
   *** valueOf(...);
   *** values(...);
}

-keep class com.google.zxing.Dimension
-keepclassmembers class com.google.zxing.Dimension {
   <init>(...);
   *** getHeight(...);
   *** getWidth(...);
}

-keep class com.google.zxing.EncodeHintType
-keepclassmembers class com.google.zxing.EncodeHintType {
   *** valueOf(...);
   *** values(...);
}

-keep class com.google.zxing.FormatException
-keepclassmembers class com.google.zxing.FormatException {
   *** getFormatInstance(...);
   *** getFormatInstance(...);
}

-keep class com.google.zxing.InvertedLuminanceSource
-keepclassmembers class com.google.zxing.InvertedLuminanceSource {
   <init>(...);
   *** getMatrix(...);
   *** getRow(...);
}

-keep class com.google.zxing.Reader
-keepclassmembers class com.google.zxing.Reader {
}

-keep class com.google.zxing.ResultPointCallback
-keepclassmembers class com.google.zxing.ResultPointCallback {
}

-keep class com.google.zxing.Writer
-keepclassmembers class com.google.zxing.Writer {
}

-keep class com.google.zxing.LuminanceSource
-keepclassmembers class com.google.zxing.LuminanceSource {
   <init>(...);
   *** getHeight(...);
   *** isCropSupported(...);
   *** isRotateSupported(...);
   *** getWidth(...);
   *** crop(...);
   *** getMatrix(...);
   *** getRow(...);
   *** invert(...);
   *** rotateCounterClockwise(...);
   *** rotateCounterClockwise45(...);
   *** toString(...);
}

-keep class com.google.zxing.LuminanceSource
-keepclassmembers class com.google.zxing.LuminanceSource {
   *** getMatrix(...);
   *** getRow(...);
}

-keep class com.google.zxing.MultiFormatReader
-keepclassmembers class com.google.zxing.MultiFormatReader {
   <init>(...);
   *** decode(...);
   *** decode(...);
   *** decodeWithState(...);
   *** reset(...);
   *** setHints(...);
}

-keep class com.google.zxing.MultiFormatWriter
-keepclassmembers class com.google.zxing.MultiFormatWriter {
   <init>(...);
   *** encode(...);
   *** encode(...);
}

-keep class com.google.zxing.NotFoundException
-keepclassmembers class com.google.zxing.NotFoundException {
   *** getNotFoundInstance(...);
}

-keep class com.google.zxing.PlanarYUVLuminanceSource
-keepclassmembers class com.google.zxing.PlanarYUVLuminanceSource {
   <init>(...);
   *** getThumbnailHeight(...);
   *** getThumbnailWidth(...);
   *** getMatrix(...);
   *** getRow(...);
   *** renderThumbnail(...);
}

-keep class com.google.zxing.ReaderException
-keepclassmembers class com.google.zxing.ReaderException {
   *** fillInStackTrace(...);
}

-keep class com.google.zxing.ReaderException
-keepclassmembers class com.google.zxing.ReaderException {
}

-keep class com.google.zxing.Result
-keepclassmembers class com.google.zxing.Result {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getBarcodeFormat(...);
   *** getNumBits(...);
   *** getResultMetadata(...);
   *** getText(...);
   *** getTimestamp(...);
   *** addResultPoints(...);
   *** getRawBytes(...);
   *** getResultPoints(...);
   *** putAllMetadata(...);
   *** putMetadata(...);
}

-keep class com.google.zxing.ResultMetadataType
-keepclassmembers class com.google.zxing.ResultMetadataType {
   *** valueOf(...);
   *** values(...);
}

-keep class com.google.zxing.ResultPoint
-keepclassmembers class com.google.zxing.ResultPoint {
   <init>(...);
   *** distance(...);
   *** equals(...);
   *** getX(...);
   *** getY(...);
   *** hashCode(...);
   *** orderBestPatterns(...);
   *** toString(...);
}

-keep class com.google.zxing.RGBLuminanceSource
-keepclassmembers class com.google.zxing.RGBLuminanceSource {
   <init>(...);
   *** getMatrix(...);
   *** getRow(...);
}

-keep class com.google.zxing.WriterException
-keepclassmembers class com.google.zxing.WriterException {
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class com.google.zxing.qrcode.QRCodeReader
-keepclassmembers class com.google.zxing.qrcode.QRCodeReader {
   <init>(...);
   *** getDecoder(...);
   *** decode(...);
   *** decode(...);
   *** reset(...);
}

-keep class com.google.zxing.qrcode.QRCodeWriter
-keepclassmembers class com.google.zxing.qrcode.QRCodeWriter {
   <init>(...);
   *** encode(...);
   *** encode(...);
}

-keep class com.google.zxing.qrcode.encoder.BlockPair
-keepclassmembers class com.google.zxing.qrcode.encoder.BlockPair {
   *** getDataBytes(...);
   *** getErrorCorrectionBytes(...);
}

-keep class com.google.zxing.qrcode.encoder.ByteMatrix
-keepclassmembers class com.google.zxing.qrcode.encoder.ByteMatrix {
   <init>(...);
   *** getHeight(...);
   *** getWidth(...);
   *** clear(...);
   *** get(...);
   *** getArray(...);
   *** set(...);
   *** set(...);
   *** set(...);
}

-keep class com.google.zxing.qrcode.encoder.Encoder
-keepclassmembers class com.google.zxing.qrcode.encoder.Encoder {
   *** chooseMode(...);
   *** encode(...);
   *** encode(...);
}

-keep class com.google.zxing.qrcode.encoder.MaskUtil
-keepclassmembers class com.google.zxing.qrcode.encoder.MaskUtil {
}

-keep class com.google.zxing.qrcode.encoder.MatrixUtil
-keepclassmembers class com.google.zxing.qrcode.encoder.MatrixUtil {
}

-keep class com.google.zxing.qrcode.encoder.QRCode
-keepclassmembers class com.google.zxing.qrcode.encoder.QRCode {
   <init>(...);
   *** getECLevel(...);
   *** setECLevel(...);
   *** getMaskPattern(...);
   *** setMaskPattern(...);
   *** getMatrix(...);
   *** setMatrix(...);
   *** getMode(...);
   *** setMode(...);
   *** getVersion(...);
   *** setVersion(...);
   *** isValidMaskPattern(...);
}

-keep class com.google.zxing.qrcode.detector.AlignmentPattern
-keepclassmembers class com.google.zxing.qrcode.detector.AlignmentPattern {
}

-keep class com.google.zxing.qrcode.detector.AlignmentPatternFinder
-keepclassmembers class com.google.zxing.qrcode.detector.AlignmentPatternFinder {
}

-keep class com.google.zxing.qrcode.detector.Detector
-keepclassmembers class com.google.zxing.qrcode.detector.Detector {
   <init>(...);
   *** getImage(...);
   *** getResultPointCallback(...);
   *** calculateModuleSize(...);
   *** detect(...);
   *** detect(...);
   *** findAlignmentInRegion(...);
   *** processFinderPatternInfo(...);
}

-keep class com.google.zxing.qrcode.detector.FinderPattern
-keepclassmembers class com.google.zxing.qrcode.detector.FinderPattern {
   *** getEstimatedModuleSize(...);
}

-keep class com.google.zxing.qrcode.detector.FinderPatternFinder
-keepclassmembers class com.google.zxing.qrcode.detector.FinderPatternFinder {
   <init>(...);
   <init>(...);
   *** getImage(...);
   *** getPossibleCenters(...);
   *** clearCounts(...);
   *** foundPatternCross(...);
   *** foundPatternDiagonal(...);
   *** handlePossibleCenter(...);
   *** handlePossibleCenter(...);
   *** shiftCounts2(...);
}

-keep class com.google.zxing.qrcode.detector.FinderPatternInfo
-keepclassmembers class com.google.zxing.qrcode.detector.FinderPatternInfo {
   <init>(...);
   *** getBottomLeft(...);
   *** getTopLeft(...);
   *** getTopRight(...);
}

-keep class com.google.zxing.qrcode.decoder.BitMatrixParser
-keepclassmembers class com.google.zxing.qrcode.decoder.BitMatrixParser {
}

-keep class com.google.zxing.qrcode.decoder.DataBlock
-keepclassmembers class com.google.zxing.qrcode.decoder.DataBlock {
}

-keep class com.google.zxing.qrcode.decoder.DataMask
-keepclassmembers class com.google.zxing.qrcode.decoder.DataMask {
   *** valueOf(...);
   *** values(...);
}

-keep class com.google.zxing.qrcode.decoder.DataMask
-keepclassmembers class com.google.zxing.qrcode.decoder.DataMask {
}

-keep class com.google.zxing.qrcode.decoder.DecodedBitStreamParser
-keepclassmembers class com.google.zxing.qrcode.decoder.DecodedBitStreamParser {
}

-keep class com.google.zxing.qrcode.decoder.Decoder
-keepclassmembers class com.google.zxing.qrcode.decoder.Decoder {
   <init>(...);
   *** decode(...);
   *** decode(...);
   *** decode(...);
   *** decode(...);
}

-keep class com.google.zxing.qrcode.decoder.ErrorCorrectionLevel
-keepclassmembers class com.google.zxing.qrcode.decoder.ErrorCorrectionLevel {
   *** getBits(...);
   *** forBits(...);
   *** valueOf(...);
   *** values(...);
}

-keep class com.google.zxing.qrcode.decoder.FormatInformation
-keepclassmembers class com.google.zxing.qrcode.decoder.FormatInformation {
}

-keep class com.google.zxing.qrcode.decoder.Mode
-keepclassmembers class com.google.zxing.qrcode.decoder.Mode {
   *** getBits(...);
   *** forBits(...);
   *** getCharacterCountBits(...);
   *** valueOf(...);
   *** values(...);
}

-keep class com.google.zxing.qrcode.decoder.QRCodeDecoderMetaData
-keepclassmembers class com.google.zxing.qrcode.decoder.QRCodeDecoderMetaData {
   *** isMirrored(...);
   *** applyMirroredCorrection(...);
}

-keep class com.google.zxing.qrcode.decoder.Version$ECB
-keepclassmembers class com.google.zxing.qrcode.decoder.Version$ECB {
   *** getCount(...);
   *** getDataCodewords(...);
}

-keep class com.google.zxing.qrcode.decoder.Version$ECBlocks
-keepclassmembers class com.google.zxing.qrcode.decoder.Version$ECBlocks {
   *** getECCodewordsPerBlock(...);
   *** getNumBlocks(...);
   *** getTotalECCodewords(...);
   *** getECBlocks(...);
}

-keep class com.google.zxing.qrcode.decoder.Version
-keepclassmembers class com.google.zxing.qrcode.decoder.Version {
   *** getDimensionForVersion(...);
   *** getTotalCodewords(...);
   *** getVersionNumber(...);
   *** getAlignmentPatternCenters(...);
   *** getECBlocksForLevel(...);
   *** getProvisionalVersionForDimension(...);
   *** getVersionForNumber(...);
}

-keep class com.google.zxing.pdf417.PDF417Common
-keepclassmembers class com.google.zxing.pdf417.PDF417Common {
   *** getBitCountSum(...);
   *** getCodeword(...);
   *** toIntArray(...);
}

-keep class com.google.zxing.pdf417.PDF417Reader
-keepclassmembers class com.google.zxing.pdf417.PDF417Reader {
   <init>(...);
   *** decode(...);
   *** decode(...);
   *** decodeMultiple(...);
   *** decodeMultiple(...);
   *** reset(...);
}

-keep class com.google.zxing.pdf417.PDF417ResultMetadata
-keepclassmembers class com.google.zxing.pdf417.PDF417ResultMetadata {
   <init>(...);
   *** getAddressee(...);
   *** setAddressee(...);
   *** getChecksum(...);
   *** setChecksum(...);
   *** getFileId(...);
   *** setFileId(...);
   *** getFileName(...);
   *** setFileName(...);
   *** getFileSize(...);
   *** setFileSize(...);
   *** isLastSegment(...);
   *** setLastSegment(...);
   *** getSegmentCount(...);
   *** setSegmentCount(...);
   *** getSegmentIndex(...);
   *** setSegmentIndex(...);
   *** getSender(...);
   *** setSender(...);
   *** getTimestamp(...);
   *** setTimestamp(...);
   *** getOptionalData(...);
   *** setOptionalData(...);
}

-keep class com.google.zxing.pdf417.PDF417Writer
-keepclassmembers class com.google.zxing.pdf417.PDF417Writer {
   <init>(...);
   *** encode(...);
   *** encode(...);
}

-keep class com.google.zxing.pdf417.encoder.BarcodeMatrix
-keepclassmembers class com.google.zxing.pdf417.encoder.BarcodeMatrix {
   *** getMatrix(...);
   *** getScaledMatrix(...);
}

-keep class com.google.zxing.pdf417.encoder.BarcodeRow
-keepclassmembers class com.google.zxing.pdf417.encoder.BarcodeRow {
}

-keep class com.google.zxing.pdf417.encoder.Compaction
-keepclassmembers class com.google.zxing.pdf417.encoder.Compaction {
   *** valueOf(...);
   *** values(...);
}

-keep class com.google.zxing.pdf417.encoder.Dimensions
-keepclassmembers class com.google.zxing.pdf417.encoder.Dimensions {
   <init>(...);
   *** getMaxCols(...);
   *** getMaxRows(...);
   *** getMinCols(...);
   *** getMinRows(...);
}

-keep class com.google.zxing.pdf417.encoder.PDF417
-keepclassmembers class com.google.zxing.pdf417.encoder.PDF417 {
   <init>(...);
   <init>(...);
   *** getBarcodeMatrix(...);
   *** generateBarcodeLogic(...);
   *** setCompact(...);
   *** setCompaction(...);
   *** setDimensions(...);
   *** setEncoding(...);
}

-keep class com.google.zxing.pdf417.encoder.PDF417ErrorCorrection
-keepclassmembers class com.google.zxing.pdf417.encoder.PDF417ErrorCorrection {
}

-keep class com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder
-keepclassmembers class com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder {
}

-keep class com.google.zxing.pdf417.detector.Detector
-keepclassmembers class com.google.zxing.pdf417.detector.Detector {
   *** detect(...);
}

-keep class com.google.zxing.pdf417.detector.PDF417DetectorResult
-keepclassmembers class com.google.zxing.pdf417.detector.PDF417DetectorResult {
   <init>(...);
   *** getBits(...);
   *** getPoints(...);
}

-keep class com.google.zxing.pdf417.decoder.BarcodeMetadata
-keepclassmembers class com.google.zxing.pdf417.decoder.BarcodeMetadata {
}

-keep class com.google.zxing.pdf417.decoder.BarcodeValue
-keepclassmembers class com.google.zxing.pdf417.decoder.BarcodeValue {
}

-keep class com.google.zxing.pdf417.decoder.BoundingBox
-keepclassmembers class com.google.zxing.pdf417.decoder.BoundingBox {
}

-keep class com.google.zxing.pdf417.decoder.Codeword
-keepclassmembers class com.google.zxing.pdf417.decoder.Codeword {
}

-keep class com.google.zxing.pdf417.decoder.DecodedBitStreamParser
-keepclassmembers class com.google.zxing.pdf417.decoder.DecodedBitStreamParser {
}

-keep class com.google.zxing.pdf417.decoder.DetectionResult
-keepclassmembers class com.google.zxing.pdf417.decoder.DetectionResult {
}

-keep class com.google.zxing.pdf417.decoder.DetectionResultColumn
-keepclassmembers class com.google.zxing.pdf417.decoder.DetectionResultColumn {
}

-keep class com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn
-keepclassmembers class com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn {
   *** toString(...);
}

-keep class com.google.zxing.pdf417.decoder.PDF417CodewordDecoder
-keepclassmembers class com.google.zxing.pdf417.decoder.PDF417CodewordDecoder {
}

-keep class com.google.zxing.pdf417.decoder.PDF417ScanningDecoder
-keepclassmembers class com.google.zxing.pdf417.decoder.PDF417ScanningDecoder {
   *** decode(...);
}

-keep class com.google.zxing.pdf417.decoder.ec.ErrorCorrection
-keepclassmembers class com.google.zxing.pdf417.decoder.ec.ErrorCorrection {
   <init>(...);
   *** decode(...);
}

-keep class com.google.zxing.pdf417.decoder.ec.ModulusGF
-keepclassmembers class com.google.zxing.pdf417.decoder.ec.ModulusGF {
}

-keep class com.google.zxing.pdf417.decoder.ec.ModulusPoly
-keepclassmembers class com.google.zxing.pdf417.decoder.ec.ModulusPoly {
}

-keep class com.google.zxing.oned.CodaBarReader
-keepclassmembers class com.google.zxing.oned.CodaBarReader {
   <init>(...);
   *** decodeRow(...);
}

-keep class com.google.zxing.oned.CodaBarWriter
-keepclassmembers class com.google.zxing.oned.CodaBarWriter {
   <init>(...);
   *** encode(...);
}

-keep class com.google.zxing.oned.Code128Reader
-keepclassmembers class com.google.zxing.oned.Code128Reader {
   <init>(...);
   *** decodeRow(...);
}

-keep class com.google.zxing.oned.Code128Writer
-keepclassmembers class com.google.zxing.oned.Code128Writer {
   <init>(...);
   *** encode(...);
}

-keep class com.google.zxing.oned.Code39Reader
-keepclassmembers class com.google.zxing.oned.Code39Reader {
   <init>(...);
   <init>(...);
   <init>(...);
   *** decodeRow(...);
}

-keep class com.google.zxing.oned.Code39Writer
-keepclassmembers class com.google.zxing.oned.Code39Writer {
   <init>(...);
   *** encode(...);
}

-keep class com.google.zxing.oned.Code93Reader
-keepclassmembers class com.google.zxing.oned.Code93Reader {
   <init>(...);
   *** decodeRow(...);
}

-keep class com.google.zxing.oned.Code93Writer
-keepclassmembers class com.google.zxing.oned.Code93Writer {
   <init>(...);
   *** appendPattern(...);
   *** encode(...);
}

-keep class com.google.zxing.oned.EAN13Reader
-keepclassmembers class com.google.zxing.oned.EAN13Reader {
   <init>(...);
   *** decodeMiddle(...);
}

-keep class com.google.zxing.oned.EAN13Writer
-keepclassmembers class com.google.zxing.oned.EAN13Writer {
   <init>(...);
   *** encode(...);
}

-keep class com.google.zxing.oned.EAN8Reader
-keepclassmembers class com.google.zxing.oned.EAN8Reader {
   <init>(...);
   *** decodeMiddle(...);
}

-keep class com.google.zxing.oned.EAN8Writer
-keepclassmembers class com.google.zxing.oned.EAN8Writer {
   <init>(...);
   *** encode(...);
}

-keep class com.google.zxing.oned.EANManufacturerOrgSupport
-keepclassmembers class com.google.zxing.oned.EANManufacturerOrgSupport {
}

-keep class com.google.zxing.oned.ITFReader
-keepclassmembers class com.google.zxing.oned.ITFReader {
   <init>(...);
   *** decodeRow(...);
}

-keep class com.google.zxing.oned.ITFWriter
-keepclassmembers class com.google.zxing.oned.ITFWriter {
   <init>(...);
   *** encode(...);
}

-keep class com.google.zxing.oned.MultiFormatOneDReader
-keepclassmembers class com.google.zxing.oned.MultiFormatOneDReader {
   <init>(...);
   *** decodeRow(...);
}

-keep class com.google.zxing.oned.MultiFormatUPCEANReader
-keepclassmembers class com.google.zxing.oned.MultiFormatUPCEANReader {
   <init>(...);
   *** decodeRow(...);
}

-keep class com.google.zxing.oned.OneDimensionalCodeWriter
-keepclassmembers class com.google.zxing.oned.OneDimensionalCodeWriter {
   <init>(...);
   *** getDefaultMargin(...);
   *** appendPattern(...);
   *** encode(...);
   *** encode(...);
   *** encode(...);
}

-keep class com.google.zxing.oned.OneDimensionalCodeWriter
-keepclassmembers class com.google.zxing.oned.OneDimensionalCodeWriter {
   *** encode(...);
}

-keep class com.google.zxing.oned.OneDReader
-keepclassmembers class com.google.zxing.oned.OneDReader {
   <init>(...);
   *** decode(...);
   *** decode(...);
   *** decodeRow(...);
   *** patternMatchVariance(...);
   *** recordPattern(...);
   *** recordPatternInReverse(...);
   *** reset(...);
}

-keep class com.google.zxing.oned.OneDReader
-keepclassmembers class com.google.zxing.oned.OneDReader {
   *** decodeRow(...);
}

-keep class com.google.zxing.oned.UPCAReader
-keepclassmembers class com.google.zxing.oned.UPCAReader {
   <init>(...);
   *** decodeMiddle(...);
}

-keep class com.google.zxing.oned.UPCAWriter
-keepclassmembers class com.google.zxing.oned.UPCAWriter {
   <init>(...);
   *** encode(...);
   *** encode(...);
}

-keep class com.google.zxing.oned.UPCEANExtension2Support
-keepclassmembers class com.google.zxing.oned.UPCEANExtension2Support {
}

-keep class com.google.zxing.oned.UPCEANExtension5Support
-keepclassmembers class com.google.zxing.oned.UPCEANExtension5Support {
}

-keep class com.google.zxing.oned.UPCEANExtensionSupport
-keepclassmembers class com.google.zxing.oned.UPCEANExtensionSupport {
}

-keep class com.google.zxing.oned.UPCEANReader
-keepclassmembers class com.google.zxing.oned.UPCEANReader {
   <init>(...);
   *** decodeMiddle(...);
   *** decodeRow(...);
   *** decodeRow(...);
}

-keep class com.google.zxing.oned.UPCEANReader
-keepclassmembers class com.google.zxing.oned.UPCEANReader {
   *** decodeMiddle(...);
}

-keep class com.google.zxing.oned.UPCEANWriter
-keepclassmembers class com.google.zxing.oned.UPCEANWriter {
   <init>(...);
}

-keep class com.google.zxing.oned.UPCEANWriter
-keepclassmembers class com.google.zxing.oned.UPCEANWriter {
   *** encode(...);
}

-keep class com.google.zxing.oned.UPCEReader
-keepclassmembers class com.google.zxing.oned.UPCEReader {
   <init>(...);
   *** checkChecksum(...);
   *** convertUPCEtoUPCA(...);
   *** decodeEnd(...);
   *** decodeMiddle(...);
}

-keep class com.google.zxing.oned.UPCEWriter
-keepclassmembers class com.google.zxing.oned.UPCEWriter {
   <init>(...);
   *** encode(...);
}

-keep class com.google.zxing.oned.rss.AbstractRSSReader
-keepclassmembers class com.google.zxing.oned.rss.AbstractRSSReader {
   <init>(...);
   *** count(...);
   *** decrement(...);
   *** getDataCharacterCounters(...);
   *** getDecodeFinderCounters(...);
   *** getEvenCounts(...);
   *** getEvenRoundingErrors(...);
   *** getOddCounts(...);
   *** getOddRoundingErrors(...);
   *** increment(...);
   *** isFinderPattern(...);
   *** parseFinderValue(...);
}

-keep class com.google.zxing.oned.rss.AbstractRSSReader
-keepclassmembers class com.google.zxing.oned.rss.AbstractRSSReader {
   *** decodeRow(...);
}

-keep class com.google.zxing.oned.rss.DataCharacter
-keepclassmembers class com.google.zxing.oned.rss.DataCharacter {
   <init>(...);
   *** getChecksumPortion(...);
   *** getValue(...);
   *** equals(...);
   *** hashCode(...);
   *** toString(...);
}

-keep class com.google.zxing.oned.rss.FinderPattern
-keepclassmembers class com.google.zxing.oned.rss.FinderPattern {
   <init>(...);
   *** getValue(...);
   *** getResultPoints(...);
   *** getStartEnd(...);
}

-keep class com.google.zxing.oned.rss.Pair
-keepclassmembers class com.google.zxing.oned.rss.Pair {
}

-keep class com.google.zxing.oned.rss.RSS14Reader
-keepclassmembers class com.google.zxing.oned.rss.RSS14Reader {
   <init>(...);
   *** decodeRow(...);
}

-keep class com.google.zxing.oned.rss.RSSUtils
-keepclassmembers class com.google.zxing.oned.rss.RSSUtils {
   *** getRSSvalue(...);
}

-keep class com.google.zxing.oned.rss.expanded.BitArrayBuilder
-keepclassmembers class com.google.zxing.oned.rss.expanded.BitArrayBuilder {
}

-keep class com.google.zxing.oned.rss.expanded.ExpandedPair
-keepclassmembers class com.google.zxing.oned.rss.expanded.ExpandedPair {
   *** mustBeLast(...);
}

-keep class com.google.zxing.oned.rss.expanded.ExpandedRow
-keepclassmembers class com.google.zxing.oned.rss.expanded.ExpandedRow {
}

-keep class com.google.zxing.oned.rss.expanded.RSSExpandedReader
-keepclassmembers class com.google.zxing.oned.rss.expanded.RSSExpandedReader {
   <init>(...);
   *** decodeRow(...);
}

-keep class com.google.zxing.oned.rss.expanded.decoders.AbstractExpandedDecoder
-keepclassmembers class com.google.zxing.oned.rss.expanded.decoders.AbstractExpandedDecoder {
   *** getGeneralDecoder(...);
   *** getInformation(...);
   *** createDecoder(...);
   *** parseInformation(...);
}

-keep class com.google.zxing.oned.rss.expanded.decoders.AbstractExpandedDecoder
-keepclassmembers class com.google.zxing.oned.rss.expanded.decoders.AbstractExpandedDecoder {
   *** parseInformation(...);
}

-keep class com.google.zxing.oned.rss.expanded.decoders.AI013103decoder
-keepclassmembers class com.google.zxing.oned.rss.expanded.decoders.AI013103decoder {
   *** addWeightCode(...);
   *** checkWeight(...);
}

-keep class com.google.zxing.oned.rss.expanded.decoders.AI01320xDecoder
-keepclassmembers class com.google.zxing.oned.rss.expanded.decoders.AI01320xDecoder {
   *** addWeightCode(...);
   *** checkWeight(...);
}

-keep class com.google.zxing.oned.rss.expanded.decoders.AI01392xDecoder
-keepclassmembers class com.google.zxing.oned.rss.expanded.decoders.AI01392xDecoder {
   *** parseInformation(...);
}

-keep class com.google.zxing.oned.rss.expanded.decoders.AI01393xDecoder
-keepclassmembers class com.google.zxing.oned.rss.expanded.decoders.AI01393xDecoder {
   *** parseInformation(...);
}

-keep class com.google.zxing.oned.rss.expanded.decoders.AI013x0x1xDecoder
-keepclassmembers class com.google.zxing.oned.rss.expanded.decoders.AI013x0x1xDecoder {
   *** addWeightCode(...);
   *** checkWeight(...);
   *** parseInformation(...);
}

-keep class com.google.zxing.oned.rss.expanded.decoders.AI013x0xDecoder
-keepclassmembers class com.google.zxing.oned.rss.expanded.decoders.AI013x0xDecoder {
   *** parseInformation(...);
}

-keep class com.google.zxing.oned.rss.expanded.decoders.AI013x0xDecoder
-keepclassmembers class com.google.zxing.oned.rss.expanded.decoders.AI013x0xDecoder {
   *** addWeightCode(...);
   *** checkWeight(...);
}

-keep class com.google.zxing.oned.rss.expanded.decoders.AI01AndOtherAIs
-keepclassmembers class com.google.zxing.oned.rss.expanded.decoders.AI01AndOtherAIs {
   *** parseInformation(...);
}

-keep class com.google.zxing.oned.rss.expanded.decoders.AI01decoder
-keepclassmembers class com.google.zxing.oned.rss.expanded.decoders.AI01decoder {
}

-keep class com.google.zxing.oned.rss.expanded.decoders.AI01decoder
-keepclassmembers class com.google.zxing.oned.rss.expanded.decoders.AI01decoder {
   *** parseInformation(...);
}

-keep class com.google.zxing.oned.rss.expanded.decoders.AI01weightDecoder
-keepclassmembers class com.google.zxing.oned.rss.expanded.decoders.AI01weightDecoder {
   *** addWeightCode(...);
   *** checkWeight(...);
}

-keep class com.google.zxing.oned.rss.expanded.decoders.AI01weightDecoder
-keepclassmembers class com.google.zxing.oned.rss.expanded.decoders.AI01weightDecoder {
   *** addWeightCode(...);
   *** checkWeight(...);
   *** parseInformation(...);
}

-keep class com.google.zxing.oned.rss.expanded.decoders.AnyAIDecoder
-keepclassmembers class com.google.zxing.oned.rss.expanded.decoders.AnyAIDecoder {
   *** parseInformation(...);
}

-keep class com.google.zxing.oned.rss.expanded.decoders.BlockParsedResult
-keepclassmembers class com.google.zxing.oned.rss.expanded.decoders.BlockParsedResult {
}

-keep class com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState
-keepclassmembers class com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState {
}

-keep class com.google.zxing.oned.rss.expanded.decoders.DecodedChar
-keepclassmembers class com.google.zxing.oned.rss.expanded.decoders.DecodedChar {
}

-keep class com.google.zxing.oned.rss.expanded.decoders.DecodedInformation
-keepclassmembers class com.google.zxing.oned.rss.expanded.decoders.DecodedInformation {
}

-keep class com.google.zxing.oned.rss.expanded.decoders.DecodedNumeric
-keepclassmembers class com.google.zxing.oned.rss.expanded.decoders.DecodedNumeric {
}

-keep class com.google.zxing.oned.rss.expanded.decoders.DecodedObject
-keepclassmembers class com.google.zxing.oned.rss.expanded.decoders.DecodedObject {
}

-keep class com.google.zxing.oned.rss.expanded.decoders.DecodedObject
-keepclassmembers class com.google.zxing.oned.rss.expanded.decoders.DecodedObject {
}

-keep class com.google.zxing.oned.rss.expanded.decoders.FieldParser
-keepclassmembers class com.google.zxing.oned.rss.expanded.decoders.FieldParser {
}

-keep class com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder
-keepclassmembers class com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder {
}

-keep class com.google.zxing.multi.ByQuadrantReader
-keepclassmembers class com.google.zxing.multi.ByQuadrantReader {
   <init>(...);
   *** decode(...);
   *** decode(...);
   *** reset(...);
}

-keep class com.google.zxing.multi.GenericMultipleBarcodeReader
-keepclassmembers class com.google.zxing.multi.GenericMultipleBarcodeReader {
   <init>(...);
   *** decodeMultiple(...);
   *** decodeMultiple(...);
}

-keep class com.google.zxing.multi.MultipleBarcodeReader
-keepclassmembers class com.google.zxing.multi.MultipleBarcodeReader {
}

-keep class com.google.zxing.multi.qrcode.QRCodeMultiReader
-keepclassmembers class com.google.zxing.multi.qrcode.QRCodeMultiReader {
   <init>(...);
   *** decodeMultiple(...);
   *** decodeMultiple(...);
}

-keep class com.google.zxing.multi.qrcode.detector.MultiDetector
-keepclassmembers class com.google.zxing.multi.qrcode.detector.MultiDetector {
   <init>(...);
   *** detectMulti(...);
}

-keep class com.google.zxing.multi.qrcode.detector.MultiFinderPatternFinder
-keepclassmembers class com.google.zxing.multi.qrcode.detector.MultiFinderPatternFinder {
   *** findMulti(...);
}

-keep class com.google.zxing.maxicode.MaxiCodeReader
-keepclassmembers class com.google.zxing.maxicode.MaxiCodeReader {
   <init>(...);
   *** decode(...);
   *** decode(...);
   *** reset(...);
}

-keep class com.google.zxing.maxicode.decoder.BitMatrixParser
-keepclassmembers class com.google.zxing.maxicode.decoder.BitMatrixParser {
}

-keep class com.google.zxing.maxicode.decoder.DecodedBitStreamParser
-keepclassmembers class com.google.zxing.maxicode.decoder.DecodedBitStreamParser {
}

-keep class com.google.zxing.maxicode.decoder.Decoder
-keepclassmembers class com.google.zxing.maxicode.decoder.Decoder {
   <init>(...);
   *** decode(...);
   *** decode(...);
}

-keep class com.google.zxing.datamatrix.DataMatrixReader
-keepclassmembers class com.google.zxing.datamatrix.DataMatrixReader {
   <init>(...);
   *** decode(...);
   *** decode(...);
   *** reset(...);
}

-keep class com.google.zxing.datamatrix.DataMatrixWriter
-keepclassmembers class com.google.zxing.datamatrix.DataMatrixWriter {
   <init>(...);
   *** encode(...);
   *** encode(...);
}

-keep class com.google.zxing.datamatrix.encoder.ASCIIEncoder
-keepclassmembers class com.google.zxing.datamatrix.encoder.ASCIIEncoder {
   *** getEncodingMode(...);
}

-keep class com.google.zxing.datamatrix.encoder.Base256Encoder
-keepclassmembers class com.google.zxing.datamatrix.encoder.Base256Encoder {
   *** getEncodingMode(...);
}

-keep class com.google.zxing.datamatrix.encoder.C40Encoder
-keepclassmembers class com.google.zxing.datamatrix.encoder.C40Encoder {
   *** getEncodingMode(...);
}

-keep class com.google.zxing.datamatrix.encoder.DataMatrixSymbolInfo144
-keepclassmembers class com.google.zxing.datamatrix.encoder.DataMatrixSymbolInfo144 {
}

-keep class com.google.zxing.datamatrix.encoder.DefaultPlacement
-keepclassmembers class com.google.zxing.datamatrix.encoder.DefaultPlacement {
   <init>(...);
   <init>(...);
   *** getBit(...);
   *** place(...);
}

-keep class com.google.zxing.datamatrix.encoder.EdifactEncoder
-keepclassmembers class com.google.zxing.datamatrix.encoder.EdifactEncoder {
   *** getEncodingMode(...);
}

-keep class com.google.zxing.datamatrix.encoder.EncoderContext
-keepclassmembers class com.google.zxing.datamatrix.encoder.EncoderContext {
   *** getCodewordCount(...);
   *** getCodewords(...);
   *** getCurrent(...);
   *** getCurrentChar(...);
   *** hasMoreCharacters(...);
   *** getMessage(...);
   *** getNewEncoding(...);
   *** getRemainingCharacters(...);
   *** getSymbolInfo(...);
   *** resetEncoderSignal(...);
   *** resetSymbolInfo(...);
   *** setSizeConstraints(...);
   *** setSkipAtEnd(...);
   *** setSymbolShape(...);
   *** signalEncoderChange(...);
   *** updateSymbolInfo(...);
   *** updateSymbolInfo(...);
   *** writeCodeword(...);
   *** writeCodewords(...);
}

-keep class com.google.zxing.datamatrix.encoder.ErrorCorrection
-keepclassmembers class com.google.zxing.datamatrix.encoder.ErrorCorrection {
   *** encodeECC200(...);
}

-keep class com.google.zxing.datamatrix.encoder.HighLevelEncoder
-keepclassmembers class com.google.zxing.datamatrix.encoder.HighLevelEncoder {
   *** determineConsecutiveDigitCount(...);
   *** encodeHighLevel(...);
   *** encodeHighLevel(...);
}

-keep class com.google.zxing.datamatrix.encoder.Encoder
-keepclassmembers class com.google.zxing.datamatrix.encoder.Encoder {
}

-keep class com.google.zxing.datamatrix.encoder.SymbolInfo
-keepclassmembers class com.google.zxing.datamatrix.encoder.SymbolInfo {
   <init>(...);
   *** getCodewordCount(...);
   *** getDataCapacity(...);
   *** getErrorCodewords(...);
   *** getInterleavedBlockCount(...);
   *** getSymbolDataHeight(...);
   *** getSymbolDataWidth(...);
   *** getSymbolHeight(...);
   *** getSymbolWidth(...);
   *** getDataLengthForInterleavedBlock(...);
   *** getErrorLengthForInterleavedBlock(...);
   *** lookup(...);
   *** lookup(...);
   *** lookup(...);
   *** lookup(...);
   *** overrideSymbolSet(...);
   *** toString(...);
}

-keep class com.google.zxing.datamatrix.encoder.SymbolShapeHint
-keepclassmembers class com.google.zxing.datamatrix.encoder.SymbolShapeHint {
   *** valueOf(...);
   *** values(...);
}

-keep class com.google.zxing.datamatrix.encoder.TextEncoder
-keepclassmembers class com.google.zxing.datamatrix.encoder.TextEncoder {
   *** getEncodingMode(...);
}

-keep class com.google.zxing.datamatrix.encoder.X12Encoder
-keepclassmembers class com.google.zxing.datamatrix.encoder.X12Encoder {
   *** getEncodingMode(...);
}

-keep class com.google.zxing.datamatrix.detector.Detector
-keepclassmembers class com.google.zxing.datamatrix.detector.Detector {
   <init>(...);
   *** detect(...);
}

-keep class com.google.zxing.datamatrix.decoder.BitMatrixParser
-keepclassmembers class com.google.zxing.datamatrix.decoder.BitMatrixParser {
}

-keep class com.google.zxing.datamatrix.decoder.DataBlock
-keepclassmembers class com.google.zxing.datamatrix.decoder.DataBlock {
}

-keep class com.google.zxing.datamatrix.decoder.DecodedBitStreamParser
-keepclassmembers class com.google.zxing.datamatrix.decoder.DecodedBitStreamParser {
}

-keep class com.google.zxing.datamatrix.decoder.Decoder
-keepclassmembers class com.google.zxing.datamatrix.decoder.Decoder {
   <init>(...);
   *** decode(...);
   *** decode(...);
}

-keep class com.google.zxing.datamatrix.decoder.Version$ECB
-keepclassmembers class com.google.zxing.datamatrix.decoder.Version$ECB {
}

-keep class com.google.zxing.datamatrix.decoder.Version$ECBlocks
-keepclassmembers class com.google.zxing.datamatrix.decoder.Version$ECBlocks {
}

-keep class com.google.zxing.datamatrix.decoder.Version
-keepclassmembers class com.google.zxing.datamatrix.decoder.Version {
   *** getDataRegionSizeColumns(...);
   *** getDataRegionSizeRows(...);
   *** getSymbolSizeColumns(...);
   *** getSymbolSizeRows(...);
   *** getTotalCodewords(...);
   *** getVersionNumber(...);
   *** getVersionForDimensions(...);
}

-keep class com.google.zxing.common.BitArray
-keepclassmembers class com.google.zxing.common.BitArray {
   <init>(...);
   <init>(...);
   *** getSize(...);
   *** getSizeInBytes(...);
   *** appendBit(...);
   *** appendBitArray(...);
   *** appendBits(...);
   *** clear(...);
   *** clone(...);
   *** flip(...);
   *** get(...);
   *** getBitArray(...);
   *** getNextSet(...);
   *** getNextUnset(...);
   *** isRange(...);
   *** reverse(...);
   *** set(...);
   *** setBulk(...);
   *** setRange(...);
   *** toBytes(...);
   *** xor(...);
}

-keep class com.google.zxing.common.BitMatrix
-keepclassmembers class com.google.zxing.common.BitMatrix {
   <init>(...);
   <init>(...);
   *** getHeight(...);
   *** getRowSize(...);
   *** getWidth(...);
   *** clear(...);
   *** clone(...);
   *** flip(...);
   *** get(...);
   *** getBottomRightOnBit(...);
   *** getEnclosingRectangle(...);
   *** getRow(...);
   *** getTopLeftOnBit(...);
   *** parse(...);
   *** parse(...);
   *** rotate180(...);
   *** set(...);
   *** setRegion(...);
   *** setRow(...);
   *** toString(...);
   *** toString(...);
   *** unset(...);
   *** xor(...);
}

-keep class com.google.zxing.common.BitSource
-keepclassmembers class com.google.zxing.common.BitSource {
   <init>(...);
   *** getBitOffset(...);
   *** getByteOffset(...);
   *** available(...);
   *** readBits(...);
}

-keep class com.google.zxing.common.CharacterSetECI
-keepclassmembers class com.google.zxing.common.CharacterSetECI {
   *** getValue(...);
   *** getCharacterSetECIByName(...);
   *** getCharacterSetECIByValue(...);
   *** valueOf(...);
   *** values(...);
}

-keep class com.google.zxing.common.DecoderResult
-keepclassmembers class com.google.zxing.common.DecoderResult {
   <init>(...);
   <init>(...);
   *** getByteSegments(...);
   *** getECLevel(...);
   *** getErasures(...);
   *** setErasures(...);
   *** getErrorsCorrected(...);
   *** setErrorsCorrected(...);
   *** hasStructuredAppend(...);
   *** getNumBits(...);
   *** setNumBits(...);
   *** getOther(...);
   *** setOther(...);
   *** getStructuredAppendParity(...);
   *** getStructuredAppendSequenceNumber(...);
   *** getText(...);
   *** getRawBytes(...);
}

-keep class com.google.zxing.common.DefaultGridSampler
-keepclassmembers class com.google.zxing.common.DefaultGridSampler {
   <init>(...);
   *** sampleGrid(...);
}

-keep class com.google.zxing.common.DetectorResult
-keepclassmembers class com.google.zxing.common.DetectorResult {
   <init>(...);
   *** getBits(...);
   *** getPoints(...);
}

-keep class com.google.zxing.common.GlobalHistogramBinarizer
-keepclassmembers class com.google.zxing.common.GlobalHistogramBinarizer {
   <init>(...);
   *** getBlackMatrix(...);
   *** createBinarizer(...);
   *** getBlackRow(...);
}

-keep class com.google.zxing.common.GridSampler
-keepclassmembers class com.google.zxing.common.GridSampler {
   <init>(...);
   *** getInstance(...);
   *** checkAndNudgePoints(...);
   *** sampleGrid(...);
   *** setGridSampler(...);
}

-keep class com.google.zxing.common.GridSampler
-keepclassmembers class com.google.zxing.common.GridSampler {
   *** sampleGrid(...);
}

-keep class com.google.zxing.common.HybridBinarizer
-keepclassmembers class com.google.zxing.common.HybridBinarizer {
   <init>(...);
}

-keep class com.google.zxing.common.PerspectiveTransform
-keepclassmembers class com.google.zxing.common.PerspectiveTransform {
   *** quadrilateralToSquare(...);
   *** squareToQuadrilateral(...);
   *** transformPoints(...);
   *** transformPoints(...);
}

-keep class com.google.zxing.common.StringUtils
-keepclassmembers class com.google.zxing.common.StringUtils {
   *** guessEncoding(...);
}

-keep class com.google.zxing.common.reedsolomon.GenericGF
-keepclassmembers class com.google.zxing.common.reedsolomon.GenericGF {
   <init>(...);
   *** getGeneratorBase(...);
   *** getSize(...);
}

-keep class com.google.zxing.common.reedsolomon.GenericGFPoly
-keepclassmembers class com.google.zxing.common.reedsolomon.GenericGFPoly {
}

-keep class com.google.zxing.common.reedsolomon.ReedSolomonDecoder
-keepclassmembers class com.google.zxing.common.reedsolomon.ReedSolomonDecoder {
   <init>(...);
   *** decode(...);
}

-keep class com.google.zxing.common.reedsolomon.ReedSolomonEncoder
-keepclassmembers class com.google.zxing.common.reedsolomon.ReedSolomonEncoder {
   <init>(...);
   *** encode(...);
}

-keep class com.google.zxing.common.reedsolomon.ReedSolomonException
-keepclassmembers class com.google.zxing.common.reedsolomon.ReedSolomonException {
   <init>(...);
}

-keep class com.google.zxing.common.detector.MathUtils
-keepclassmembers class com.google.zxing.common.detector.MathUtils {
   *** distance(...);
   *** distance(...);
   *** round(...);
   *** sum(...);
}

-keep class com.google.zxing.common.detector.MonochromeRectangleDetector
-keepclassmembers class com.google.zxing.common.detector.MonochromeRectangleDetector {
   <init>(...);
   *** detect(...);
}

-keep class com.google.zxing.common.detector.WhiteRectangleDetector
-keepclassmembers class com.google.zxing.common.detector.WhiteRectangleDetector {
   <init>(...);
   <init>(...);
   *** detect(...);
}

-keep class com.google.zxing.client.result.AbstractDoCoMoResultParser
-keepclassmembers class com.google.zxing.client.result.AbstractDoCoMoResultParser {
}

-keep class com.google.zxing.client.result.AbstractDoCoMoResultParser
-keepclassmembers class com.google.zxing.client.result.AbstractDoCoMoResultParser {
   *** parse(...);
}

-keep class com.google.zxing.client.result.AddressBookAUResultParser
-keepclassmembers class com.google.zxing.client.result.AddressBookAUResultParser {
   <init>(...);
   *** parse(...);
}

-keep class com.google.zxing.client.result.AddressBookDoCoMoResultParser
-keepclassmembers class com.google.zxing.client.result.AddressBookDoCoMoResultParser {
   <init>(...);
   *** parse(...);
}

-keep class com.google.zxing.client.result.AddressBookParsedResult
-keepclassmembers class com.google.zxing.client.result.AddressBookParsedResult {
   <init>(...);
   *** getBirthday(...);
   *** getDisplayResult(...);
   *** getInstantMessenger(...);
   *** getNote(...);
   *** getOrg(...);
   *** getPronunciation(...);
   *** getTitle(...);
   *** getAddressTypes(...);
   *** getAddresses(...);
   *** getEmailTypes(...);
   *** getEmails(...);
   *** getGeo(...);
   *** getNames(...);
   *** getNicknames(...);
   *** getPhoneNumbers(...);
   *** getPhoneTypes(...);
   *** getURLs(...);
}

-keep class com.google.zxing.client.result.BizcardResultParser
-keepclassmembers class com.google.zxing.client.result.BizcardResultParser {
   <init>(...);
   *** parse(...);
}

-keep class com.google.zxing.client.result.BookmarkDoCoMoResultParser
-keepclassmembers class com.google.zxing.client.result.BookmarkDoCoMoResultParser {
   <init>(...);
   *** parse(...);
}

-keep class com.google.zxing.client.result.CalendarParsedResult
-keepclassmembers class com.google.zxing.client.result.CalendarParsedResult {
   <init>(...);
   *** getDescription(...);
   *** getDisplayResult(...);
   *** getEnd(...);
   *** getEndTimestamp(...);
   *** isEndAllDay(...);
   *** isStartAllDay(...);
   *** getLatitude(...);
   *** getLocation(...);
   *** getLongitude(...);
   *** getOrganizer(...);
   *** getStart(...);
   *** getStartTimestamp(...);
   *** getSummary(...);
   *** getAttendees(...);
}

-keep class com.google.zxing.client.result.EmailAddressParsedResult
-keepclassmembers class com.google.zxing.client.result.EmailAddressParsedResult {
   *** getBody(...);
   *** getDisplayResult(...);
   *** getEmailAddress(...);
   *** getMailtoURI(...);
   *** getSubject(...);
   *** getBCCs(...);
   *** getCCs(...);
   *** getTos(...);
}

-keep class com.google.zxing.client.result.EmailAddressResultParser
-keepclassmembers class com.google.zxing.client.result.EmailAddressResultParser {
   <init>(...);
   *** parse(...);
}

-keep class com.google.zxing.client.result.EmailDoCoMoResultParser
-keepclassmembers class com.google.zxing.client.result.EmailDoCoMoResultParser {
   <init>(...);
   *** parse(...);
}

-keep class com.google.zxing.client.result.ExpandedProductParsedResult
-keepclassmembers class com.google.zxing.client.result.ExpandedProductParsedResult {
   *** getBestBeforeDate(...);
   *** getDisplayResult(...);
   *** getExpirationDate(...);
   *** getLotNumber(...);
   *** getPackagingDate(...);
   *** getPrice(...);
   *** getPriceCurrency(...);
   *** getPriceIncrement(...);
   *** getProductID(...);
   *** getProductionDate(...);
   *** getRawText(...);
   *** getSscc(...);
   *** getUncommonAIs(...);
   *** getWeight(...);
   *** getWeightIncrement(...);
   *** getWeightType(...);
}

-keep class com.google.zxing.client.result.ExpandedProductResultParser
-keepclassmembers class com.google.zxing.client.result.ExpandedProductResultParser {
   <init>(...);
   *** parse(...);
}

-keep class com.google.zxing.client.result.GeoParsedResult
-keepclassmembers class com.google.zxing.client.result.GeoParsedResult {
   *** getAltitude(...);
   *** getDisplayResult(...);
   *** getGeoURI(...);
   *** getLatitude(...);
   *** getLongitude(...);
   *** getQuery(...);
}

-keep class com.google.zxing.client.result.GeoResultParser
-keepclassmembers class com.google.zxing.client.result.GeoResultParser {
   <init>(...);
   *** parse(...);
}

-keep class com.google.zxing.client.result.ISBNParsedResult
-keepclassmembers class com.google.zxing.client.result.ISBNParsedResult {
   *** getDisplayResult(...);
   *** getISBN(...);
}

-keep class com.google.zxing.client.result.ISBNResultParser
-keepclassmembers class com.google.zxing.client.result.ISBNResultParser {
   <init>(...);
   *** parse(...);
}

-keep class com.google.zxing.client.result.ParsedResult
-keepclassmembers class com.google.zxing.client.result.ParsedResult {
   <init>(...);
   *** getDisplayResult(...);
   *** getType(...);
   *** maybeAppend(...);
   *** maybeAppend(...);
   *** toString(...);
}

-keep class com.google.zxing.client.result.ParsedResult
-keepclassmembers class com.google.zxing.client.result.ParsedResult {
   *** getDisplayResult(...);
}

-keep class com.google.zxing.client.result.ParsedResultType
-keepclassmembers class com.google.zxing.client.result.ParsedResultType {
   *** valueOf(...);
   *** values(...);
}

-keep class com.google.zxing.client.result.ProductParsedResult
-keepclassmembers class com.google.zxing.client.result.ProductParsedResult {
   *** getDisplayResult(...);
   *** getNormalizedProductID(...);
   *** getProductID(...);
}

-keep class com.google.zxing.client.result.ProductResultParser
-keepclassmembers class com.google.zxing.client.result.ProductResultParser {
   <init>(...);
   *** parse(...);
}

-keep class com.google.zxing.client.result.ResultParser
-keepclassmembers class com.google.zxing.client.result.ResultParser {
   <init>(...);
   *** getMassagedText(...);
   *** isStringOfDigits(...);
   *** isSubstringOfDigits(...);
   *** maybeAppend(...);
   *** maybeAppend(...);
   *** maybeWrap(...);
   *** parse(...);
   *** parseHexDigit(...);
   *** parseResult(...);
   *** unescapeBackslash(...);
}

-keep class com.google.zxing.client.result.ResultParser
-keepclassmembers class com.google.zxing.client.result.ResultParser {
   *** parse(...);
}

-keep class com.google.zxing.client.result.SMSMMSResultParser
-keepclassmembers class com.google.zxing.client.result.SMSMMSResultParser {
   <init>(...);
   *** parse(...);
}

-keep class com.google.zxing.client.result.SMSParsedResult
-keepclassmembers class com.google.zxing.client.result.SMSParsedResult {
   <init>(...);
   <init>(...);
   *** getBody(...);
   *** getDisplayResult(...);
   *** getSMSURI(...);
   *** getSubject(...);
   *** getNumbers(...);
   *** getVias(...);
}

-keep class com.google.zxing.client.result.SMSTOMMSTOResultParser
-keepclassmembers class com.google.zxing.client.result.SMSTOMMSTOResultParser {
   <init>(...);
   *** parse(...);
}

-keep class com.google.zxing.client.result.SMTPResultParser
-keepclassmembers class com.google.zxing.client.result.SMTPResultParser {
   <init>(...);
   *** parse(...);
}

-keep class com.google.zxing.client.result.TelParsedResult
-keepclassmembers class com.google.zxing.client.result.TelParsedResult {
   <init>(...);
   *** getDisplayResult(...);
   *** getNumber(...);
   *** getTelURI(...);
   *** getTitle(...);
}

-keep class com.google.zxing.client.result.TelResultParser
-keepclassmembers class com.google.zxing.client.result.TelResultParser {
   <init>(...);
   *** parse(...);
}

-keep class com.google.zxing.client.result.TextParsedResult
-keepclassmembers class com.google.zxing.client.result.TextParsedResult {
   <init>(...);
   *** getDisplayResult(...);
   *** getLanguage(...);
   *** getText(...);
}

-keep class com.google.zxing.client.result.URIParsedResult
-keepclassmembers class com.google.zxing.client.result.URIParsedResult {
   <init>(...);
   *** getDisplayResult(...);
   *** isPossiblyMaliciousURI(...);
   *** getTitle(...);
   *** getURI(...);
}

-keep class com.google.zxing.client.result.URIResultParser
-keepclassmembers class com.google.zxing.client.result.URIResultParser {
   <init>(...);
   *** parse(...);
}

-keep class com.google.zxing.client.result.URLTOResultParser
-keepclassmembers class com.google.zxing.client.result.URLTOResultParser {
   <init>(...);
   *** parse(...);
}

-keep class com.google.zxing.client.result.VCardResultParser
-keepclassmembers class com.google.zxing.client.result.VCardResultParser {
   <init>(...);
   *** parse(...);
}

-keep class com.google.zxing.client.result.VEventResultParser
-keepclassmembers class com.google.zxing.client.result.VEventResultParser {
   <init>(...);
   *** parse(...);
}

-keep class com.google.zxing.client.result.VINParsedResult
-keepclassmembers class com.google.zxing.client.result.VINParsedResult {
   <init>(...);
   *** getCountryCode(...);
   *** getDisplayResult(...);
   *** getModelYear(...);
   *** getPlantCode(...);
   *** getSequentialNumber(...);
   *** getVIN(...);
   *** getVehicleAttributes(...);
   *** getVehicleDescriptorSection(...);
   *** getVehicleIdentifierSection(...);
   *** getWorldManufacturerID(...);
}

-keep class com.google.zxing.client.result.VINResultParser
-keepclassmembers class com.google.zxing.client.result.VINResultParser {
   <init>(...);
   *** parse(...);
}

-keep class com.google.zxing.client.result.WifiParsedResult
-keepclassmembers class com.google.zxing.client.result.WifiParsedResult {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getAnonymousIdentity(...);
   *** getDisplayResult(...);
   *** getEapMethod(...);
   *** getIdentity(...);
   *** isHidden(...);
   *** getNetworkEncryption(...);
   *** getPassword(...);
   *** getPhase2Method(...);
   *** getSsid(...);
}

-keep class com.google.zxing.client.result.WifiResultParser
-keepclassmembers class com.google.zxing.client.result.WifiResultParser {
   <init>(...);
   *** parse(...);
}

-keep class com.google.zxing.aztec.AztecDetectorResult
-keepclassmembers class com.google.zxing.aztec.AztecDetectorResult {
   <init>(...);
   *** isCompact(...);
   *** getNbDatablocks(...);
   *** getNbLayers(...);
}

-keep class com.google.zxing.aztec.AztecReader
-keepclassmembers class com.google.zxing.aztec.AztecReader {
   <init>(...);
   *** decode(...);
   *** decode(...);
   *** reset(...);
}

-keep class com.google.zxing.aztec.AztecWriter
-keepclassmembers class com.google.zxing.aztec.AztecWriter {
   <init>(...);
   *** encode(...);
   *** encode(...);
}

-keep class com.google.zxing.aztec.encoder.AztecCode
-keepclassmembers class com.google.zxing.aztec.encoder.AztecCode {
   <init>(...);
   *** getCodeWords(...);
   *** setCodeWords(...);
   *** isCompact(...);
   *** setCompact(...);
   *** getLayers(...);
   *** setLayers(...);
   *** getMatrix(...);
   *** setMatrix(...);
   *** getSize(...);
   *** setSize(...);
}

-keep class com.google.zxing.aztec.encoder.BinaryShiftToken
-keepclassmembers class com.google.zxing.aztec.encoder.BinaryShiftToken {
   *** appendTo(...);
}

-keep class com.google.zxing.aztec.encoder.Encoder
-keepclassmembers class com.google.zxing.aztec.encoder.Encoder {
   *** encode(...);
   *** encode(...);
}

-keep class com.google.zxing.aztec.encoder.HighLevelEncoder
-keepclassmembers class com.google.zxing.aztec.encoder.HighLevelEncoder {
   <init>(...);
   *** encode(...);
}

-keep class com.google.zxing.aztec.encoder.SimpleToken
-keepclassmembers class com.google.zxing.aztec.encoder.SimpleToken {
}

-keep class com.google.zxing.aztec.encoder.State
-keepclassmembers class com.google.zxing.aztec.encoder.State {
}

-keep class com.google.zxing.aztec.encoder.Token
-keepclassmembers class com.google.zxing.aztec.encoder.Token {
}

-keep class com.google.zxing.aztec.encoder.Token
-keepclassmembers class com.google.zxing.aztec.encoder.Token {
}

-keep class com.google.zxing.aztec.detector.Detector$Point
-keepclassmembers class com.google.zxing.aztec.detector.Detector$Point {
}

-keep class com.google.zxing.aztec.detector.Detector
-keepclassmembers class com.google.zxing.aztec.detector.Detector {
   <init>(...);
   *** detect(...);
   *** detect(...);
}

-keep class com.google.zxing.aztec.decoder.Decoder
-keepclassmembers class com.google.zxing.aztec.decoder.Decoder {
   <init>(...);
   *** decode(...);
   *** highLevelDecode(...);
}

# ACW for Plugin.FacebookClient
# ACW for Xamarin.Facebook.Android
-keep class com.facebook.BuildConfig
-keepclassmembers class com.facebook.BuildConfig {
   <init>(...);
}

-keep class com.facebook.all.All
-keepclassmembers class com.facebook.all.All {
   <init>(...);
}

# ACW for Xamarin.Facebook.AppLinks.Android
-keep class com.facebook.applinks.AppLinkData$CompletionHandler
-keepclassmembers class com.facebook.applinks.AppLinkData$CompletionHandler {
}

-keep class com.facebook.applinks.AppLinkData
-keepclassmembers class com.facebook.applinks.AppLinkData {
   *** getArgumentBundle(...);
   *** isAutoAppLink(...);
   *** getPromotionCode(...);
   *** getRef(...);
   *** getRefererData(...);
   *** getTargetUri(...);
   *** createFromActivity(...);
   *** createFromAlApplinkData(...);
   *** fetchDeferredAppLinkData(...);
   *** fetchDeferredAppLinkData(...);
   *** getAppLinkData(...);
}

-keep class com.facebook.applinks.AppLinks
-keepclassmembers class com.facebook.applinks.AppLinks {
}

-keep class com.facebook.applinks.BuildConfig
-keepclassmembers class com.facebook.applinks.BuildConfig {
   <init>(...);
}

-keep class com.facebook.applinks.FacebookAppLinkResolver
-keepclassmembers class com.facebook.applinks.FacebookAppLinkResolver {
   <init>(...);
   *** getAppLinkFromUrlInBackground(...);
   *** getAppLinkFromUrlsInBackground(...);
}

# ACW for Xamarin.Facebook.Common.Android
-keep class com.facebook.AccessTokenTracker
-keepclassmembers class com.facebook.AccessTokenTracker {
   <init>(...);
   *** isTracking(...);
   *** onCurrentAccessTokenChanged(...);
   *** startTracking(...);
   *** stopTracking(...);
}

-keep class com.facebook.AccessTokenTracker
-keepclassmembers class com.facebook.AccessTokenTracker {
   *** onCurrentAccessTokenChanged(...);
}

-keep class com.facebook.CustomTabActivity
-keepclassmembers class com.facebook.CustomTabActivity {
   <init>(...);
}

-keep class com.facebook.CustomTabMainActivity
-keepclassmembers class com.facebook.CustomTabMainActivity {
   <init>(...);
}

-keep class com.facebook.FacebookActivity
-keepclassmembers class com.facebook.FacebookActivity {
   <init>(...);
   *** getCurrentFragment(...);
   *** getFragment(...);
   *** onCreate(...);
}

-keep class com.facebook.FacebookAuthorizationException
-keepclassmembers class com.facebook.FacebookAuthorizationException {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class com.facebook.FacebookButtonBase
-keepclassmembers class com.facebook.FacebookButtonBase {
   <init>(...);
   *** getActivity(...);
   *** getDefaultRequestCode(...);
   *** getDefaultStyleResource(...);
   *** getFragment(...);
   *** setFragment(...);
   *** getNativeFragment(...);
   *** getRequestCode(...);
   *** callExternalOnClickListener(...);
   *** configureButton(...);
   *** measureTextWidth(...);
   *** setFragment(...);
   *** setInternalOnClickListener(...);
}

-keep class com.facebook.FacebookButtonBase
-keepclassmembers class com.facebook.FacebookButtonBase {
   *** getDefaultRequestCode(...);
}

-keep class com.facebook.FacebookDialogException
-keepclassmembers class com.facebook.FacebookDialogException {
   <init>(...);
   *** getErrorCode(...);
   *** getFailingUrl(...);
   *** toString(...);
}

-keep class com.facebook.FacebookCallback
-keepclassmembers class com.facebook.FacebookCallback {
}

-keep class com.facebook.FacebookDialog
-keepclassmembers class com.facebook.FacebookDialog {
}

-keep class com.facebook.LoginStatusCallback
-keepclassmembers class com.facebook.LoginStatusCallback {
}

-keep class com.facebook.ShareGraphRequest
-keepclassmembers class com.facebook.ShareGraphRequest {
   <init>(...);
   *** createOpenGraphObject(...);
}

-keep class com.facebook.WebDialog
-keepclassmembers class com.facebook.WebDialog {
   *** getWebDialogTheme(...);
   *** setWebDialogTheme(...);
}

-keep class com.facebook.login.CustomTabLoginMethodHandler
-keepclassmembers class com.facebook.login.CustomTabLoginMethodHandler {
   *** getRedirectUrl(...);
   *** getSSODevice(...);
   *** describeContents(...);
   *** putChallengeParam(...);
   *** writeToParcel(...);
}

-keep class com.facebook.login.CustomTabPrefetchHelper
-keepclassmembers class com.facebook.login.CustomTabPrefetchHelper {
   <init>(...);
   *** getPreparedSessionOnce(...);
   *** mayLaunchUrl(...);
   *** onCustomTabsServiceConnected(...);
   *** onServiceDisconnected(...);
}

-keep class com.facebook.login.DeviceAuthDialog
-keepclassmembers class com.facebook.login.DeviceAuthDialog {
   <init>(...);
   *** getLayoutResId(...);
   *** initializeContentView(...);
   *** onCancel(...);
   *** onError(...);
}

-keep class com.facebook.login.LoginBehavior
-keepclassmembers class com.facebook.login.LoginBehavior {
   *** valueOf(...);
   *** values(...);
}

-keep class com.facebook.login.LoginFragment
-keepclassmembers class com.facebook.login.LoginFragment {
   <init>(...);
   *** getLayoutResId(...);
}

-keep class com.facebook.login.LoginManager
-keepclassmembers class com.facebook.login.LoginManager {
   *** getAuthType(...);
   *** getDefaultAudience(...);
   *** getInstance(...);
   *** getLoginBehavior(...);
   *** logIn(...);
   *** logIn(...);
   *** logIn(...);
   *** logIn(...);
   *** logInWithPublishPermissions(...);
   *** logInWithPublishPermissions(...);
   *** logInWithPublishPermissions(...);
   *** logInWithReadPermissions(...);
   *** logInWithReadPermissions(...);
   *** logInWithReadPermissions(...);
   *** logOut(...);
   *** reauthorizeDataAccess(...);
   *** reauthorizeDataAccess(...);
   *** registerCallback(...);
   *** resolveError(...);
   *** resolveError(...);
   *** resolveError(...);
   *** retrieveLoginStatus(...);
   *** retrieveLoginStatus(...);
   *** setAuthType(...);
   *** setDefaultAudience(...);
   *** setLoginBehavior(...);
   *** unregisterCallback(...);
}

-keep class com.facebook.login.LoginMethodHandler
-keepclassmembers class com.facebook.login.LoginMethodHandler {
   *** addLoggingExtra(...);
   *** createAccessTokenFromWebBundle(...);
   *** getClientState(...);
   *** logWebLoginCompleted(...);
   *** writeToParcel(...);
   *** describeContents(...);
}

-keep class com.facebook.login.LoginMethodHandler
-keepclassmembers class com.facebook.login.LoginMethodHandler {
   *** describeContents(...);
}

-keep class com.facebook.login.LoginResult
-keepclassmembers class com.facebook.login.LoginResult {
   <init>(...);
   *** getAccessToken(...);
   *** getRecentlyDeniedPermissions(...);
   *** getRecentlyGrantedPermissions(...);
}

-keep class com.facebook.login.WebLoginMethodHandler
-keepclassmembers class com.facebook.login.WebLoginMethodHandler {
   *** getRedirectUrl(...);
   *** getSSODevice(...);
}

-keep class com.facebook.login.WebLoginMethodHandler
-keepclassmembers class com.facebook.login.WebLoginMethodHandler {
   *** describeContents(...);
}

-keep class com.facebook.internal.AppCall
-keepclassmembers class com.facebook.internal.AppCall {
   <init>(...);
   <init>(...);
   *** getCallId(...);
   *** getCurrentPendingCall(...);
   *** getRequestCode(...);
   *** setRequestCode(...);
   *** getRequestIntent(...);
   *** setRequestIntent(...);
   *** finishPendingCall(...);
   *** setPending(...);
}

-keep class com.facebook.internal.CustomTab
-keepclassmembers class com.facebook.internal.CustomTab {
   <init>(...);
   *** getURIForAction(...);
   *** openCustomTab(...);
}

-keep class com.facebook.internal.CustomTabUtils
-keepclassmembers class com.facebook.internal.CustomTabUtils {
   <init>(...);
   *** getChromePackage(...);
   *** getDefaultRedirectURI(...);
}

-keep class com.facebook.internal.DialogPresenter$ParameterProvider
-keepclassmembers class com.facebook.internal.DialogPresenter$ParameterProvider {
}

-keep class com.facebook.internal.DialogPresenter
-keepclassmembers class com.facebook.internal.DialogPresenter {
   <init>(...);
   *** canPresentNativeDialogWithFeature(...);
   *** canPresentWebFallbackDialogWithFeature(...);
   *** getProtocolVersionForNativeDialog(...);
   *** logDialogActivity(...);
   *** present(...);
   *** present(...);
   *** setupAppCallForCannotShowError(...);
   *** setupAppCallForCustomTabDialog(...);
   *** setupAppCallForErrorResult(...);
   *** setupAppCallForNativeDialog(...);
   *** setupAppCallForValidationError(...);
   *** setupAppCallForWebDialog(...);
   *** setupAppCallForWebFallbackDialog(...);
}

-keep class com.facebook.internal.FacebookDialogBase$ModeHandler
-keepclassmembers class com.facebook.internal.FacebookDialogBase$ModeHandler {
   <init>(...);
   *** getMode(...);
}

-keep class com.facebook.internal.FacebookDialogBase$ModeHandler
-keepclassmembers class com.facebook.internal.FacebookDialogBase$ModeHandler {
}

-keep class com.facebook.internal.FacebookDialogBase
-keepclassmembers class com.facebook.internal.FacebookDialogBase {
   <init>(...);
   <init>(...);
   *** getActivityContext(...);
   *** getRequestCode(...);
   *** canShow(...);
   *** canShowImpl(...);
   *** createBaseAppCall(...);
   *** getOrderedModeHandlers(...);
   *** registerCallback(...);
   *** registerCallback(...);
   *** registerCallbackImpl(...);
   *** setRequestCode(...);
   *** show(...);
   *** showImpl(...);
   *** startActivityForResult(...);
}

-keep class com.facebook.internal.FacebookDialogBase
-keepclassmembers class com.facebook.internal.FacebookDialogBase {
   *** createBaseAppCall(...);
   *** getOrderedModeHandlers(...);
   *** registerCallbackImpl(...);
}

-keep class com.facebook.internal.FacebookDialogFragment
-keepclassmembers class com.facebook.internal.FacebookDialogFragment {
   <init>(...);
   *** setDialog(...);
}

-keep class com.facebook.internal.FacebookWebFallbackDialog
-keepclassmembers class com.facebook.internal.FacebookWebFallbackDialog {
   *** newInstance(...);
}

-keep class com.facebook.internal.FragmentWrapper
-keepclassmembers class com.facebook.internal.FragmentWrapper {
   <init>(...);
   <init>(...);
   *** getActivity(...);
   *** getNativeFragment(...);
   *** getSupportFragment(...);
   *** startActivityForResult(...);
}

-keep class com.facebook.internal.DialogFeature
-keepclassmembers class com.facebook.internal.DialogFeature {
}

-keep class com.facebook.internal.PlatformServiceClient$CompletedListener
-keepclassmembers class com.facebook.internal.PlatformServiceClient$CompletedListener {
}

-keep class mono.com.facebook.internal.PlatformServiceClient_CompletedListenerImplementor
-keepclassmembers class mono.com.facebook.internal.PlatformServiceClient_CompletedListenerImplementor {
}

-keep class com.facebook.internal.PlatformServiceClient
-keepclassmembers class com.facebook.internal.PlatformServiceClient {
   <init>(...);
   *** getContext(...);
   *** cancel(...);
   *** handleMessage(...);
   *** onServiceConnected(...);
   *** onServiceDisconnected(...);
   *** populateRequestBundle(...);
   *** setCompletedListener(...);
   *** start(...);
}

-keep class com.facebook.internal.PlatformServiceClient
-keepclassmembers class com.facebook.internal.PlatformServiceClient {
   *** populateRequestBundle(...);
}

-keep class com.facebook.internal.WebDialog$Builder
-keepclassmembers class com.facebook.internal.WebDialog$Builder {
   <init>(...);
   <init>(...);
   *** getApplicationId(...);
   *** getContext(...);
   *** getListener(...);
   *** getParameters(...);
   *** getTheme(...);
   *** build(...);
   *** setOnCompleteListener(...);
   *** setTheme(...);
}

-keep class com.facebook.internal.WebDialog$OnCompleteListener
-keepclassmembers class com.facebook.internal.WebDialog$OnCompleteListener {
}

-keep class mono.com.facebook.internal.WebDialog_OnCompleteListenerImplementor
-keepclassmembers class mono.com.facebook.internal.WebDialog_OnCompleteListenerImplementor {
}

-keep class com.facebook.internal.WebDialog
-keepclassmembers class com.facebook.internal.WebDialog {
   <init>(...);
   *** isListenerCalled(...);
   *** isPageFinished(...);
   *** getOnCompleteListener(...);
   *** setOnCompleteListener(...);
   *** getWebDialogTheme(...);
   *** setWebDialogTheme(...);
   *** getWebView(...);
   *** initDefaultTheme(...);
   *** newInstance(...);
   *** parseResponseUri(...);
   *** resize(...);
   *** sendErrorToListener(...);
   *** sendSuccessToListener(...);
   *** setExpectedRedirectUrl(...);
}

-keep class com.facebook.devicerequests.internal.DeviceRequestsHelper
-keepclassmembers class com.facebook.devicerequests.internal.DeviceRequestsHelper {
   <init>(...);
   *** getDeviceInfo(...);
   *** isAvailable(...);
   *** cleanUpAdvertisementService(...);
   *** generateQRCode(...);
   *** startAdvertisementService(...);
}

-keep class com.facebook.common.BuildConfig
-keepclassmembers class com.facebook.common.BuildConfig {
   <init>(...);
}

-keep class com.facebook.common.Common
-keepclassmembers class com.facebook.common.Common {
   <init>(...);
}

-keep class com.facebook.share.ShareBuilder
-keepclassmembers class com.facebook.share.ShareBuilder {
}

-keep class com.facebook.share.Sharer$Result
-keepclassmembers class com.facebook.share.Sharer$Result {
   <init>(...);
   *** getPostId(...);
}

-keep class com.facebook.share.Sharer
-keepclassmembers class com.facebook.share.Sharer {
}

-keep class com.facebook.share.widget.LikeView$AuxiliaryViewPosition
-keepclassmembers class com.facebook.share.widget.LikeView$AuxiliaryViewPosition {
   *** valueOf(...);
   *** values(...);
}

-keep class com.facebook.share.widget.LikeView$HorizontalAlignment
-keepclassmembers class com.facebook.share.widget.LikeView$HorizontalAlignment {
   *** valueOf(...);
   *** values(...);
}

-keep class com.facebook.share.widget.LikeView$ObjectType
-keepclassmembers class com.facebook.share.widget.LikeView$ObjectType {
   *** getValue(...);
   *** fromInt(...);
   *** valueOf(...);
   *** values(...);
}

-keep class com.facebook.share.widget.LikeView$OnErrorListener
-keepclassmembers class com.facebook.share.widget.LikeView$OnErrorListener {
}

-keep class mono.com.facebook.share.widget.LikeView_OnErrorListenerImplementor
-keepclassmembers class mono.com.facebook.share.widget.LikeView_OnErrorListenerImplementor {
}

-keep class com.facebook.share.widget.LikeView$Style
-keepclassmembers class com.facebook.share.widget.LikeView$Style {
   *** valueOf(...);
   *** values(...);
}

-keep class com.facebook.share.widget.LikeView
-keepclassmembers class com.facebook.share.widget.LikeView {
   *** setEnabled(...);
   <init>(...);
   <init>(...);
   *** getOnErrorListener(...);
   *** setOnErrorListener(...);
   *** setAuxiliaryViewPosition(...);
   *** setForegroundColor(...);
   *** setFragment(...);
   *** setFragment(...);
   *** setHorizontalAlignment(...);
   *** setLikeViewStyle(...);
   *** setObjectIdAndType(...);
}

-keep class com.facebook.share.widget.ShareDialog$Mode
-keepclassmembers class com.facebook.share.widget.ShareDialog$Mode {
   *** valueOf(...);
   *** values(...);
}

-keep class com.facebook.share.widget.ShareDialog
-keepclassmembers class com.facebook.share.widget.ShareDialog {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getOrderedModeHandlers(...);
   *** getShouldFailOnDataError(...);
   *** setShouldFailOnDataError(...);
   *** canShow(...);
   *** canShow(...);
   *** createBaseAppCall(...);
   *** registerCallbackImpl(...);
   *** show(...);
   *** show(...);
   *** show(...);
   *** show(...);
}

-keep class com.facebook.share.model.ShareContent$Builder
-keepclassmembers class com.facebook.share.model.ShareContent$Builder {
   *** build(...);
   *** readFrom(...);
   <init>(...);
   *** readFrom(...);
   *** setContentUrl(...);
   *** setPageId(...);
   *** setPeopleIds(...);
   *** setPlaceId(...);
   *** setRef(...);
   *** setShareHashtag(...);
}

-keep class com.facebook.share.model.ShareContent$Builder
-keepclassmembers class com.facebook.share.model.ShareContent$Builder {
}

-keep class com.facebook.share.model.ShareContent
-keepclassmembers class com.facebook.share.model.ShareContent {
   <init>(...);
   <init>(...);
   *** getContentUrl(...);
   *** getPageId(...);
   *** getPeopleIds(...);
   *** getPlaceId(...);
   *** getRef(...);
   *** getShareHashtag(...);
   *** describeContents(...);
   *** writeToParcel(...);
}

-keep class com.facebook.share.model.ShareMedia$Builder
-keepclassmembers class com.facebook.share.model.ShareMedia$Builder {
   *** build(...);
   *** readFrom(...);
   <init>(...);
   *** readFrom(...);
   *** setParameter(...);
   *** setParameters(...);
}

-keep class com.facebook.share.model.ShareMedia$Builder
-keepclassmembers class com.facebook.share.model.ShareMedia$Builder {
}

-keep class com.facebook.share.model.ShareMedia$Type
-keepclassmembers class com.facebook.share.model.ShareMedia$Type {
   *** valueOf(...);
   *** values(...);
}

-keep class com.facebook.share.model.ShareMedia
-keepclassmembers class com.facebook.share.model.ShareMedia {
   <init>(...);
   *** getMediaType(...);
   *** getParameters(...);
   *** describeContents(...);
   *** writeToParcel(...);
}

-keep class com.facebook.share.model.ShareOpenGraphValueContainer$Builder
-keepclassmembers class com.facebook.share.model.ShareOpenGraphValueContainer$Builder {
   *** build(...);
   *** readFrom(...);
   <init>(...);
   *** putBoolean(...);
   *** putBooleanArray(...);
   *** putDouble(...);
   *** putDoubleArray(...);
   *** putInt(...);
   *** putIntArray(...);
   *** putLong(...);
   *** putLongArray(...);
   *** putObject(...);
   *** putObjectArrayList(...);
   *** putPhoto(...);
   *** putPhotoArrayList(...);
   *** putString(...);
   *** putStringArrayList(...);
   *** readFrom(...);
}

-keep class com.facebook.share.model.ShareOpenGraphValueContainer$Builder
-keepclassmembers class com.facebook.share.model.ShareOpenGraphValueContainer$Builder {
}

-keep class com.facebook.share.model.ShareOpenGraphValueContainer
-keepclassmembers class com.facebook.share.model.ShareOpenGraphValueContainer {
   <init>(...);
   *** getBundle(...);
   *** describeContents(...);
   *** get(...);
   *** getBoolean(...);
   *** getBooleanArray(...);
   *** getDouble(...);
   *** getDoubleArray(...);
   *** getInt(...);
   *** getIntArray(...);
   *** getLong(...);
   *** getLongArray(...);
   *** getObject(...);
   *** getObjectArrayList(...);
   *** getPhoto(...);
   *** getPhotoArrayList(...);
   *** getString(...);
   *** getStringArrayList(...);
   *** keySet(...);
   *** writeToParcel(...);
}

-keep class com.facebook.share.model.ShareMessengerActionButton$Builder
-keepclassmembers class com.facebook.share.model.ShareMessengerActionButton$Builder {
   *** build(...);
   *** readFrom(...);
   <init>(...);
   *** readFrom(...);
   *** setTitle(...);
}

-keep class com.facebook.share.model.ShareMessengerActionButton$Builder
-keepclassmembers class com.facebook.share.model.ShareMessengerActionButton$Builder {
}

-keep class com.facebook.share.model.ShareMessengerActionButton
-keepclassmembers class com.facebook.share.model.ShareMessengerActionButton {
   <init>(...);
   *** getTitle(...);
   *** describeContents(...);
   *** writeToParcel(...);
}

-keep class com.facebook.share.model.AppGroupCreationContent$AppGroupPrivacy
-keepclassmembers class com.facebook.share.model.AppGroupCreationContent$AppGroupPrivacy {
   *** valueOf(...);
   *** values(...);
}

-keep class com.facebook.share.model.AppGroupCreationContent$Builder
-keepclassmembers class com.facebook.share.model.AppGroupCreationContent$Builder {
   <init>(...);
   *** build(...);
   *** readFrom(...);
   *** setAppGroupPrivacy(...);
   *** setDescription(...);
   *** setName(...);
}

-keep class com.facebook.share.model.AppGroupCreationContent
-keepclassmembers class com.facebook.share.model.AppGroupCreationContent {
   *** getDescription(...);
   *** getName(...);
   *** describeContents(...);
   *** getAppGroupPrivacy(...);
   *** writeToParcel(...);
}

-keep class com.facebook.share.model.CameraEffectArguments$Builder
-keepclassmembers class com.facebook.share.model.CameraEffectArguments$Builder {
   <init>(...);
   *** build(...);
   *** putArgument(...);
   *** putArgument(...);
   *** readFrom(...);
   *** readFrom(...);
}

-keep class com.facebook.share.model.CameraEffectArguments
-keepclassmembers class com.facebook.share.model.CameraEffectArguments {
   *** describeContents(...);
   *** get(...);
   *** getString(...);
   *** getStringArray(...);
   *** keySet(...);
   *** writeToParcel(...);
}

-keep class com.facebook.share.model.CameraEffectTextures$Builder
-keepclassmembers class com.facebook.share.model.CameraEffectTextures$Builder {
   <init>(...);
   *** build(...);
   *** putTexture(...);
   *** putTexture(...);
   *** readFrom(...);
   *** readFrom(...);
}

-keep class com.facebook.share.model.CameraEffectTextures
-keepclassmembers class com.facebook.share.model.CameraEffectTextures {
   *** describeContents(...);
   *** get(...);
   *** getTextureBitmap(...);
   *** getTextureUri(...);
   *** keySet(...);
   *** writeToParcel(...);
}

-keep class com.facebook.share.model.GameRequestContent$ActionType
-keepclassmembers class com.facebook.share.model.GameRequestContent$ActionType {
   *** valueOf(...);
   *** values(...);
}

-keep class com.facebook.share.model.GameRequestContent$Builder
-keepclassmembers class com.facebook.share.model.GameRequestContent$Builder {
   <init>(...);
   *** build(...);
   *** readFrom(...);
   *** setActionType(...);
   *** setData(...);
   *** setFilters(...);
   *** setMessage(...);
   *** setObjectId(...);
   *** setRecipients(...);
   *** setSuggestions(...);
   *** setTitle(...);
   *** setTo(...);
}

-keep class com.facebook.share.model.GameRequestContent$Filters
-keepclassmembers class com.facebook.share.model.GameRequestContent$Filters {
   *** valueOf(...);
   *** values(...);
}

-keep class com.facebook.share.model.GameRequestContent
-keepclassmembers class com.facebook.share.model.GameRequestContent {
   *** getData(...);
   *** getMessage(...);
   *** getObjectId(...);
   *** getRecipients(...);
   *** getSuggestions(...);
   *** getTitle(...);
   *** getTo(...);
   *** describeContents(...);
   *** getActionType(...);
   *** getFilters(...);
   *** writeToParcel(...);
}

-keep class com.facebook.share.model.ShareModel
-keepclassmembers class com.facebook.share.model.ShareModel {
}

-keep class com.facebook.share.model.ShareModelBuilder
-keepclassmembers class com.facebook.share.model.ShareModelBuilder {
}

-keep class com.facebook.share.model.ShareCameraEffectContent$Builder
-keepclassmembers class com.facebook.share.model.ShareCameraEffectContent$Builder {
   <init>(...);
   *** build(...);
   *** readFrom(...);
   *** setArguments(...);
   *** setEffectId(...);
   *** setTextures(...);
}

-keep class com.facebook.share.model.ShareCameraEffectContent
-keepclassmembers class com.facebook.share.model.ShareCameraEffectContent {
   *** getArguments(...);
   *** getEffectId(...);
   *** getTextures(...);
}

-keep class com.facebook.share.model.ShareContent
-keepclassmembers class com.facebook.share.model.ShareContent {
}

-keep class com.facebook.share.model.ShareHashtag$Builder
-keepclassmembers class com.facebook.share.model.ShareHashtag$Builder {
   <init>(...);
   *** getHashtag(...);
   *** build(...);
   *** readFrom(...);
   *** setHashtag(...);
}

-keep class com.facebook.share.model.ShareHashtag
-keepclassmembers class com.facebook.share.model.ShareHashtag {
   *** getHashtag(...);
   *** describeContents(...);
   *** writeToParcel(...);
}

-keep class com.facebook.share.model.ShareLinkContent$Builder
-keepclassmembers class com.facebook.share.model.ShareLinkContent$Builder {
   <init>(...);
   *** build(...);
   *** readFrom(...);
   *** setContentDescription(...);
   *** setContentTitle(...);
   *** setImageUrl(...);
   *** setQuote(...);
}

-keep class com.facebook.share.model.ShareLinkContent
-keepclassmembers class com.facebook.share.model.ShareLinkContent {
   *** getContentDescription(...);
   *** getContentTitle(...);
   *** getImageUrl(...);
   *** getQuote(...);
}

-keep class com.facebook.share.model.ShareMedia
-keepclassmembers class com.facebook.share.model.ShareMedia {
   *** getMediaType(...);
}

-keep class com.facebook.share.model.ShareMediaContent$Builder
-keepclassmembers class com.facebook.share.model.ShareMediaContent$Builder {
   <init>(...);
   *** addMedia(...);
   *** addMedium(...);
   *** build(...);
   *** readFrom(...);
   *** setMedia(...);
}

-keep class com.facebook.share.model.ShareMediaContent
-keepclassmembers class com.facebook.share.model.ShareMediaContent {
   *** getMedia(...);
}

-keep class com.facebook.share.model.ShareMessengerActionButton
-keepclassmembers class com.facebook.share.model.ShareMessengerActionButton {
}

-keep class com.facebook.share.model.ShareMessengerGenericTemplateContent$Builder
-keepclassmembers class com.facebook.share.model.ShareMessengerGenericTemplateContent$Builder {
   <init>(...);
   *** build(...);
   *** readFrom(...);
   *** setGenericTemplateElement(...);
   *** setImageAspectRatio(...);
   *** setIsSharable(...);
}

-keep class com.facebook.share.model.ShareMessengerGenericTemplateContent$ImageAspectRatio
-keepclassmembers class com.facebook.share.model.ShareMessengerGenericTemplateContent$ImageAspectRatio {
   *** valueOf(...);
   *** values(...);
}

-keep class com.facebook.share.model.ShareMessengerGenericTemplateContent
-keepclassmembers class com.facebook.share.model.ShareMessengerGenericTemplateContent {
   *** getGenericTemplateElement(...);
   *** getIsSharable(...);
   *** getImageAspectRatio(...);
}

-keep class com.facebook.share.model.ShareMessengerGenericTemplateElement$Builder
-keepclassmembers class com.facebook.share.model.ShareMessengerGenericTemplateElement$Builder {
   <init>(...);
   *** build(...);
   *** readFrom(...);
   *** setButton(...);
   *** setDefaultAction(...);
   *** setImageUrl(...);
   *** setSubtitle(...);
   *** setTitle(...);
}

-keep class com.facebook.share.model.ShareMessengerGenericTemplateElement
-keepclassmembers class com.facebook.share.model.ShareMessengerGenericTemplateElement {
   *** getButton(...);
   *** getDefaultAction(...);
   *** getImageUrl(...);
   *** getSubtitle(...);
   *** getTitle(...);
   *** describeContents(...);
   *** writeToParcel(...);
}

-keep class com.facebook.share.model.ShareMessengerMediaTemplateContent$Builder
-keepclassmembers class com.facebook.share.model.ShareMessengerMediaTemplateContent$Builder {
   <init>(...);
   *** build(...);
   *** readFrom(...);
   *** setAttachmentId(...);
   *** setButton(...);
   *** setMediaType(...);
   *** setMediaUrl(...);
}

-keep class com.facebook.share.model.ShareMessengerMediaTemplateContent$MediaType
-keepclassmembers class com.facebook.share.model.ShareMessengerMediaTemplateContent$MediaType {
   *** valueOf(...);
   *** values(...);
}

-keep class com.facebook.share.model.ShareMessengerMediaTemplateContent
-keepclassmembers class com.facebook.share.model.ShareMessengerMediaTemplateContent {
   *** getAttachmentId(...);
   *** getButton(...);
   *** getMediaUrl(...);
   *** getMediaType(...);
}

-keep class com.facebook.share.model.ShareMessengerOpenGraphMusicTemplateContent$Builder
-keepclassmembers class com.facebook.share.model.ShareMessengerOpenGraphMusicTemplateContent$Builder {
   <init>(...);
   *** build(...);
   *** readFrom(...);
   *** setButton(...);
   *** setUrl(...);
}

-keep class com.facebook.share.model.ShareMessengerOpenGraphMusicTemplateContent
-keepclassmembers class com.facebook.share.model.ShareMessengerOpenGraphMusicTemplateContent {
   *** getButton(...);
   *** getUrl(...);
}

-keep class com.facebook.share.model.ShareMessengerURLActionButton$Builder
-keepclassmembers class com.facebook.share.model.ShareMessengerURLActionButton$Builder {
   <init>(...);
   *** build(...);
   *** readFrom(...);
   *** setFallbackUrl(...);
   *** setIsMessengerExtensionURL(...);
   *** setShouldHideWebviewShareButton(...);
   *** setUrl(...);
   *** setWebviewHeightRatio(...);
}

-keep class com.facebook.share.model.ShareMessengerURLActionButton$WebviewHeightRatio
-keepclassmembers class com.facebook.share.model.ShareMessengerURLActionButton$WebviewHeightRatio {
   *** valueOf(...);
   *** values(...);
}

-keep class com.facebook.share.model.ShareMessengerURLActionButton
-keepclassmembers class com.facebook.share.model.ShareMessengerURLActionButton {
   *** getFallbackUrl(...);
   *** getIsMessengerExtensionURL(...);
   *** getShouldHideWebviewShareButton(...);
   *** getUrl(...);
   *** getWebviewHeightRatio(...);
}

-keep class com.facebook.share.model.ShareOpenGraphAction$Builder
-keepclassmembers class com.facebook.share.model.ShareOpenGraphAction$Builder {
   <init>(...);
   *** build(...);
   *** readFrom(...);
   *** setActionType(...);
}

-keep class com.facebook.share.model.ShareOpenGraphAction
-keepclassmembers class com.facebook.share.model.ShareOpenGraphAction {
   *** getActionType(...);
}

-keep class com.facebook.share.model.ShareOpenGraphContent$Builder
-keepclassmembers class com.facebook.share.model.ShareOpenGraphContent$Builder {
   <init>(...);
   *** build(...);
   *** readFrom(...);
   *** setAction(...);
   *** setPreviewPropertyName(...);
}

-keep class com.facebook.share.model.ShareOpenGraphContent
-keepclassmembers class com.facebook.share.model.ShareOpenGraphContent {
   *** getAction(...);
   *** getPreviewPropertyName(...);
}

-keep class com.facebook.share.model.ShareOpenGraphObject$Builder
-keepclassmembers class com.facebook.share.model.ShareOpenGraphObject$Builder {
   <init>(...);
   *** build(...);
}

-keep class com.facebook.share.model.ShareOpenGraphObject
-keepclassmembers class com.facebook.share.model.ShareOpenGraphObject {
}

-keep class com.facebook.share.model.ShareOpenGraphValueContainer
-keepclassmembers class com.facebook.share.model.ShareOpenGraphValueContainer {
}

-keep class com.facebook.share.model.SharePhoto$Builder
-keepclassmembers class com.facebook.share.model.SharePhoto$Builder {
   <init>(...);
   *** build(...);
   *** readFrom(...);
   *** setBitmap(...);
   *** setCaption(...);
   *** setImageUrl(...);
   *** setUserGenerated(...);
}

-keep class com.facebook.share.model.SharePhoto
-keepclassmembers class com.facebook.share.model.SharePhoto {
   *** getBitmap(...);
   *** getCaption(...);
   *** getImageUrl(...);
   *** getMediaType(...);
   *** getUserGenerated(...);
}

-keep class com.facebook.share.model.SharePhotoContent$Builder
-keepclassmembers class com.facebook.share.model.SharePhotoContent$Builder {
   <init>(...);
   *** addPhoto(...);
   *** addPhotos(...);
   *** build(...);
   *** readFrom(...);
   *** setPhotos(...);
}

-keep class com.facebook.share.model.SharePhotoContent
-keepclassmembers class com.facebook.share.model.SharePhotoContent {
   *** getPhotos(...);
}

-keep class com.facebook.share.model.ShareStoryContent$Builder
-keepclassmembers class com.facebook.share.model.ShareStoryContent$Builder {
   <init>(...);
   *** build(...);
   *** readFrom(...);
   *** setAttributionLink(...);
   *** setBackgroundAsset(...);
   *** setBackgroundColorList(...);
   *** setStickerAsset(...);
}

-keep class com.facebook.share.model.ShareStoryContent
-keepclassmembers class com.facebook.share.model.ShareStoryContent {
   *** getAttributionLink(...);
   *** getBackgroundAsset(...);
   *** getBackgroundColorList(...);
   *** getStickerAsset(...);
}

-keep class com.facebook.share.model.ShareVideo$Builder
-keepclassmembers class com.facebook.share.model.ShareVideo$Builder {
   <init>(...);
   *** build(...);
   *** readFrom(...);
   *** setLocalUrl(...);
}

-keep class com.facebook.share.model.ShareVideo
-keepclassmembers class com.facebook.share.model.ShareVideo {
   *** getLocalUrl(...);
   *** getMediaType(...);
}

-keep class com.facebook.share.model.ShareVideoContent$Builder
-keepclassmembers class com.facebook.share.model.ShareVideoContent$Builder {
   <init>(...);
   *** build(...);
   *** readFrom(...);
   *** setContentDescription(...);
   *** setContentTitle(...);
   *** setPreviewPhoto(...);
   *** setVideo(...);
}

-keep class com.facebook.share.model.ShareVideoContent
-keepclassmembers class com.facebook.share.model.ShareVideoContent {
   *** getContentDescription(...);
   *** getContentTitle(...);
   *** getPreviewPhoto(...);
   *** getVideo(...);
}

# ACW for Xamarin.Facebook.Core.Android
-keep class com.facebook.GraphRequestAsyncTask
-keepclassmembers class com.facebook.GraphRequestAsyncTask {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getException(...);
   *** getRequests(...);
   *** onPostExecute(...);
}

-keep class com.facebook.AccessToken$AccessTokenCreationCallback
-keepclassmembers class com.facebook.AccessToken$AccessTokenCreationCallback {
}

-keep class com.facebook.AccessToken$AccessTokenRefreshCallback
-keepclassmembers class com.facebook.AccessToken$AccessTokenRefreshCallback {
}

-keep class com.facebook.AccessToken
-keepclassmembers class com.facebook.AccessToken {
   <init>(...);
   <init>(...);
   *** getApplicationId(...);
   *** getCurrentAccessToken(...);
   *** setCurrentAccessToken(...);
   *** getDataAccessExpirationTime(...);
   *** getDeclinedPermissions(...);
   *** getExpiredPermissions(...);
   *** getExpires(...);
   *** getGraphDomain(...);
   *** isCurrentAccessTokenActive(...);
   *** isDataAccessActive(...);
   *** isDataAccessExpired(...);
   *** isExpired(...);
   *** getLastRefresh(...);
   *** getPermissions(...);
   *** getSource(...);
   *** getToken(...);
   *** getUserId(...);
   *** createFromNativeLinkingIntent(...);
   *** describeContents(...);
   *** refreshCurrentAccessTokenAsync(...);
   *** refreshCurrentAccessTokenAsync(...);
   *** writeToParcel(...);
}

-keep class com.facebook.AccessTokenManager
-keepclassmembers class com.facebook.AccessTokenManager {
}

-keep class com.facebook.AccessTokenSource
-keepclassmembers class com.facebook.AccessTokenSource {
   *** valueOf(...);
   *** values(...);
}

-keep class com.facebook.CurrentAccessTokenExpirationBroadcastReceiver
-keepclassmembers class com.facebook.CurrentAccessTokenExpirationBroadcastReceiver {
   <init>(...);
   *** onReceive(...);
}

-keep class com.facebook.FacebookBroadcastReceiver
-keepclassmembers class com.facebook.FacebookBroadcastReceiver {
   <init>(...);
   *** onFailedAppCall(...);
   *** onReceive(...);
   *** onSuccessfulAppCall(...);
}

-keep class com.facebook.FacebookContentProvider
-keepclassmembers class com.facebook.FacebookContentProvider {
   <init>(...);
   *** delete(...);
   *** getAttachmentUrl(...);
   *** getType(...);
   *** insert(...);
   *** onCreate(...);
   *** query(...);
   *** update(...);
}

-keep class com.facebook.FacebookException
-keepclassmembers class com.facebook.FacebookException {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** toString(...);
}

-keep class com.facebook.FacebookGraphResponseException
-keepclassmembers class com.facebook.FacebookGraphResponseException {
   <init>(...);
   *** getGraphResponse(...);
   *** toString(...);
}

-keep class com.facebook.FacebookOperationCanceledException
-keepclassmembers class com.facebook.FacebookOperationCanceledException {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class com.facebook.FacebookRequestError$Category
-keepclassmembers class com.facebook.FacebookRequestError$Category {
   *** valueOf(...);
   *** values(...);
}

-keep class com.facebook.FacebookRequestError
-keepclassmembers class com.facebook.FacebookRequestError {
   <init>(...);
   *** getBatchRequestResult(...);
   *** getConnection(...);
   *** getErrorCode(...);
   *** getErrorMessage(...);
   *** getErrorRecoveryMessage(...);
   *** getErrorType(...);
   *** getErrorUserMessage(...);
   *** getErrorUserTitle(...);
   *** getException(...);
   *** getRequestResult(...);
   *** getRequestResultBody(...);
   *** getRequestStatusCode(...);
   *** getSubErrorCode(...);
   *** describeContents(...);
   *** getCategory(...);
   *** writeToParcel(...);
}

-keep class com.facebook.FacebookSdk$GraphRequestCreator
-keepclassmembers class com.facebook.FacebookSdk$GraphRequestCreator {
}

-keep class com.facebook.FacebookSdk$InitializeCallback
-keepclassmembers class com.facebook.FacebookSdk$InitializeCallback {
}

-keep class com.facebook.FacebookSdk
-keepclassmembers class com.facebook.FacebookSdk {
   <init>(...);
   *** getAdvertiserIDCollectionEnabled(...);
   *** setAdvertiserIDCollectionEnabled(...);
   *** getApplicationContext(...);
   *** getApplicationId(...);
   *** setApplicationId(...);
   *** getApplicationName(...);
   *** setApplicationName(...);
   *** getAutoInitEnabled(...);
   *** setAutoInitEnabled(...);
   *** getAutoLogAppEventsEnabled(...);
   *** setAutoLogAppEventsEnabled(...);
   *** getCacheDir(...);
   *** setCacheDir(...);
   *** getCallbackRequestCodeOffset(...);
   *** getClientToken(...);
   *** setClientToken(...);
   *** getCodelessDebugLogEnabled(...);
   *** setCodelessDebugLogEnabled(...);
   *** getCodelessSetupEnabled(...);
   *** getExecutor(...);
   *** setExecutor(...);
   *** getFacebookDomain(...);
   *** setFacebookDomain(...);
   *** getGraphApiVersion(...);
   *** setGraphApiVersion(...);
   *** getGraphDomain(...);
   *** isDebugEnabled(...);
   *** setIsDebugEnabled(...);
   *** isFullyInitialized(...);
   *** isInitialized(...);
   *** isLegacyTokenUpgradeSupported(...);
   *** setLegacyTokenUpgradeSupported(...);
   *** getLoggingBehaviors(...);
   *** getMonitorEnabled(...);
   *** setMonitorEnabled(...);
   *** getOnProgressThreshold(...);
   *** setOnProgressThreshold(...);
   *** getSdkVersion(...);
   *** addLoggingBehavior(...);
   *** clearLoggingBehaviors(...);
   *** fullyInitialize(...);
   *** getApplicationSignature(...);
   *** getLimitEventAndDataUsage(...);
   *** isFacebookRequestCode(...);
   *** isLoggingBehaviorEnabled(...);
   *** publishInstallAsync(...);
   *** removeLoggingBehavior(...);
   *** sdkInitialize(...);
   *** sdkInitialize(...);
   *** sdkInitialize(...);
   *** sdkInitialize(...);
   *** setDataProcessingOptions(...);
   *** setDataProcessingOptions(...);
   *** setGraphRequestCreator(...);
   *** setLimitEventAndDataUsage(...);
}

-keep class com.facebook.FacebookSdkNotInitializedException
-keepclassmembers class com.facebook.FacebookSdkNotInitializedException {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class com.facebook.FacebookServiceException
-keepclassmembers class com.facebook.FacebookServiceException {
   <init>(...);
   *** getRequestError(...);
   *** toString(...);
}

-keep class com.facebook.GraphRequest$Callback
-keepclassmembers class com.facebook.GraphRequest$Callback {
}

-keep class com.facebook.GraphRequest$GraphJSONArrayCallback
-keepclassmembers class com.facebook.GraphRequest$GraphJSONArrayCallback {
}

-keep class com.facebook.GraphRequest$GraphJSONObjectCallback
-keepclassmembers class com.facebook.GraphRequest$GraphJSONObjectCallback {
}

-keep class com.facebook.GraphRequest$OnProgressCallback
-keepclassmembers class com.facebook.GraphRequest$OnProgressCallback {
}

-keep class com.facebook.GraphRequest$ParcelableResourceWithMimeType
-keepclassmembers class com.facebook.GraphRequest$ParcelableResourceWithMimeType {
   <init>(...);
   *** getMimeType(...);
   *** getResource(...);
   *** describeContents(...);
   *** writeToParcel(...);
}

-keep class com.facebook.GraphRequest
-keepclassmembers class com.facebook.GraphRequest {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getAccessToken(...);
   *** setAccessToken(...);
   *** getBatchEntryDependsOn(...);
   *** setBatchEntryDependsOn(...);
   *** getBatchEntryName(...);
   *** setBatchEntryName(...);
   *** getBatchEntryOmitResultOnSuccess(...);
   *** setBatchEntryOmitResultOnSuccess(...);
   *** getCallback(...);
   *** setCallback(...);
   *** getDefaultBatchApplicationId(...);
   *** setDefaultBatchApplicationId(...);
   *** getGraphObject(...);
   *** setGraphObject(...);
   *** getGraphPath(...);
   *** setGraphPath(...);
   *** getHttpMethod(...);
   *** setHttpMethod(...);
   *** getParameters(...);
   *** setParameters(...);
   *** getTag(...);
   *** setTag(...);
   *** getVersion(...);
   *** setVersion(...);
   *** executeAndWait(...);
   *** executeAndWait(...);
   *** executeAsync(...);
   *** executeBatchAndWait(...);
   *** executeBatchAndWait(...);
   *** executeBatchAndWait(...);
   *** executeBatchAsync(...);
   *** executeBatchAsync(...);
   *** executeBatchAsync(...);
   *** executeConnectionAndWait(...);
   *** executeConnectionAndWait(...);
   *** executeConnectionAsync(...);
   *** executeConnectionAsync(...);
   *** newCustomAudienceThirdPartyIdRequest(...);
   *** newCustomAudienceThirdPartyIdRequest(...);
   *** newDeleteObjectRequest(...);
   *** newGraphPathRequest(...);
   *** newMeRequest(...);
   *** newMyFriendsRequest(...);
   *** newPlacesSearchRequest(...);
   *** newPostRequest(...);
   *** newUploadPhotoRequest(...);
   *** newUploadPhotoRequest(...);
   *** newUploadPhotoRequest(...);
   *** setSkipClientToken(...);
   *** toHttpConnection(...);
   *** toHttpConnection(...);
   *** toHttpConnection(...);
}

-keep class com.facebook.GraphRequestBatch$Callback
-keepclassmembers class com.facebook.GraphRequestBatch$Callback {
}

-keep class com.facebook.GraphRequestBatch$OnProgressCallback
-keepclassmembers class com.facebook.GraphRequestBatch$OnProgressCallback {
}

-keep class com.facebook.GraphRequestBatch
-keepclassmembers class com.facebook.GraphRequestBatch {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getBatchApplicationId(...);
   *** setBatchApplicationId(...);
   *** getTimeout(...);
   *** setTimeout(...);
   *** add(...);
   *** add(...);
   *** addCallback(...);
   *** clear(...);
   *** executeAndWait(...);
   *** executeAsync(...);
   *** get(...);
   *** remove(...);
   *** removeCallback(...);
   *** set(...);
   *** size(...);
}

-keep class com.facebook.GraphResponse$PagingDirection
-keepclassmembers class com.facebook.GraphResponse$PagingDirection {
   *** valueOf(...);
   *** values(...);
}

-keep class com.facebook.GraphResponse
-keepclassmembers class com.facebook.GraphResponse {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getConnection(...);
   *** getError(...);
   *** getJSONArray(...);
   *** getJSONObject(...);
   *** getRawResponse(...);
   *** getRequest(...);
   *** getRequestForPagedResults(...);
}

-keep class com.facebook.HttpMethod
-keepclassmembers class com.facebook.HttpMethod {
   *** valueOf(...);
   *** values(...);
}

-keep class com.facebook.CallbackManager$Factory
-keepclassmembers class com.facebook.CallbackManager$Factory {
   <init>(...);
   *** create(...);
}

-keep class com.facebook.CallbackManager
-keepclassmembers class com.facebook.CallbackManager {
}

-keep class com.facebook.LoggingBehavior
-keepclassmembers class com.facebook.LoggingBehavior {
   *** valueOf(...);
   *** values(...);
}

-keep class com.facebook.Profile
-keepclassmembers class com.facebook.Profile {
   <init>(...);
   *** getCurrentProfile(...);
   *** setCurrentProfile(...);
   *** getFirstName(...);
   *** getId(...);
   *** getLastName(...);
   *** getLinkUri(...);
   *** getMiddleName(...);
   *** getName(...);
   *** describeContents(...);
   *** fetchProfileForCurrentAccessToken(...);
   *** getProfilePictureUri(...);
   *** writeToParcel(...);
}

-keep class com.facebook.ProfileManager
-keepclassmembers class com.facebook.ProfileManager {
}

-keep class com.facebook.ProfileTracker
-keepclassmembers class com.facebook.ProfileTracker {
   <init>(...);
   *** isTracking(...);
   *** onCurrentProfileChanged(...);
   *** startTracking(...);
   *** stopTracking(...);
}

-keep class com.facebook.ProfileTracker
-keepclassmembers class com.facebook.ProfileTracker {
   *** onCurrentProfileChanged(...);
}

-keep class com.facebook.login.DefaultAudience
-keepclassmembers class com.facebook.login.DefaultAudience {
   *** getNativeProtocolAudience(...);
   *** valueOf(...);
   *** values(...);
}

-keep class com.facebook.internal.AnalyticsEvents
-keepclassmembers class com.facebook.internal.AnalyticsEvents {
   <init>(...);
}

-keep class com.facebook.internal.AttributionIdentifiers
-keepclassmembers class com.facebook.internal.AttributionIdentifiers {
   <init>(...);
   *** getAndroidAdvertiserId(...);
   *** getAndroidInstallerPackage(...);
   *** getAttributionId(...);
   *** getCachedIdentifiers(...);
   *** isTrackingLimited(...);
   *** getAttributionIdentifiers(...);
   *** isTrackingLimited(...);
}

-keep class com.facebook.internal.BoltsMeasurementEventListener
-keepclassmembers class com.facebook.internal.BoltsMeasurementEventListener {
   *** getInstance(...);
   *** onReceive(...);
}

-keep class com.facebook.internal.BundleJSONConverter$Setter
-keepclassmembers class com.facebook.internal.BundleJSONConverter$Setter {
}

-keep class com.facebook.internal.BundleJSONConverter
-keepclassmembers class com.facebook.internal.BundleJSONConverter {
   <init>(...);
   *** convertToBundle(...);
   *** convertToJSON(...);
}

-keep class com.facebook.internal.CallbackManagerImpl$Callback
-keepclassmembers class com.facebook.internal.CallbackManagerImpl$Callback {
}

-keep class com.facebook.internal.CallbackManagerImpl$RequestCodeOffset
-keepclassmembers class com.facebook.internal.CallbackManagerImpl$RequestCodeOffset {
   *** toRequestCode(...);
   *** valueOf(...);
   *** values(...);
}

-keep class com.facebook.internal.CallbackManagerImpl
-keepclassmembers class com.facebook.internal.CallbackManagerImpl {
   <init>(...);
   *** onActivityResult(...);
   *** registerCallback(...);
   *** registerStaticCallback(...);
   *** unregisterCallback(...);
}

-keep class com.facebook.internal.FacebookInitProvider
-keepclassmembers class com.facebook.internal.FacebookInitProvider {
   <init>(...);
   *** delete(...);
   *** getType(...);
   *** insert(...);
   *** onCreate(...);
   *** query(...);
   *** update(...);
}

-keep class com.facebook.internal.FacebookRequestErrorClassification
-keepclassmembers class com.facebook.internal.FacebookRequestErrorClassification {
   *** getDefaultErrorClassification(...);
   *** getLoginRecoverableErrors(...);
   *** getOtherErrors(...);
   *** getTransientErrors(...);
   *** classify(...);
   *** createFromJSON(...);
   *** getRecoveryMessage(...);
}

-keep class com.facebook.internal.FacebookSignatureValidator
-keepclassmembers class com.facebook.internal.FacebookSignatureValidator {
   <init>(...);
   *** validateSignature(...);
}

-keep class com.facebook.internal.FeatureManager$Callback
-keepclassmembers class com.facebook.internal.FeatureManager$Callback {
}

-keep class com.facebook.internal.FeatureManager$Feature
-keepclassmembers class com.facebook.internal.FeatureManager$Feature {
   *** getParent(...);
   *** valueOf(...);
   *** values(...);
}

-keep class com.facebook.internal.FeatureManager
-keepclassmembers class com.facebook.internal.FeatureManager {
   <init>(...);
   *** checkFeature(...);
   *** disableFeature(...);
   *** getFeature(...);
   *** isEnabled(...);
}

-keep class com.facebook.internal.FetchedAppGateKeepersManager$Callback
-keepclassmembers class com.facebook.internal.FetchedAppGateKeepersManager$Callback {
}

-keep class com.facebook.internal.FetchedAppGateKeepersManager
-keepclassmembers class com.facebook.internal.FetchedAppGateKeepersManager {
   <init>(...);
   *** getGateKeeperForKey(...);
}

-keep class com.facebook.internal.FetchedAppSettings$DialogFeatureConfig
-keepclassmembers class com.facebook.internal.FetchedAppSettings$DialogFeatureConfig {
   *** getDialogName(...);
   *** getFallbackUrl(...);
   *** getFeatureName(...);
   *** getVersionSpec(...);
   *** parseDialogConfig(...);
}

-keep class com.facebook.internal.FetchedAppSettings
-keepclassmembers class com.facebook.internal.FetchedAppSettings {
   *** getAutomaticLoggingEnabled(...);
   *** getCodelessEventsEnabled(...);
   *** getDialogConfigurations(...);
   *** getErrorClassification(...);
   *** getEventBindings(...);
   *** getIAPAutomaticLoggingEnabled(...);
   *** getMonitorViaDialogEnabled(...);
   *** getNuxContent(...);
   *** getNuxEnabled(...);
   *** getRawAamRules(...);
   *** getRestrictiveDataSetting(...);
   *** getSdkUpdateMessage(...);
   *** getSessionTimeoutInSeconds(...);
   *** getSmartLoginBookmarkIconURL(...);
   *** getSmartLoginMenuIconURL(...);
   *** getSmartLoginOptions(...);
   *** getSuggestedEventsSetting(...);
   *** getTrackUninstallEnabled(...);
   *** getDialogFeatureConfig(...);
   *** supportsImplicitLogging(...);
}

-keep class com.facebook.internal.FetchedAppSettingsManager$FetchAppSettingState
-keepclassmembers class com.facebook.internal.FetchedAppSettingsManager$FetchAppSettingState {
   *** valueOf(...);
   *** values(...);
}

-keep class com.facebook.internal.FetchedAppSettingsManager$FetchedAppSettingsCallback
-keepclassmembers class com.facebook.internal.FetchedAppSettingsManager$FetchedAppSettingsCallback {
}

-keep class com.facebook.internal.FetchedAppSettingsManager
-keepclassmembers class com.facebook.internal.FetchedAppSettingsManager {
   <init>(...);
   *** getAppSettingsAsync(...);
   *** getAppSettingsWithoutQuery(...);
   *** loadAppSettingsAsync(...);
   *** queryAppSettings(...);
   *** setIsUnityInit(...);
}

-keep class com.facebook.internal.FileLruCache$Limits
-keepclassmembers class com.facebook.internal.FileLruCache$Limits {
   <init>(...);
}

-keep class com.facebook.internal.FileLruCache
-keepclassmembers class com.facebook.internal.FileLruCache {
   <init>(...);
   *** getLocation(...);
   *** clearCache(...);
   *** get(...);
   *** get(...);
   *** interceptAndPut(...);
   *** openPutStream(...);
   *** openPutStream(...);
}

-keep class com.facebook.internal.ImageDownloader
-keepclassmembers class com.facebook.internal.ImageDownloader {
   <init>(...);
   *** cancelRequest(...);
   *** clearCache(...);
   *** downloadAsync(...);
   *** prioritizeRequest(...);
}

-keep class com.facebook.internal.ImageRequest$Builder
-keepclassmembers class com.facebook.internal.ImageRequest$Builder {
   <init>(...);
   *** build(...);
   *** setAllowCachedRedirects(...);
   *** setCallback(...);
   *** setCallerTag(...);
}

-keep class com.facebook.internal.ImageRequest$Callback
-keepclassmembers class com.facebook.internal.ImageRequest$Callback {
}

-keep class com.facebook.internal.ImageRequest
-keepclassmembers class com.facebook.internal.ImageRequest {
   *** getCallback(...);
   *** getCallerTag(...);
   *** getContext(...);
   *** getImageUri(...);
   *** isCachedRedirectAllowed(...);
   *** getProfilePictureUri(...);
   *** getProfilePictureUri(...);
}

-keep class com.facebook.internal.ImageResponse
-keepclassmembers class com.facebook.internal.ImageResponse {
   *** getBitmap(...);
   *** getError(...);
   *** isCachedRedirect(...);
   *** getRequest(...);
}

-keep class com.facebook.internal.InstallReferrerUtil$Callback
-keepclassmembers class com.facebook.internal.InstallReferrerUtil$Callback {
}

-keep class com.facebook.internal.InstallReferrerUtil
-keepclassmembers class com.facebook.internal.InstallReferrerUtil {
   *** tryUpdateReferrerInfo(...);
}

-keep class com.facebook.internal.InternalSettings
-keepclassmembers class com.facebook.internal.InternalSettings {
   <init>(...);
   *** getCustomUserAgent(...);
   *** setCustomUserAgent(...);
   *** isUnityApp(...);
}

-keep class com.facebook.internal.LockOnGetVariable
-keepclassmembers class com.facebook.internal.LockOnGetVariable {
   <init>(...);
   <init>(...);
   *** getValue(...);
}

-keep class com.facebook.internal.Logger
-keepclassmembers class com.facebook.internal.Logger {
   <init>(...);
   *** getContents(...);
   *** getPriority(...);
   *** setPriority(...);
   *** append(...);
   *** append(...);
   *** append(...);
   *** appendKeyValue(...);
   *** log(...);
   *** log(...);
   *** log(...);
   *** log(...);
   *** log(...);
   *** logString(...);
   *** registerAccessToken(...);
   *** registerStringToReplace(...);
}

-keep class com.facebook.internal.NativeAppCallAttachmentStore$Attachment
-keepclassmembers class com.facebook.internal.NativeAppCallAttachmentStore$Attachment {
   *** getAttachmentUrl(...);
   *** getOriginalUri(...);
}

-keep class com.facebook.internal.NativeAppCallAttachmentStore
-keepclassmembers class com.facebook.internal.NativeAppCallAttachmentStore {
   *** addAttachments(...);
   *** cleanupAllAttachments(...);
   *** cleanupAttachmentsForCall(...);
   *** createAttachment(...);
   *** createAttachment(...);
   *** openAttachment(...);
}

-keep class com.facebook.internal.NativeProtocol$ProtocolVersionQueryResult
-keepclassmembers class com.facebook.internal.NativeProtocol$ProtocolVersionQueryResult {
   *** getAppInfo(...);
   *** getProtocolVersion(...);
   *** create(...);
   *** createEmpty(...);
}

-keep class com.facebook.internal.NativeProtocol
-keepclassmembers class com.facebook.internal.NativeProtocol {
   <init>(...);
   *** getLatestKnownVersion(...);
   *** computeLatestAvailableVersionFromVersionSpec(...);
   *** createBundleForException(...);
   *** createFacebookLiteIntent(...);
   *** createPlatformActivityIntent(...);
   *** createPlatformServiceIntent(...);
   *** createProtocolResultIntent(...);
   *** createProxyAuthIntent(...);
   *** createTokenRefreshIntent(...);
   *** getBridgeArgumentsFromIntent(...);
   *** getCallIdFromIntent(...);
   *** getErrorDataFromResultIntent(...);
   *** getExceptionFromErrorData(...);
   *** getLatestAvailableProtocolVersionForAction(...);
   *** getLatestAvailableProtocolVersionForService(...);
   *** getMethodArgumentsFromIntent(...);
   *** getProtocolVersionFromIntent(...);
   *** getSuccessResultsFromIntent(...);
   *** isErrorResult(...);
   *** isVersionCompatibleWithBucketedIntent(...);
   *** setupProtocolRequestIntent(...);
   *** updateAllAvailableProtocolVersionsAsync(...);
}

-keep class com.facebook.internal.ServerProtocol
-keepclassmembers class com.facebook.internal.ServerProtocol {
   <init>(...);
   *** getDefaultAPIVersion(...);
   *** getDialogAuthority(...);
   *** getGraphUrlBase(...);
   *** getGraphVideoUrlBase(...);
   *** getQueryParamsForPlatformActivityIntentWebFallback(...);
}

-keep class com.facebook.internal.SmartLoginOption
-keepclassmembers class com.facebook.internal.SmartLoginOption {
   *** getValue(...);
   *** parseOptions(...);
   *** valueOf(...);
   *** values(...);
}

-keep class com.facebook.internal.Utility$GraphMeRequestWithCacheCallback
-keepclassmembers class com.facebook.internal.Utility$GraphMeRequestWithCacheCallback {
}

-keep class com.facebook.internal.Utility$Mapper
-keepclassmembers class com.facebook.internal.Utility$Mapper {
}

-keep class com.facebook.internal.Utility$PermissionsLists
-keepclassmembers class com.facebook.internal.Utility$PermissionsLists {
   <init>(...);
   *** getDeclinedPermissions(...);
   *** getExpiredPermissions(...);
   *** getGrantedPermissions(...);
}

-keep class com.facebook.internal.Utility$Predicate
-keepclassmembers class com.facebook.internal.Utility$Predicate {
}

-keep class com.facebook.internal.Utility
-keepclassmembers class com.facebook.internal.Utility {
   <init>(...);
   *** getAppVersion(...);
   *** getCurrentLocale(...);
   *** getDataProcessingOptions(...);
   *** isAutoAppLinkSetup(...);
   *** isDataProcessingRestricted(...);
   *** getResourceLocale(...);
   *** JsonStrToMap(...);
   *** areObjectsEqual(...);
   *** arrayList(...);
   *** asListNoNulls(...);
   *** awaitGetGraphMeRequestWithCache(...);
   *** buildUri(...);
   *** clearCaches(...);
   *** clearFacebookCookies(...);
   *** closeQuietly(...);
   *** coerceValueIfNullOrEmpty(...);
   *** convertJSONArrayToList(...);
   *** convertJSONObjectToStringMap(...);
   *** copyAndCloseInputStream(...);
   *** deleteDirectory(...);
   *** disconnectQuietly(...);
   *** filter(...);
   *** generateRandomString(...);
   *** getActivityName(...);
   *** getAppName(...);
   *** getBundleLongAsDate(...);
   *** getContentSize(...);
   *** getGraphMeRequestWithCacheAsync(...);
   *** getMetadataApplicationId(...);
   *** getMethodQuietly(...);
   *** getMethodQuietly(...);
   *** getStringPropertyAsJSON(...);
   *** getUriString(...);
   *** handlePermissionResponse(...);
   *** hasSameId(...);
   *** hashSet(...);
   *** intersectRanges(...);
   *** invokeMethodQuietly(...);
   *** isAutofillAvailable(...);
   *** isChromeOS(...);
   *** isContentUri(...);
   *** isCurrentAccessToken(...);
   *** isFileUri(...);
   *** isNullOrEmpty(...);
   *** isNullOrEmpty(...);
   *** isSubset(...);
   *** isWebUri(...);
   *** jsonArrayToSet(...);
   *** jsonArrayToStringList(...);
   *** logd(...);
   *** logd(...);
   *** logd(...);
   *** map(...);
   *** mapToJsonStr(...);
   *** md5hash(...);
   *** mustFixWindowParamsForAutofill(...);
   *** parseUrlQueryString(...);
   *** putCommaSeparatedStringList(...);
   *** putJSONValueInBundle(...);
   *** putNonEmptyString(...);
   *** putUri(...);
   *** readStreamToString(...);
   *** readStringMapFromParcel(...);
   *** runOnNonUiThread(...);
   *** safeGetStringFromResponse(...);
   *** setAppEventAttributionParameters(...);
   *** setAppEventExtendedDeviceInfoParameters(...);
   *** sha1hash(...);
   *** sha1hash(...);
   *** sha256hash(...);
   *** sha256hash(...);
   *** stringsEqualOrEmpty(...);
   *** tryGetJSONArrayFromResponse(...);
   *** tryGetJSONObjectFromResponse(...);
   *** unmodifiableCollection(...);
   *** writeStringMapToParcel(...);
}

-keep class com.facebook.internal.Validate
-keepclassmembers class com.facebook.internal.Validate {
   <init>(...);
   *** containsNoNullOrEmpty(...);
   *** containsNoNulls(...);
   *** hasAppID(...);
   *** hasBluetoothPermission(...);
   *** hasChangeWifiStatePermission(...);
   *** hasClientToken(...);
   *** hasContentProvider(...);
   *** hasCustomTabRedirectActivity(...);
   *** hasFacebookActivity(...);
   *** hasFacebookActivity(...);
   *** hasInternetPermissions(...);
   *** hasInternetPermissions(...);
   *** hasLocationPermission(...);
   *** hasPermission(...);
   *** hasWiFiPermission(...);
   *** notEmpty(...);
   *** notEmptyAndContainsNoNulls(...);
   *** notNull(...);
   *** notNullOrEmpty(...);
   *** oneOf(...);
   *** runningOnUiThread(...);
   *** sdkInitialized(...);
}

-keep class com.facebook.internal.WorkQueue$WorkItem
-keepclassmembers class com.facebook.internal.WorkQueue$WorkItem {
}

-keep class com.facebook.internal.WorkQueue
-keepclassmembers class com.facebook.internal.WorkQueue {
   <init>(...);
   <init>(...);
   <init>(...);
   *** addActiveWorkItem(...);
   *** addActiveWorkItem(...);
   *** validate(...);
}

-keep class com.facebook.internal.security.CertificateUtil
-keepclassmembers class com.facebook.internal.security.CertificateUtil {
   *** getCertificateHash(...);
}

-keep class com.facebook.internal.metrics.MetricsUtil
-keepclassmembers class com.facebook.internal.metrics.MetricsUtil {
   *** getInstance(...);
   *** getLastTimeDifferenceFor(...);
   *** startMeasureFor(...);
   *** stopMeasureFor(...);
}

-keep class com.facebook.internal.metrics.Tag
-keepclassmembers class com.facebook.internal.metrics.Tag {
   *** getSuffix(...);
   *** valueOf(...);
   *** values(...);
}

-keep class com.facebook.internal.logging.ExternalLog
-keepclassmembers class com.facebook.internal.logging.ExternalLog {
}

-keep class com.facebook.internal.logging.LoggingCache
-keepclassmembers class com.facebook.internal.logging.LoggingCache {
}

-keep class com.facebook.internal.logging.LoggingManager
-keepclassmembers class com.facebook.internal.logging.LoggingManager {
}

-keep class com.facebook.internal.logging.LoggingStore
-keepclassmembers class com.facebook.internal.logging.LoggingStore {
}

-keep class com.facebook.internal.logging.LogCategory
-keepclassmembers class com.facebook.internal.logging.LogCategory {
   *** valueOf(...);
   *** values(...);
}

-keep class com.facebook.internal.logging.LogEvent
-keepclassmembers class com.facebook.internal.logging.LogEvent {
   <init>(...);
   *** getEventName(...);
   *** getLogCategory(...);
   *** upperCaseEventName(...);
}

-keep class com.facebook.internal.logging.monitor.Monitor
-keepclassmembers class com.facebook.internal.logging.monitor.Monitor {
   *** isEnabled(...);
   *** addLog(...);
   *** enable(...);
   *** loadSamplingRatesMapAsync(...);
}

-keep class com.facebook.internal.logging.monitor.MonitorLog$LogBuilder
-keepclassmembers class com.facebook.internal.logging.monitor.MonitorLog$LogBuilder {
   <init>(...);
   *** build(...);
   *** timeSpent(...);
   *** timeStart(...);
}

-keep class com.facebook.internal.logging.monitor.MonitorLog
-keepclassmembers class com.facebook.internal.logging.monitor.MonitorLog {
   <init>(...);
   *** getEventName(...);
   *** getLogCategory(...);
   *** getTimeSpent(...);
   *** getTimeStart(...);
   *** convertToJSONObject(...);
}

-keep class com.facebook.internal.logging.monitor.MonitorLoggingManager
-keepclassmembers class com.facebook.internal.logging.monitor.MonitorLoggingManager {
   *** addLog(...);
   *** flushAndWait(...);
   *** flushLoggingStore(...);
   *** getInstance(...);
}

-keep class com.facebook.internal.logging.monitor.MonitorLoggingQueue
-keepclassmembers class com.facebook.internal.logging.monitor.MonitorLoggingQueue {
   *** getInstance(...);
   *** isEmpty(...);
   *** addLog(...);
   *** addLogs(...);
   *** fetchAllLogs(...);
   *** fetchLog(...);
}

-keep class com.facebook.internal.logging.monitor.MonitorLoggingStore
-keepclassmembers class com.facebook.internal.logging.monitor.MonitorLoggingStore {
   *** getInstance(...);
   *** readAndClearStore(...);
   *** saveLogsToDisk(...);
}

-keep class com.facebook.internal.logging.monitor.MonitorLogServerProtocol
-keepclassmembers class com.facebook.internal.logging.monitor.MonitorLogServerProtocol {
   <init>(...);
}

-keep class com.facebook.internal.logging.monitor.MonitorManager$MonitorCreator
-keepclassmembers class com.facebook.internal.logging.monitor.MonitorManager$MonitorCreator {
}

-keep class com.facebook.internal.logging.monitor.MonitorManager
-keepclassmembers class com.facebook.internal.logging.monitor.MonitorManager {
   <init>(...);
   *** start(...);
}

-keep class com.facebook.internal.instrument.ExceptionAnalyzer
-keepclassmembers class com.facebook.internal.instrument.ExceptionAnalyzer {
   <init>(...);
   *** enable(...);
   *** execute(...);
}

-keep class com.facebook.internal.instrument.InstrumentData$Builder
-keepclassmembers class com.facebook.internal.instrument.InstrumentData$Builder {
   <init>(...);
   *** build(...);
   *** build(...);
   *** load(...);
}

-keep class com.facebook.internal.instrument.InstrumentData$Type
-keepclassmembers class com.facebook.internal.instrument.InstrumentData$Type {
   *** getLogPrefix(...);
   *** valueOf(...);
   *** values(...);
}

-keep class com.facebook.internal.instrument.InstrumentData
-keepclassmembers class com.facebook.internal.instrument.InstrumentData {
   *** isValid(...);
   *** clear(...);
   *** compareTo(...);
   *** save(...);
}

-keep class com.facebook.internal.instrument.InstrumentManager
-keepclassmembers class com.facebook.internal.instrument.InstrumentManager {
   <init>(...);
   *** start(...);
}

-keep class com.facebook.internal.instrument.InstrumentUtility
-keepclassmembers class com.facebook.internal.instrument.InstrumentUtility {
   <init>(...);
   *** getInstrumentReportDir(...);
   *** deleteFile(...);
   *** getCause(...);
   *** getStackTrace(...);
   *** isSDKRelatedException(...);
   *** listExceptionAnalysisReportFiles(...);
   *** listExceptionReportFiles(...);
   *** readFile(...);
   *** sendReports(...);
   *** writeFile(...);
}

-keep class com.facebook.internal.instrument.threadcheck.ThreadCheckHandler
-keepclassmembers class com.facebook.internal.instrument.threadcheck.ThreadCheckHandler {
   *** enable(...);
   *** uiThreadViolationDetected(...);
   *** workerThreadViolationDetected(...);
}

-keep class com.facebook.internal.instrument.errorreport.ErrorReportData
-keepclassmembers class com.facebook.internal.instrument.errorreport.ErrorReportData {
   <init>(...);
   <init>(...);
   *** isValid(...);
   *** getParameters(...);
   *** clear(...);
   *** compareTo(...);
   *** save(...);
}

-keep class com.facebook.internal.instrument.errorreport.ErrorReportHandler
-keepclassmembers class com.facebook.internal.instrument.errorreport.ErrorReportHandler {
   <init>(...);
   *** enable(...);
   *** listErrorReportFiles(...);
   *** save(...);
   *** sendErrorReports(...);
}

-keep class com.facebook.internal.instrument.crashshield.CrashShieldHandler
-keepclassmembers class com.facebook.internal.instrument.crashshield.CrashShieldHandler {
   <init>(...);
   *** enable(...);
   *** handleThrowable(...);
   *** isObjectCrashing(...);
   *** methodFinished(...);
   *** reset(...);
   *** resetCrashingObjects(...);
}

-keep class com.facebook.internal.instrument.crashshield.AutoHandleExceptions
-keepclassmembers class com.facebook.internal.instrument.crashshield.AutoHandleExceptions {
}

-keep class com.facebook.internal.instrument.crashshield.NoAutoExceptionHandling
-keepclassmembers class com.facebook.internal.instrument.crashshield.NoAutoExceptionHandling {
}

-keep class com.facebook.internal.instrument.crashreport.CrashHandler
-keepclassmembers class com.facebook.internal.instrument.crashreport.CrashHandler {
   *** enable(...);
   *** uncaughtException(...);
}

-keep class com.facebook.core.BuildConfig
-keepclassmembers class com.facebook.core.BuildConfig {
   <init>(...);
}

-keep class com.facebook.core.Core
-keepclassmembers class com.facebook.core.Core {
   <init>(...);
}

-keep class com.facebook.appevents.integrity.IntegrityManager
-keepclassmembers class com.facebook.appevents.integrity.IntegrityManager {
   <init>(...);
   *** enable(...);
   *** processParameters(...);
}

-keep class com.facebook.appevents.eventdeactivation.EventDeactivationManager$DeprecatedParamFilter
-keepclassmembers class com.facebook.appevents.eventdeactivation.EventDeactivationManager$DeprecatedParamFilter {
}

-keep class com.facebook.appevents.eventdeactivation.EventDeactivationManager
-keepclassmembers class com.facebook.appevents.eventdeactivation.EventDeactivationManager {
   <init>(...);
   *** enable(...);
   *** processDeprecatedParameters(...);
   *** processEvents(...);
}

-keep class com.facebook.appevents.AppEvent$SerializationProxyV1
-keepclassmembers class com.facebook.appevents.AppEvent$SerializationProxyV1 {
}

-keep class com.facebook.appevents.AppEvent$SerializationProxyV2
-keepclassmembers class com.facebook.appevents.AppEvent$SerializationProxyV2 {
}

-keep class com.facebook.appevents.AppEvent
-keepclassmembers class com.facebook.appevents.AppEvent {
   <init>(...);
   *** isChecksumValid(...);
   *** getIsImplicit(...);
   *** getJSONObject(...);
   *** getName(...);
}

-keep class com.facebook.appevents.AppEventsConstants
-keepclassmembers class com.facebook.appevents.AppEventsConstants {
   <init>(...);
}

-keep class com.facebook.appevents.AppEventsLogger$FlushBehavior
-keepclassmembers class com.facebook.appevents.AppEventsLogger$FlushBehavior {
   *** valueOf(...);
   *** values(...);
}

-keep class com.facebook.appevents.AppEventsLogger$ProductAvailability
-keepclassmembers class com.facebook.appevents.AppEventsLogger$ProductAvailability {
   *** valueOf(...);
   *** values(...);
}

-keep class com.facebook.appevents.AppEventsLogger$ProductCondition
-keepclassmembers class com.facebook.appevents.AppEventsLogger$ProductCondition {
   *** valueOf(...);
   *** values(...);
}

-keep class com.facebook.appevents.AppEventsLogger
-keepclassmembers class com.facebook.appevents.AppEventsLogger {
   *** getApplicationId(...);
   *** getUserData(...);
   *** getUserID(...);
   *** setUserID(...);
   *** activateApp(...);
   *** activateApp(...);
   *** activateApp(...);
   *** activateApp(...);
   *** augmentWebView(...);
   *** clearUserData(...);
   *** clearUserID(...);
   *** deactivateApp(...);
   *** deactivateApp(...);
   *** flush(...);
   *** getAnonymousAppDeviceGUID(...);
   *** getFlushBehavior(...);
   *** initializeLib(...);
   *** isValidForAccessToken(...);
   *** logEvent(...);
   *** logEvent(...);
   *** logEvent(...);
   *** logEvent(...);
   *** logProductItem(...);
   *** logPurchase(...);
   *** logPurchase(...);
   *** logPurchaseImplicitly(...);
   *** logPushNotificationOpen(...);
   *** logPushNotificationOpen(...);
   *** logSdkEvent(...);
   *** newLogger(...);
   *** newLogger(...);
   *** newLogger(...);
   *** newLogger(...);
   *** onContextStop(...);
   *** setFlushBehavior(...);
   *** setInstallReferrer(...);
   *** setPushNotificationsRegistrationId(...);
   *** setUserData(...);
   *** setUserData(...);
   *** updateUserProperties(...);
   *** updateUserProperties(...);
}

-keep class com.facebook.appevents.AppEventsManager
-keepclassmembers class com.facebook.appevents.AppEventsManager {
   <init>(...);
   *** start(...);
}

-keep class com.facebook.appevents.FlushResult
-keepclassmembers class com.facebook.appevents.FlushResult {
   *** valueOf(...);
   *** values(...);
}

-keep class com.facebook.appevents.InternalAppEventsLogger
-keepclassmembers class com.facebook.appevents.InternalAppEventsLogger {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getFlushBehavior(...);
   *** flush(...);
   *** logEvent(...);
   *** logEvent(...);
   *** logEventFromSE(...);
   *** logEventImplicitly(...);
   *** logEventImplicitly(...);
   *** logEventImplicitly(...);
   *** logEventImplicitly(...);
   *** logPurchaseImplicitly(...);
   *** setInternalUserData(...);
   *** setUserData(...);
}

-keep class com.facebook.appevents.UserDataStore
-keepclassmembers class com.facebook.appevents.UserDataStore {
   <init>(...);
   *** getAllHashedUserData(...);
}

-keep class com.facebook.appevents.suggestedevents.SuggestedEventsManager
-keepclassmembers class com.facebook.appevents.suggestedevents.SuggestedEventsManager {
   <init>(...);
   *** isEnabled(...);
   *** enable(...);
   *** trackActivity(...);
}

-keep class com.facebook.appevents.suggestedevents.ViewOnClickListener
-keepclassmembers class com.facebook.appevents.suggestedevents.ViewOnClickListener {
   *** onClick(...);
}

-keep class com.facebook.appevents.restrictivedatafilter.RestrictiveDataManager$RestrictiveParamFilter
-keepclassmembers class com.facebook.appevents.restrictivedatafilter.RestrictiveDataManager$RestrictiveParamFilter {
}

-keep class com.facebook.appevents.restrictivedatafilter.RestrictiveDataManager
-keepclassmembers class com.facebook.appevents.restrictivedatafilter.RestrictiveDataManager {
   <init>(...);
   *** enable(...);
   *** processEvent(...);
   *** processParameters(...);
}

-keep class com.facebook.appevents.ml.Model
-keepclassmembers class com.facebook.appevents.ml.Model {
   *** build(...);
   *** predictOnMTML(...);
}

-keep class com.facebook.appevents.ml.ModelManager$Task
-keepclassmembers class com.facebook.appevents.ml.ModelManager$Task {
   *** toKey(...);
   *** toUseCase(...);
   *** valueOf(...);
   *** values(...);
}

-keep class com.facebook.appevents.ml.ModelManager
-keepclassmembers class com.facebook.appevents.ml.ModelManager {
   <init>(...);
   *** enable(...);
   *** getRuleFile(...);
   *** predict(...);
}

-keep class com.facebook.appevents.ml.MTensor
-keepclassmembers class com.facebook.appevents.ml.MTensor {
   <init>(...);
   *** getShapeSize(...);
   *** getData(...);
   *** getShape(...);
   *** reshape(...);
}

-keep class com.facebook.appevents.ml.Utils
-keepclassmembers class com.facebook.appevents.ml.Utils {
   <init>(...);
   *** getMlDir(...);
}

-keep class com.facebook.appevents.codeless.CodelessLoggingEventListener$AutoLoggingOnClickListener
-keepclassmembers class com.facebook.appevents.codeless.CodelessLoggingEventListener$AutoLoggingOnClickListener {
   *** getSupportCodelessLogging(...);
   *** onClick(...);
}

-keep class com.facebook.appevents.codeless.CodelessLoggingEventListener$AutoLoggingOnItemClickListener
-keepclassmembers class com.facebook.appevents.codeless.CodelessLoggingEventListener$AutoLoggingOnItemClickListener {
   *** getSupportCodelessLogging(...);
   *** onItemClick(...);
}

-keep class com.facebook.appevents.codeless.CodelessLoggingEventListener
-keepclassmembers class com.facebook.appevents.codeless.CodelessLoggingEventListener {
   <init>(...);
   *** getOnClickListener(...);
   *** getOnItemClickListener(...);
}

-keep class com.facebook.appevents.codeless.CodelessManager
-keepclassmembers class com.facebook.appevents.codeless.CodelessManager {
   <init>(...);
   *** disable(...);
   *** enable(...);
   *** onActivityDestroyed(...);
   *** onActivityPaused(...);
   *** onActivityResumed(...);
}

-keep class com.facebook.appevents.codeless.RCTCodelessLoggingEventListener$AutoLoggingOnTouchListener
-keepclassmembers class com.facebook.appevents.codeless.RCTCodelessLoggingEventListener$AutoLoggingOnTouchListener {
   <init>(...);
   *** getSupportCodelessLogging(...);
   *** onTouch(...);
}

-keep class com.facebook.appevents.codeless.RCTCodelessLoggingEventListener
-keepclassmembers class com.facebook.appevents.codeless.RCTCodelessLoggingEventListener {
   <init>(...);
   *** getOnTouchListener(...);
}

-keep class com.facebook.appevents.codeless.ViewIndexer
-keepclassmembers class com.facebook.appevents.codeless.ViewIndexer {
   <init>(...);
   *** buildAppIndexingRequest(...);
   *** schedule(...);
   *** sendToServerUnity(...);
   *** sendToServerUnityInstance(...);
   *** unschedule(...);
}

-keep class com.facebook.appevents.codeless.internal.Constants
-keepclassmembers class com.facebook.appevents.codeless.internal.Constants {
   <init>(...);
}

-keep class com.facebook.appevents.codeless.internal.EventBinding$ActionType
-keepclassmembers class com.facebook.appevents.codeless.internal.EventBinding$ActionType {
   *** valueOf(...);
   *** values(...);
}

-keep class com.facebook.appevents.codeless.internal.EventBinding$MappingMethod
-keepclassmembers class com.facebook.appevents.codeless.internal.EventBinding$MappingMethod {
   *** valueOf(...);
   *** values(...);
}

-keep class com.facebook.appevents.codeless.internal.EventBinding
-keepclassmembers class com.facebook.appevents.codeless.internal.EventBinding {
   <init>(...);
   *** getActivityName(...);
   *** getAppVersion(...);
   *** getComponentId(...);
   *** getEventName(...);
   *** getMethod(...);
   *** getPathType(...);
   *** getType(...);
   *** getViewParameters(...);
   *** getViewPath(...);
   *** getInstanceFromJson(...);
   *** parseArray(...);
}

-keep class com.facebook.appevents.codeless.internal.ParameterComponent
-keepclassmembers class com.facebook.appevents.codeless.internal.ParameterComponent {
   <init>(...);
}

-keep class com.facebook.appevents.codeless.internal.PathComponent$MatchBitmaskType
-keepclassmembers class com.facebook.appevents.codeless.internal.PathComponent$MatchBitmaskType {
   *** getValue(...);
   *** valueOf(...);
   *** values(...);
}

-keep class com.facebook.appevents.codeless.internal.PathComponent
-keepclassmembers class com.facebook.appevents.codeless.internal.PathComponent {
}

-keep class com.facebook.appevents.codeless.internal.SensitiveUserDataUtils
-keepclassmembers class com.facebook.appevents.codeless.internal.SensitiveUserDataUtils {
   <init>(...);
   *** isSensitiveUserData(...);
}

-keep class com.facebook.appevents.codeless.internal.UnityReflection
-keepclassmembers class com.facebook.appevents.codeless.internal.UnityReflection {
   <init>(...);
   *** captureViewHierarchy(...);
   *** sendEventMapping(...);
   *** sendMessage(...);
}

-keep class com.facebook.appevents.codeless.internal.ViewHierarchy
-keepclassmembers class com.facebook.appevents.codeless.internal.ViewHierarchy {
   <init>(...);
   *** findRCTRootView(...);
   *** getChildrenOfView(...);
   *** getClassTypeBitmask(...);
   *** getDictionaryOfView(...);
   *** getExistingOnClickListener(...);
   *** getExistingOnTouchListener(...);
   *** getHintOfView(...);
   *** getParentOfView(...);
   *** getTextOfView(...);
   *** getTouchReactView(...);
   *** isRCTButton(...);
   *** isRCTRootView(...);
   *** isRCTTextView(...);
   *** isRCTViewGroup(...);
   *** setOnClickListener(...);
   *** updateAppearanceOfView(...);
   *** updateBasicInfoOfView(...);
}

-keep class com.facebook.appevents.aam.MetadataIndexer
-keepclassmembers class com.facebook.appevents.aam.MetadataIndexer {
   <init>(...);
   *** enable(...);
   *** onActivityResumed(...);
}

-keep class com.facebook.appevents.aam.MetadataRule
-keepclassmembers class com.facebook.appevents.aam.MetadataRule {
   *** getEnabledRuleNames(...);
}

-keep class com.facebook.appevents.internal.FileDownloadTask$Callback
-keepclassmembers class com.facebook.appevents.internal.FileDownloadTask$Callback {
}

-keep class com.facebook.appevents.internal.FileDownloadTask
-keepclassmembers class com.facebook.appevents.internal.FileDownloadTask {
   *** doInBackground(...);
   <init>(...);
   *** onPostExecute(...);
}

-keep class com.facebook.appevents.internal.ActivityLifecycleTracker
-keepclassmembers class com.facebook.appevents.internal.ActivityLifecycleTracker {
   <init>(...);
   *** getCurrentActivity(...);
   *** getCurrentSessionGuid(...);
   *** isInBackground(...);
   *** isTracking(...);
   *** onActivityCreated(...);
   *** onActivityResumed(...);
   *** startTracking(...);
}

-keep class com.facebook.appevents.internal.AppEventsLoggerUtility$GraphAPIActivityType
-keepclassmembers class com.facebook.appevents.internal.AppEventsLoggerUtility$GraphAPIActivityType {
   *** valueOf(...);
   *** values(...);
}

-keep class com.facebook.appevents.internal.AppEventsLoggerUtility
-keepclassmembers class com.facebook.appevents.internal.AppEventsLoggerUtility {
   <init>(...);
   *** getJSONObjectForGraphAPICall(...);
}

-keep class com.facebook.appevents.internal.AppEventUtility
-keepclassmembers class com.facebook.appevents.internal.AppEventUtility {
   <init>(...);
   *** getAppVersion(...);
   *** isEmulator(...);
   *** assertIsMainThread(...);
   *** assertIsNotMainThread(...);
   *** bytesToHex(...);
   *** getRootView(...);
   *** normalizePrice(...);
}

-keep class com.facebook.appevents.internal.AutomaticAnalyticsLogger
-keepclassmembers class com.facebook.appevents.internal.AutomaticAnalyticsLogger {
   <init>(...);
   *** isImplicitPurchaseLoggingEnabled(...);
   *** logActivateAppEvent(...);
   *** logActivityTimeSpentEvent(...);
}

-keep class com.facebook.appevents.internal.Constants
-keepclassmembers class com.facebook.appevents.internal.Constants {
   <init>(...);
   *** getDefaultAppEventsSessionTimeoutInSeconds(...);
}

-keep class com.facebook.appevents.internal.InAppPurchaseActivityLifecycleTracker
-keepclassmembers class com.facebook.appevents.internal.InAppPurchaseActivityLifecycleTracker {
   <init>(...);
   *** update(...);
}

-keep class com.facebook.appevents.internal.ViewHierarchyConstants
-keepclassmembers class com.facebook.appevents.internal.ViewHierarchyConstants {
   <init>(...);
}

# ACW for Xamarin.Facebook.Login.Android
-keep class com.facebook.login.BuildConfig
-keepclassmembers class com.facebook.login.BuildConfig {
   <init>(...);
}

-keep class com.facebook.login.DeviceLoginManager
-keepclassmembers class com.facebook.login.DeviceLoginManager {
   <init>(...);
   *** getDeviceAuthTargetUserId(...);
   *** setDeviceAuthTargetUserId(...);
   *** getDeviceRedirectUri(...);
   *** setDeviceRedirectUri(...);
   *** getInstance(...);
}

-keep class com.facebook.login.Login
-keepclassmembers class com.facebook.login.Login {
   <init>(...);
}

-keep class com.facebook.login.widget.DeviceLoginButton
-keepclassmembers class com.facebook.login.widget.DeviceLoginButton {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getDeviceRedirectUri(...);
   *** setDeviceRedirectUri(...);
}

-keep class com.facebook.login.widget.LoginButton$LoginButtonProperties
-keepclassmembers class com.facebook.login.widget.LoginButton$LoginButtonProperties {
   *** getAuthType(...);
   *** setAuthType(...);
   *** getDefaultAudience(...);
   *** setDefaultAudience(...);
   *** getLoginBehavior(...);
   *** setLoginBehavior(...);
   *** clearPermissions(...);
   *** setPermissions(...);
}

-keep class com.facebook.login.widget.LoginButton$LoginClickListener
-keepclassmembers class com.facebook.login.widget.LoginButton$LoginClickListener {
   <init>(...);
   *** getLoginManager(...);
   *** onClick(...);
   *** performLogin(...);
   *** performLogout(...);
}

-keep class com.facebook.login.widget.LoginButton$ToolTipMode
-keepclassmembers class com.facebook.login.widget.LoginButton$ToolTipMode {
   *** getValue(...);
   *** fromInt(...);
   *** valueOf(...);
   *** values(...);
}

-keep class com.facebook.login.widget.LoginButton
-keepclassmembers class com.facebook.login.widget.LoginButton {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getAuthType(...);
   *** setAuthType(...);
   *** getDefaultAudience(...);
   *** setDefaultAudience(...);
   *** getDefaultRequestCode(...);
   *** getLoginBehavior(...);
   *** setLoginBehavior(...);
   *** getNewLoginClickListener(...);
   *** getToolTipDisplayTime(...);
   *** setToolTipDisplayTime(...);
   *** clearPermissions(...);
   *** dismissToolTip(...);
   *** getToolTipMode(...);
   *** registerCallback(...);
   *** setLoginText(...);
   *** setLogoutText(...);
   *** setPermissions(...);
   *** setPermissions(...);
   *** setPublishPermissions(...);
   *** setPublishPermissions(...);
   *** setReadPermissions(...);
   *** setReadPermissions(...);
   *** setToolTipMode(...);
   *** setToolTipStyle(...);
   *** unregisterCallback(...);
}

-keep class com.facebook.login.widget.ProfilePictureView$OnErrorListener
-keepclassmembers class com.facebook.login.widget.ProfilePictureView$OnErrorListener {
}

-keep class mono.com.facebook.login.widget.ProfilePictureView_OnErrorListenerImplementor
-keepclassmembers class mono.com.facebook.login.widget.ProfilePictureView_OnErrorListenerImplementor {
}

-keep class com.facebook.login.widget.ProfilePictureView
-keepclassmembers class com.facebook.login.widget.ProfilePictureView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isCropped(...);
   *** setCropped(...);
   *** getOnErrorListener(...);
   *** setOnErrorListener(...);
   *** getPresetSize(...);
   *** setPresetSize(...);
   *** getProfileId(...);
   *** setProfileId(...);
   *** setDefaultProfilePicture(...);
}

-keep class com.facebook.login.widget.ToolTipPopup$Style
-keepclassmembers class com.facebook.login.widget.ToolTipPopup$Style {
   *** valueOf(...);
   *** values(...);
}

-keep class com.facebook.login.widget.ToolTipPopup
-keepclassmembers class com.facebook.login.widget.ToolTipPopup {
   <init>(...);
   *** dismiss(...);
   *** setNuxDisplayTime(...);
   *** setStyle(...);
   *** show(...);
}

# ACW for Xamarin.Facebook.Messenger.Android
-keep class com.facebook.messenger.BuildConfig
-keepclassmembers class com.facebook.messenger.BuildConfig {
   <init>(...);
}

-keep class com.facebook.messenger.Messenger
-keepclassmembers class com.facebook.messenger.Messenger {
   <init>(...);
}

-keep class com.facebook.messenger.MessengerThreadParams$Origin
-keepclassmembers class com.facebook.messenger.MessengerThreadParams$Origin {
   *** valueOf(...);
   *** values(...);
}

-keep class com.facebook.messenger.MessengerThreadParams
-keepclassmembers class com.facebook.messenger.MessengerThreadParams {
   <init>(...);
}

-keep class com.facebook.messenger.MessengerUtils
-keepclassmembers class com.facebook.messenger.MessengerUtils {
   <init>(...);
   *** finishShareToMessenger(...);
   *** getMessengerThreadParamsForIntent(...);
   *** hasMessengerInstalled(...);
   *** openMessengerInPlayStore(...);
   *** shareToMessenger(...);
}

-keep class com.facebook.messenger.ShareToMessengerParams
-keepclassmembers class com.facebook.messenger.ShareToMessengerParams {
   *** newBuilder(...);
}

-keep class com.facebook.messenger.ShareToMessengerParamsBuilder
-keepclassmembers class com.facebook.messenger.ShareToMessengerParamsBuilder {
   *** getExternalUri(...);
   *** getMetaData(...);
   *** getMimeType(...);
   *** getUri(...);
   *** build(...);
   *** setExternalUri(...);
   *** setMetaData(...);
}

# ACW for Xamarin.Facebook.Places.Android
-keep class com.facebook.places.BuildConfig
-keepclassmembers class com.facebook.places.BuildConfig {
   <init>(...);
}

-keep class com.facebook.places.PlaceManager$LocationError
-keepclassmembers class com.facebook.places.PlaceManager$LocationError {
   *** valueOf(...);
   *** values(...);
}

-keep class com.facebook.places.PlaceManager$OnRequestReadyCallback
-keepclassmembers class com.facebook.places.PlaceManager$OnRequestReadyCallback {
}

-keep class com.facebook.places.PlaceManager
-keepclassmembers class com.facebook.places.PlaceManager {
   *** newCurrentPlaceFeedbackRequest(...);
   *** newCurrentPlaceRequest(...);
   *** newPlaceInfoRequest(...);
   *** newPlaceSearchRequest(...);
   *** newPlaceSearchRequestForLocation(...);
}

-keep class com.facebook.places.Places
-keepclassmembers class com.facebook.places.Places {
   <init>(...);
}

-keep class com.facebook.places.model.CurrentPlaceFeedbackRequestParams$Builder
-keepclassmembers class com.facebook.places.model.CurrentPlaceFeedbackRequestParams$Builder {
   <init>(...);
   *** build(...);
   *** setPlaceId(...);
   *** setTracking(...);
   *** setWasHere(...);
}

-keep class com.facebook.places.model.CurrentPlaceFeedbackRequestParams
-keepclassmembers class com.facebook.places.model.CurrentPlaceFeedbackRequestParams {
   *** getPlaceId(...);
   *** getTracking(...);
   *** wasHere(...);
}

-keep class com.facebook.places.model.CurrentPlaceRequestParams$Builder
-keepclassmembers class com.facebook.places.model.CurrentPlaceRequestParams$Builder {
   <init>(...);
   *** addField(...);
   *** build(...);
   *** setLimit(...);
   *** setLocation(...);
   *** setMinConfidenceLevel(...);
   *** setScanMode(...);
}

-keep class com.facebook.places.model.CurrentPlaceRequestParams$ConfidenceLevel
-keepclassmembers class com.facebook.places.model.CurrentPlaceRequestParams$ConfidenceLevel {
   *** valueOf(...);
   *** values(...);
}

-keep class com.facebook.places.model.CurrentPlaceRequestParams$ScanMode
-keepclassmembers class com.facebook.places.model.CurrentPlaceRequestParams$ScanMode {
   *** valueOf(...);
   *** values(...);
}

-keep class com.facebook.places.model.CurrentPlaceRequestParams
-keepclassmembers class com.facebook.places.model.CurrentPlaceRequestParams {
   *** getFields(...);
   *** getLimit(...);
   *** getLocation(...);
   *** getMinConfidenceLevel(...);
   *** getScanMode(...);
}

-keep class com.facebook.places.model.PlaceFields
-keepclassmembers class com.facebook.places.model.PlaceFields {
}

-keep class com.facebook.places.model.PlaceFields
-keepclassmembers class com.facebook.places.model.PlaceFields {
}

-keep class com.facebook.places.model.PlaceInfoRequestParams$Builder
-keepclassmembers class com.facebook.places.model.PlaceInfoRequestParams$Builder {
   <init>(...);
   *** addField(...);
   *** addFields(...);
   *** build(...);
   *** setPlaceId(...);
}

-keep class com.facebook.places.model.PlaceInfoRequestParams
-keepclassmembers class com.facebook.places.model.PlaceInfoRequestParams {
   *** getFields(...);
   *** getPlaceId(...);
}

-keep class com.facebook.places.model.PlaceSearchRequestParams$Builder
-keepclassmembers class com.facebook.places.model.PlaceSearchRequestParams$Builder {
   <init>(...);
   *** addCategory(...);
   *** addField(...);
   *** build(...);
   *** setDistance(...);
   *** setLimit(...);
   *** setSearchText(...);
}

-keep class com.facebook.places.model.PlaceSearchRequestParams
-keepclassmembers class com.facebook.places.model.PlaceSearchRequestParams {
   *** getCategories(...);
   *** getDistance(...);
   *** getFields(...);
   *** getLimit(...);
   *** getSearchText(...);
}

-keep class com.facebook.places.internal.BleScannerImpl
-keepclassmembers class com.facebook.places.internal.BleScannerImpl {
   *** getErrorCode(...);
   *** getScanResults(...);
   *** initAndCheckEligibility(...);
   *** startScanning(...);
   *** stopScanning(...);
}

-keep class com.facebook.places.internal.BleScannerLegacy
-keepclassmembers class com.facebook.places.internal.BleScannerLegacy {
   *** getErrorCode(...);
   *** getScanResults(...);
   *** initAndCheckEligibility(...);
   *** startScanning(...);
   *** stopScanning(...);
}

-keep class com.facebook.places.internal.BluetoothScanResult
-keepclassmembers class com.facebook.places.internal.BluetoothScanResult {
   <init>(...);
}

-keep class com.facebook.places.internal.BleScanner
-keepclassmembers class com.facebook.places.internal.BleScanner {
}

-keep class com.facebook.places.internal.LocationScanner
-keepclassmembers class com.facebook.places.internal.LocationScanner {
}

-keep class com.facebook.places.internal.WifiScanner
-keepclassmembers class com.facebook.places.internal.WifiScanner {
}

-keep class com.facebook.places.internal.LocationPackage
-keepclassmembers class com.facebook.places.internal.LocationPackage {
   <init>(...);
}

-keep class com.facebook.places.internal.LocationPackageManager$Listener
-keepclassmembers class com.facebook.places.internal.LocationPackageManager$Listener {
}

-keep class mono.com.facebook.places.internal.LocationPackageManager_ListenerImplementor
-keepclassmembers class mono.com.facebook.places.internal.LocationPackageManager_ListenerImplementor {
}

-keep class com.facebook.places.internal.LocationPackageManager
-keepclassmembers class com.facebook.places.internal.LocationPackageManager {
   <init>(...);
   *** requestLocationPackage(...);
}

-keep class com.facebook.places.internal.LocationPackageRequestParams$Builder
-keepclassmembers class com.facebook.places.internal.LocationPackageRequestParams$Builder {
   <init>(...);
   *** build(...);
   *** setBluetoothFlushResultsTimeoutMs(...);
   *** setBluetoothMaxScanResults(...);
   *** setBluetoothScanDurationMs(...);
   *** setBluetoothScanEnabled(...);
   *** setLastLocationMaxAgeMs(...);
   *** setLocationMaxAccuracyMeters(...);
   *** setLocationProviders(...);
   *** setLocationRequestTimeoutMs(...);
   *** setLocationScanEnabled(...);
   *** setWifiActiveScanAllowed(...);
   *** setWifiActiveScanForced(...);
   *** setWifiMaxScanResults(...);
   *** setWifiScanEnabled(...);
   *** setWifiScanMaxAgeMs(...);
   *** setWifiScanTimeoutMs(...);
}

-keep class com.facebook.places.internal.LocationPackageRequestParams
-keepclassmembers class com.facebook.places.internal.LocationPackageRequestParams {
   *** getBluetoothFlushResultsTimeoutMs(...);
   *** getBluetoothMaxScanResults(...);
   *** getBluetoothScanDurationMs(...);
   *** isBluetoothScanEnabled(...);
   *** isLocationScanEnabled(...);
   *** isWifiActiveScanAllowed(...);
   *** isWifiActiveScanForced(...);
   *** isWifiScanEnabled(...);
   *** getLastLocationMaxAgeMs(...);
   *** getLocationMaxAccuracyMeters(...);
   *** getLocationRequestTimeoutMs(...);
   *** getWifiMaxScanResults(...);
   *** getWifiScanMaxAgeMs(...);
   *** getWifiScanTimeoutMs(...);
   *** getLocationProviders(...);
}

-keep class com.facebook.places.internal.LocationScannerImpl
-keepclassmembers class com.facebook.places.internal.LocationScannerImpl {
   <init>(...);
   *** getLocation(...);
   *** initAndCheckEligibility(...);
   *** onLocationChanged(...);
   *** onProviderDisabled(...);
   *** onProviderEnabled(...);
   *** onStatusChanged(...);
}

-keep class com.facebook.places.internal.ScannerException$Type
-keepclassmembers class com.facebook.places.internal.ScannerException$Type {
   *** valueOf(...);
   *** values(...);
}

-keep class com.facebook.places.internal.ScannerException
-keepclassmembers class com.facebook.places.internal.ScannerException {
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class com.facebook.places.internal.ScannerFactory
-keepclassmembers class com.facebook.places.internal.ScannerFactory {
   <init>(...);
   *** newBleScanner(...);
   *** newLocationScanner(...);
   *** newWifiScanner(...);
}

-keep class com.facebook.places.internal.WifiScannerImpl
-keepclassmembers class com.facebook.places.internal.WifiScannerImpl {
   *** getConnectedWifi(...);
   *** isWifiScanningEnabled(...);
   *** getWifiScans(...);
   *** initAndCheckEligibility(...);
}

-keep class com.facebook.places.internal.WifiScanResult
-keepclassmembers class com.facebook.places.internal.WifiScanResult {
   <init>(...);
   <init>(...);
}

# ACW for Xamarin.Facebook.Share.Android
-keep class com.facebook.internal.CollectionMapper$Collection
-keepclassmembers class com.facebook.internal.CollectionMapper$Collection {
}

-keep class com.facebook.internal.CollectionMapper$OnErrorListener
-keepclassmembers class com.facebook.internal.CollectionMapper$OnErrorListener {
}

-keep class mono.com.facebook.internal.CollectionMapper_OnErrorListenerImplementor
-keepclassmembers class mono.com.facebook.internal.CollectionMapper_OnErrorListenerImplementor {
}

-keep class com.facebook.internal.CollectionMapper$OnMapperCompleteListener
-keepclassmembers class com.facebook.internal.CollectionMapper$OnMapperCompleteListener {
}

-keep class com.facebook.internal.CollectionMapper$OnMapValueCompleteListener
-keepclassmembers class com.facebook.internal.CollectionMapper$OnMapValueCompleteListener {
}

-keep class com.facebook.internal.CollectionMapper$ValueMapper
-keepclassmembers class com.facebook.internal.CollectionMapper$ValueMapper {
}

-keep class com.facebook.internal.CollectionMapper
-keepclassmembers class com.facebook.internal.CollectionMapper {
   *** iterate(...);
}

-keep class com.facebook.internal.Mutable
-keepclassmembers class com.facebook.internal.Mutable {
   <init>(...);
}

-keep class com.facebook.share.DeviceShareDialog$Result
-keepclassmembers class com.facebook.share.DeviceShareDialog$Result {
   <init>(...);
}

-keep class com.facebook.share.DeviceShareDialog
-keepclassmembers class com.facebook.share.DeviceShareDialog {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getOrderedModeHandlers(...);
   *** canShowImpl(...);
   *** createBaseAppCall(...);
   *** registerCallbackImpl(...);
   *** showImpl(...);
}

-keep class com.facebook.share.BuildConfig
-keepclassmembers class com.facebook.share.BuildConfig {
   <init>(...);
}

-keep class com.facebook.share.Share
-keepclassmembers class com.facebook.share.Share {
   <init>(...);
}

-keep class com.facebook.share.ShareApi$10
-keepclassmembers class com.facebook.share.ShareApi$10 {
   *** onCompleted(...);
}

-keep class com.facebook.share.ShareApi$11
-keepclassmembers class com.facebook.share.ShareApi$11 {
   *** onComplete(...);
   *** onError(...);
}

-keep class com.facebook.share.ShareApi$12
-keepclassmembers class com.facebook.share.ShareApi$12 {
   *** onCompleted(...);
}

-keep class com.facebook.share.ShareApi
-keepclassmembers class com.facebook.share.ShareApi {
   <init>(...);
   *** getGraphNode(...);
   *** setGraphNode(...);
   *** getMessage(...);
   *** setMessage(...);
   *** getShareContent(...);
   *** canShare(...);
   *** share(...);
   *** share(...);
}

-keep class com.facebook.share.internal.AppInviteDialogFeature
-keepclassmembers class com.facebook.share.internal.AppInviteDialogFeature {
   *** getAction(...);
   *** getMinVersion(...);
   *** valueOf(...);
   *** values(...);
}

-keep class com.facebook.share.internal.GameRequestValidation
-keepclassmembers class com.facebook.share.internal.GameRequestValidation {
   <init>(...);
   *** validate(...);
}

-keep class com.facebook.share.internal.MessageDialogFeature
-keepclassmembers class com.facebook.share.internal.MessageDialogFeature {
   *** getAction(...);
   *** getMinVersion(...);
   *** valueOf(...);
   *** values(...);
}

-keep class com.facebook.share.internal.OpenGraphMessageDialogFeature
-keepclassmembers class com.facebook.share.internal.OpenGraphMessageDialogFeature {
   *** getAction(...);
   *** getMinVersion(...);
   *** valueOf(...);
   *** values(...);
}

-keep class com.facebook.share.internal.VideoUploader
-keepclassmembers class com.facebook.share.internal.VideoUploader {
   <init>(...);
   *** uploadAsync(...);
   *** uploadAsyncWithProgressCallback(...);
   *** uploadAsyncWithProgressCallback(...);
}

-keep class com.facebook.share.widget.DeviceShareButton
-keepclassmembers class com.facebook.share.widget.DeviceShareButton {
   *** setEnabled(...);
   <init>(...);
   <init>(...);
   *** getDefaultRequestCode(...);
   *** getShareContent(...);
   *** setShareContent(...);
   *** getShareOnClickListener(...);
   *** registerCallback(...);
   *** registerCallback(...);
}

-keep class com.facebook.share.widget.ShareButtonBase
-keepclassmembers class com.facebook.share.widget.ShareButtonBase {
   *** setEnabled(...);
   <init>(...);
   *** getDialog(...);
   *** getShareContent(...);
   *** setShareContent(...);
   *** getShareOnClickListener(...);
   *** canShare(...);
   *** registerCallback(...);
   *** registerCallback(...);
   *** setRequestCode(...);
}

-keep class com.facebook.share.widget.AppInviteDialog$Result
-keepclassmembers class com.facebook.share.widget.AppInviteDialog$Result {
   <init>(...);
   *** getData(...);
}

-keep class com.facebook.share.widget.AppInviteDialog
-keepclassmembers class com.facebook.share.widget.AppInviteDialog {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getOrderedModeHandlers(...);
   *** canShow(...);
   *** createBaseAppCall(...);
   *** registerCallbackImpl(...);
   *** show(...);
   *** show(...);
   *** show(...);
   *** show(...);
}

-keep class com.facebook.share.widget.CreateAppGroupDialog$Result
-keepclassmembers class com.facebook.share.widget.CreateAppGroupDialog$Result {
   *** getId(...);
}

-keep class com.facebook.share.widget.CreateAppGroupDialog
-keepclassmembers class com.facebook.share.widget.CreateAppGroupDialog {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getOrderedModeHandlers(...);
   *** canShow(...);
   *** createBaseAppCall(...);
   *** registerCallbackImpl(...);
   *** show(...);
   *** show(...);
   *** show(...);
}

-keep class com.facebook.share.widget.GameRequestDialog$Result
-keepclassmembers class com.facebook.share.widget.GameRequestDialog$Result {
   *** getRequestId(...);
   *** getRequestRecipients(...);
}

-keep class com.facebook.share.widget.GameRequestDialog
-keepclassmembers class com.facebook.share.widget.GameRequestDialog {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getOrderedModeHandlers(...);
   *** canShow(...);
   *** createBaseAppCall(...);
   *** registerCallbackImpl(...);
   *** show(...);
   *** show(...);
   *** show(...);
}

-keep class com.facebook.share.widget.JoinAppGroupDialog$Result
-keepclassmembers class com.facebook.share.widget.JoinAppGroupDialog$Result {
   *** getData(...);
}

-keep class com.facebook.share.widget.JoinAppGroupDialog
-keepclassmembers class com.facebook.share.widget.JoinAppGroupDialog {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getOrderedModeHandlers(...);
   *** canShow(...);
   *** createBaseAppCall(...);
   *** registerCallbackImpl(...);
   *** show(...);
   *** show(...);
   *** show(...);
}

-keep class com.facebook.share.widget.MessageDialog
-keepclassmembers class com.facebook.share.widget.MessageDialog {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getOrderedModeHandlers(...);
   *** getShouldFailOnDataError(...);
   *** setShouldFailOnDataError(...);
   *** canShow(...);
   *** createBaseAppCall(...);
   *** registerCallbackImpl(...);
   *** show(...);
   *** show(...);
   *** show(...);
}

-keep class com.facebook.share.widget.SendButton
-keepclassmembers class com.facebook.share.widget.SendButton {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getDefaultRequestCode(...);
   *** getDialog(...);
}

-keep class com.facebook.share.widget.ShareButton
-keepclassmembers class com.facebook.share.widget.ShareButton {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getDefaultRequestCode(...);
   *** getDialog(...);
}

-keep class com.facebook.share.widget.ShareButtonBase
-keepclassmembers class com.facebook.share.widget.ShareButtonBase {
   *** getDialog(...);
   *** getDefaultRequestCode(...);
}

-keep class com.facebook.share.model.AppInviteContent$Builder$Destination
-keepclassmembers class com.facebook.share.model.AppInviteContent$Builder$Destination {
   *** equalsName(...);
   *** valueOf(...);
   *** values(...);
}

-keep class com.facebook.share.model.AppInviteContent$Builder
-keepclassmembers class com.facebook.share.model.AppInviteContent$Builder {
   *** readFrom(...);
   <init>(...);
   *** build(...);
   *** readFrom(...);
   *** setApplinkUrl(...);
   *** setDestination(...);
   *** setPreviewImageUrl(...);
   *** setPromotionDetails(...);
}

-keep class com.facebook.share.model.AppInviteContent
-keepclassmembers class com.facebook.share.model.AppInviteContent {
   *** getApplinkUrl(...);
   *** getDestination(...);
   *** getPreviewImageUrl(...);
   *** getPromotionCode(...);
   *** getPromotionText(...);
   *** describeContents(...);
   *** writeToParcel(...);
}

